; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\keil_output\goertzel.o --asm_dir=.\keil_output\ --list_dir=.\keil_output\ --depend=.\keil_output\goertzel.d --cpu=Cortex-M4.fp --apcs=interwork -O3 -Otime --diag_suppress=9931 -I..\..\..\chip_5411x\inc -I..\..\..\brd_xpresso54114\inc -I..\..\..\..\..\..\COMMON\SRC\CMSIS_DSP_4_5\inc -IC:\Users\emh203\Documents\GitHub\ESC-M4\CM4_TEST\PROJECTS\KEIL\CM4_TEST_XPRESSO54114\prj_xpresso54114\keil\CM4_TEST_XPRESSO54114\RTE\_iflash_nxp_lpcxpresso_lpc5411X -IC:\Keil_v5\ARM\PACK\Keil\LPC54000_DFP\2.1.0\LPCOpen\lpc5411x\chip_5411x\inc -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=522 -DCHIP_LPC5411X -DCHIP_LPC5411X -DCORE_M4 -DARM_MATH_CM4 -D__FPU_PRESENT=1 -DBOARD=2 -DABI=1 -DBUILD_CONFIG=3 -DCORE_M4 --omf_browse=.\keil_output\goertzel.crf ..\..\..\..\..\..\COMMON\SRC\TEST\Goertzel.c]
                          THUMB

                          AREA ||i.InitGoertzel_f32||, CODE, READONLY, ALIGN=1

                  InitGoertzel_f32 PROC
;;;15     
;;;16     void InitGoertzel_f32(Goertzel_f32_t * G,float Frequency,float SampleRate, uint32_t BlockSize)
000000  b570              PUSH     {r4-r6,lr}
;;;17     {
000002  460d              MOV      r5,r1
000004  ed2d8b02          VPUSH    {d8}
000008  eeb08a60          VMOV.F32 s16,s1
00000c  4604              MOV      r4,r0
;;;18     	float w = 2.0f * (Frequency/SampleRate);
00000e  eec00a08          VDIV.F32 s1,s0,s16
000012  eeb00a00          VMOV.F32 s0,#2.00000000
000016  ee608a80          VMUL.F32 s17,s1,s0
;;;19     
;;;20     	G->Cos_w = cosf(w);
00001a  eeb00a68          VMOV.F32 s0,s17
00001e  f7fffffe          BL       __hardfp_cosf
000022  ed840a00          VSTR     s0,[r4,#0]
;;;21     	G->Sin_w = -1 * sinf(w);
000026  eeb00a68          VMOV.F32 s0,s17
00002a  f7fffffe          BL       __hardfp_sinf
00002e  eeb10a40          VNEG.F32 s0,s0
000032  ed840a01          VSTR     s0,[r4,#4]
;;;22     	G->SampleRate = SampleRate;
000036  ed848a03          VSTR     s16,[r4,#0xc]
;;;23     	G->BlockSize = BlockSize;
00003a  60a5              STR      r5,[r4,#8]
;;;24     }
00003c  ecbd8b02          VPOP     {d8}
000040  bd70              POP      {r4-r6,pc}
;;;25     
                          ENDP


                          AREA ||i.ProcessGoertzel_f32_Power||, CODE, READONLY, ALIGN=2

                  ProcessGoertzel_f32_Power PROC
;;;28     #endif
;;;29      float ProcessGoertzel_f32_Power(Goertzel_f32_t * G, float *x)
000000  ed9f0a13          VLDR     s0,|L2.80|
;;;30     {
;;;31     	float sn = 0;
;;;32     	float sn_1 = 0;
;;;33     	float sn_2 = 0;
;;;34     
;;;35     	for(int n = 0;n < G->BlockSize; n++)
;;;36     	{
;;;37     		  sn = x[n] + 2*(G->Cos_w)*sn_1 - sn_2;
000004  6882              LDR      r2,[r0,#8]
000006  ed902a00          VLDR     s4,[r0,#0]
00000a  eef00a40          VMOV.F32 s1,s0                 ;33
00000e  2a00              CMP      r2,#0                 ;35
000010  bf1c              ITT      NE
000012  eeb01a00          VMOVNE.F32 s2,#2.00000000
000016  ee221a01          VMULNE.F32 s2,s4,s2
00001a  d00b              BEQ      |L2.52|
                  |L2.28|
00001c  ecf11a01          VLDM     r1!,{s3}
;;;38     
;;;39     		  sn_2 = sn_1;
;;;40     		  sn_1 = sn;
000020  1e52              SUBS     r2,r2,#1
000022  ee411a00          VMLA.F32 s3,s2,s0              ;37
000026  ee711ae0          VSUB.F32 s3,s3,s1              ;37
00002a  eef00a40          VMOV.F32 s1,s0                 ;39
00002e  eeb00a61          VMOV.F32 s0,s3
000032  d1f3              BNE      |L2.28|
                  |L2.52|
000034  eeb01a60          VMOV.F32 s2,s1
;;;41     	}
;;;42     
;;;43     	float Re = G->Cos_w * sn_1 - sn_2;
;;;44     	float Im = G->Sin_w * sn_1;
000038  edd00a01          VLDR     s1,[r0,#4]
00003c  ee121a00          VNMLS.F32 s2,s4,s0              ;43
000040  ee600a80          VMUL.F32 s1,s1,s0
;;;45     
;;;46     	return Re*Re + Im*Im;
000044  ee210a01          VMUL.F32 s0,s2,s2
000048  ee000aa0          VMLA.F32 s0,s1,s1
;;;47     }
00004c  4770              BX       lr
                          ENDP

00004e  0000              DCW      0x0000
                  |L2.80|
000050  00000000          DCFS     0x00000000 ; 0

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\..\\..\\..\\COMMON\\SRC\\TEST\\Goertzel.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___10_Goertzel_c_01081806____REV16|
#line 129 "..\\..\\..\\chip_5411x\\inc\\core_cmInstr.h"
|__asm___10_Goertzel_c_01081806____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___10_Goertzel_c_01081806____REVSH|
#line 144
|__asm___10_Goertzel_c_01081806____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
