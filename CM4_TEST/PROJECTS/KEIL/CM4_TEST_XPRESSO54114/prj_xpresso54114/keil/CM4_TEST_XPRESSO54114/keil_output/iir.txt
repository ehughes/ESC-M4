; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\keil_output\iir.o --asm_dir=.\keil_output\ --list_dir=.\keil_output\ --depend=.\keil_output\iir.d --cpu=Cortex-M4.fp --apcs=interwork -O3 -Otime --diag_suppress=9931 -I..\..\..\chip_5411x\inc -I..\..\..\brd_xpresso54114\inc -I..\..\..\..\..\..\COMMON\SRC\CMSIS_DSP_4_5\inc -IC:\Users\emh203\Documents\GitHub\ESC-M4\CM4_TEST\PROJECTS\KEIL\CM4_TEST_XPRESSO54114\prj_xpresso54114\keil\CM4_TEST_XPRESSO54114\RTE\_iflash_nxp_lpcxpresso_lpc5411X -IC:\Keil_v5\ARM\PACK\Keil\LPC54000_DFP\2.1.0\LPCOpen\lpc5411x\chip_5411x\inc -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=522 -DCHIP_LPC5411X -DCHIP_LPC5411X -DCORE_M4 -DARM_MATH_CM4 -D__FPU_PRESENT=1 -DBOARD=2 -DABI=1 -DBUILD_CONFIG=3 -DCORE_M4 --omf_browse=.\keil_output\iir.crf ..\..\..\..\..\..\COMMON\SRC\TEST\IIR.c]
                          THUMB

                          AREA ||i.Compute_f32_IIR||, CODE, READONLY, ALIGN=1

                  Compute_f32_IIR PROC
;;;69     #endif
;;;70      void Compute_f32_IIR(f32_IIR *MyIIR,float Input,float *Output)
000000  edd00a00          VLDR     s1,[r0,#0]
;;;71     {
;;;72         float acc;
;;;73         /* acc =  b0 * x[n] + b1 * x[n-1] + b2 * x[n-2] + a1 * y[n-1] + a2 * y[n-2] */
;;;74         /* acc =  b0 * x[n] */
;;;75         acc = Input * MyIIR->Coef.b[0];
;;;76         /* acc +=  b1 * x[n-1] */
;;;77         acc +=  MyIIR->State.Xn1 * MyIIR->Coef.b[1];
000004  ed901a05          VLDR     s2,[r0,#0x14]
000008  edd01a01          VLDR     s3,[r0,#4]
00000c  ee600a80          VMUL.F32 s1,s1,s0              ;75
;;;78         /* Arc +=  b[2] * x[n-2] */
;;;79         acc +=  MyIIR->State.Xn2 * MyIIR->Coef.b[2];
000010  ed902a02          VLDR     s4,[r0,#8]
;;;80         /* acc +=  a1 * y[n-1] */
;;;81         acc += MyIIR->State.Yn1 * MyIIR->Coef.a[0];
;;;82         /* acc +=  a2 * y[n-2] */
;;;83         acc += MyIIR->State.Yn2 * MyIIR->Coef.a[1];
000014  edd02a04          VLDR     s5,[r0,#0x10]
000018  ee410a21          VMLA.F32 s1,s2,s3              ;77
00001c  edd01a06          VLDR     s3,[r0,#0x18]         ;79
000020  ee410a82          VMLA.F32 s1,s3,s4              ;79
000024  edd01a07          VLDR     s3,[r0,#0x1c]         ;81
000028  ed902a03          VLDR     s4,[r0,#0xc]          ;81
00002c  ee410a82          VMLA.F32 s1,s3,s4              ;81
000030  ed902a08          VLDR     s4,[r0,#0x20]
;;;84     
;;;85     
;;;86         MyIIR->State.Yn2 =  MyIIR->State.Yn1;
000034  edc01a08          VSTR     s3,[r0,#0x20]
000038  ee420a22          VMLA.F32 s1,s4,s5              ;83
;;;87         MyIIR->State.Yn1 =  acc;
00003c  edc00a07          VSTR     s1,[r0,#0x1c]
;;;88         MyIIR->State.Xn2 =  MyIIR->State.Xn1;
000040  ed801a06          VSTR     s2,[r0,#0x18]
;;;89         MyIIR->State.Xn1 =  Input;
000044  ed800a05          VSTR     s0,[r0,#0x14]
;;;90         *Output = acc;
000048  edc10a00          VSTR     s1,[r1,#0]
;;;91     }
00004c  4770              BX       lr
;;;92     
                          ENDP


                          AREA ||i.Compute_q31_t_IIR||, CODE, READONLY, ALIGN=1

                  Compute_q31_t_IIR PROC
;;;43     #endif
;;;44      void Compute_q31_t_IIR(q31_t_IIR *MyIIR,q31_t Input,q31_t *Output)
000000  e92d4ff7          PUSH     {r0-r2,r4-r11,lr}
;;;45     {
000004  4604              MOV      r4,r0
;;;46         q63_t acc = 0;
;;;47         /* acc =  b0 * x[n] + b1 * x[n-1] + b2 * x[n-2] + a1 * y[n-1] + a2 * y[n-2] */
;;;48         /* acc =  b0 * x[n] */
;;;49         acc = (q63_t) Input * MyIIR->Coef.b[0];
000006  6800              LDR      r0,[r0,#0]
000008  460f              MOV      r7,r1                 ;45
00000a  b082              SUB      sp,sp,#8              ;45
;;;50         /* acc +=  b1 * x[n-1] */
;;;51         acc += (q63_t) MyIIR->State.Xn1 * MyIIR->Coef.b[1];
00000c  69a3              LDR      r3,[r4,#0x18]
00000e  fb870200          SMULL    r0,r2,r7,r0           ;49
000012  9300              STR      r3,[sp,#0]
000014  6861              LDR      r1,[r4,#4]
000016  e9d46508          LDRD     r6,r5,[r4,#0x20]
00001a  fbc30201          SMLAL    r0,r2,r3,r1
;;;52         /* Arc +=  b[2] * x[n-2] */
;;;53         acc += (q63_t) MyIIR->State.Xn2 * MyIIR->Coef.b[2];
00001e  68a3              LDR      r3,[r4,#8]
000020  69e1              LDR      r1,[r4,#0x1c]
000022  f04f0c00          MOV      r12,#0
000026  fbc10203          SMLAL    r0,r2,r1,r3
00002a  68e1              LDR      r1,[r4,#0xc]
00002c  ea4f7ae5          ASR      r10,r5,#31
000030  fba69801          UMULL    r9,r8,r6,r1
000034  fba5be01          UMULL    r11,lr,r5,r1
000038  fb0c8801          MLA      r8,r12,r1,r8
00003c  17cb              ASRS     r3,r1,#31
00003e  fb068803          MLA      r8,r6,r3,r8
000042  fb0ae101          MLA      r1,r10,r1,lr
000046  fb051303          MLA      r3,r5,r3,r1
00004a  eb18010b          ADDS     r1,r8,r11
00004e  eb4378e8          ADC      r8,r3,r8,ASR #31
000052  180b              ADDS     r3,r1,r0
000054  eb480802          ADC      r8,r8,r2
000058  6920              LDR      r0,[r4,#0x10]
00005a  e9d4210a          LDRD     r2,r1,[r4,#0x28]
00005e  fba2ba00          UMULL    r11,r10,r2,r0
000062  fba1be00          UMULL    r11,lr,r1,r0
000066  fb0cac00          MLA      r12,r12,r0,r10
00006a  ea4f79e0          ASR      r9,r0,#31
00006e  ea4f7ae1          ASR      r10,r1,#31
000072  fb0ae000          MLA      r0,r10,r0,lr
000076  fb02c209          MLA      r2,r2,r9,r12
00007a  fb010009          MLA      r0,r1,r9,r0
00007e  eb12010b          ADDS     r1,r2,r11
000082  eb4072e2          ADC      r2,r0,r2,ASR #31
000086  18c8              ADDS     r0,r1,r3
000088  eb420108          ADC      r1,r2,r8
;;;54         /* acc +=  a1 * y[n-1] */
;;;55         acc += mult32x64(MyIIR->State.Yn1 , MyIIR->Coef.a[0]);
;;;56         /* acc +=  a2 * y[n-2] */
;;;57         acc += mult32x64(MyIIR->State.Yn2 , MyIIR->Coef.a[1]);
;;;58         acc = acc << MyIIR->Coef.PostShift; //DO the post multiply!
00008c  f9942014          LDRSB    r2,[r4,#0x14]
000090  f7fffffe          BL       __aeabi_llsl
000094  e9c40108          STRD     r0,r1,[r4,#0x20]
000098  e9c4650a          STRD     r6,r5,[r4,#0x28]
00009c  9b00              LDR      r3,[sp,#0]
;;;59         //Store the previous outputs in High precision form
;;;60         MyIIR->State.Yn2 =  MyIIR->State.Yn1;
;;;61         MyIIR->State.Yn1 =  acc;
;;;62         MyIIR->State.Xn2 =  MyIIR->State.Xn1;
;;;63         MyIIR->State.Xn1 =  Input;
;;;64         *Output = acc>>31;
00009e  0fc0              LSRS     r0,r0,#31
0000a0  e9c47306          STRD     r7,r3,[r4,#0x18]      ;58
0000a4  ea400041          ORR      r0,r0,r1,LSL #1
0000a8  9904              LDR      r1,[sp,#0x10]
0000aa  6008              STR      r0,[r1,#0]
;;;65     }
0000ac  b005              ADD      sp,sp,#0x14
0000ae  e8bd8ff0          POP      {r4-r11,pc}
;;;66     
                          ENDP


                          AREA ||i.DesignAudioBiquadIIR_f32||, CODE, READONLY, ALIGN=3

                  DesignAudioBiquadIIR_f32 PROC
;;;259    
;;;260    void DesignAudioBiquadIIR_f32(f32_IIR_Coefficients *C,// Pointer to the IIR Structure
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;261                                    uint8_t FilterType,
;;;262                                    float Fs, //System Sample Rate
;;;263                                    float f0, //("wherever it's happenin', man."  Center Frequency or
;;;264                                    //Corner Frequency, or shelf midpoint frequency, depending
;;;265                                    //on which filter type.  The "significant frequency".)*/
;;;266                                    float Q,//(the EE kind of definition, except for peakingEQ in which A*Q is
;;;267                                    // the classic EE Q.  That adjustment in definition was made so that
;;;268                                    // a boost of N dB followed by a cut of N dB for identical Q and
;;;269                                    // f0/Fs results in a precisely flat unity gain filter or "wire".)*/
;;;270                                    float dBgain// (used only for peaking and shelving filters)
;;;271                                   )
;;;272    {
000004  4606              MOV      r6,r0
000006  ed2d8b0e          VPUSH    {d8-d14}
00000a  eef08a60          VMOV.F32 s17,s1
00000e  eeb08a40          VMOV.F32 s16,s0
000012  eeb0ca41          VMOV.F32 s24,s2
000016  460f              MOV      r7,r1
;;;273        A = sqrt(pow(10,(dBgain/40)));
000018  eddf0afd          VLDR     s1,|L3.1040|
00001c  ee810aa0          VDIV.F32 s0,s3,s1
000020  ee100a10          VMOV     r0,s0
000024  f7fffffe          BL       __aeabi_f2d
000028  ec410b11          VMOV     d1,r0,r1
00002c  ed9f0bfa          VLDR     d0,|L3.1048|
000030  f7fffffe          BL       __hardfp_pow
000034  f7fffffe          BL       __hardfp_sqrt
;;;274    
;;;275        if(Fs == 0) Fs = 1000;
000038  eeb58ac0          VCMPE.F32 s16,#0.0
00003c  4df8              LDR      r5,|L3.1056|
00003e  eef1fa10          VMRS     APSR_nzcv,FPSCR
000042  ed850b00          VSTR     d0,[r5,#0]            ;273
000046  bf08              IT       EQ
000048  ed9f8af6          VLDREQ   s16,|L3.1060|
;;;276    
;;;277        if(Q == 0) Q = 1.0;
00004c  eeb5cac0          VCMPE.F32 s24,#0.0
000050  eef1fa10          VMRS     APSR_nzcv,FPSCR
000054  bf08              IT       EQ
000056  eeb7ca00          VMOVEQ.F32 s24,#1.00000000
;;;278    
;;;279        w0 = 2.0*3.141592654*f0/Fs;
00005a  ee180a10          VMOV     r0,s16
00005e  f7fffffe          BL       __aeabi_f2d
000062  ec410b19          VMOV     d9,r0,r1
000066  ee180a90          VMOV     r0,s17
00006a  f7fffffe          BL       __aeabi_f2d
00006e  ed9f1bee          VLDR     d1,|L3.1064|
000072  ec532b11          VMOV     r2,r3,d1
000076  f7fffffe          BL       __aeabi_dmul
00007a  ec532b19          VMOV     r2,r3,d9
00007e  f7fffffe          BL       __aeabi_ddiv
000082  ec410b18          VMOV     d8,r0,r1
;;;280        alpha = sin(w0)/(2.0 * Q);
000086  ee1c0a10          VMOV     r0,s24
00008a  ed858b02          VSTR     d8,[r5,#8]            ;279
00008e  f7fffffe          BL       __aeabi_f2d
000092  ed9fbbe7          VLDR     d11,|L3.1072|
000096  ec532b1b          VMOV     r2,r3,d11
00009a  f7fffffe          BL       __aeabi_dmul
00009e  ec410b19          VMOV     d9,r0,r1
0000a2  eeb00a48          VMOV.F32 s0,s16
0000a6  eef00a68          VMOV.F32 s1,s17
0000aa  f7fffffe          BL       __hardfp_sin
0000ae  ec532b19          VMOV     r2,r3,d9
0000b2  ec510b10          VMOV     r0,r1,d0
0000b6  f7fffffe          BL       __aeabi_ddiv
0000ba  ec410b1a          VMOV     d10,r0,r1
0000be  ed85ab04          VSTR     d10,[r5,#0x10]
;;;281    
;;;282        switch(FilterType)
;;;283            {
;;;284                default:
;;;285                case BIQUAD_LOW_PASS_FILTER	:
;;;286                    b0 =  (1 - cos(w0))/2;
0000c2  ed9fdbdd          VLDR     d13,|L3.1080|
;;;287                    b1 =   1 - cos(w0);
;;;288                    b2 =  (1 - cos(w0))/2;
;;;289                    a0 =   1 + alpha;
;;;290                    a1 =  -2*cos(w0);
;;;291                    a2 =   1 - alpha;
;;;292                    break;
;;;293    
;;;294                case   BIQUAD_HIGH_PASS_FILTER 	:
;;;295                    b0 =  (1 + cos(w0))/2;
;;;296                    b1 = -(1 + cos(w0));
;;;297                    b2 =  (1 + cos(w0))/2;
;;;298                    a0 =   1 + alpha;
;;;299                    a1 =  -2*cos(w0);
;;;300                    a2 =   1 - alpha;
;;;301                    break;
;;;302    
;;;303                case         BIQUAD_BAND_PASS_FILTER_CONSTANT_SKIRT_GAIN_PEAKGAIN_Q	:
;;;304                    b0 =   Q*alpha;
;;;305                    b1 =   0;
0000c6  ed9febde          VLDR     d14,|L3.1088|
0000ca  ed9f9bdf          VLDR     d9,|L3.1096|
0000ce  ed9f8be0          VLDR     d8,|L3.1104|
0000d2  4ce1              LDR      r4,|L3.1112|
0000d4  2f09              CMP      r7,#9                 ;282
0000d6  d206              BCS      |L3.230|
0000d8  e8dff007          TBB      [pc,r7]               ;282
0000dc  0551a1d9          DCB      0x05,0x51,0xa1,0xd9
0000e0  fefdfcfb          DCB      0xfe,0xfd,0xfc,0xfb
0000e4  fa00              DCB      0xfa,0x00
                  |L3.230|
0000e6  ed950b02          VLDR     d0,[r5,#8]            ;286
0000ea  f7fffffe          BL       __hardfp_cos
0000ee  ec532b18          VMOV     r2,r3,d8              ;286
0000f2  ec510b10          VMOV     r0,r1,d0              ;286
0000f6  f7fffffe          BL       __aeabi_drsub
0000fa  ec532b1d          VMOV     r2,r3,d13             ;286
0000fe  f7fffffe          BL       __aeabi_dmul
000102  e9c40106          STRD     r0,r1,[r4,#0x18]      ;286
000106  ed950b02          VLDR     d0,[r5,#8]            ;287
00010a  f7fffffe          BL       __hardfp_cos
00010e  ec532b18          VMOV     r2,r3,d8              ;287
000112  ec510b10          VMOV     r0,r1,d0              ;287
000116  f7fffffe          BL       __aeabi_drsub
00011a  e9c40108          STRD     r0,r1,[r4,#0x20]      ;287
00011e  ed950b02          VLDR     d0,[r5,#8]            ;288
000122  f7fffffe          BL       __hardfp_cos
000126  ec532b18          VMOV     r2,r3,d8              ;288
00012a  ec510b10          VMOV     r0,r1,d0              ;288
00012e  f7fffffe          BL       __aeabi_drsub
000132  ec532b1d          VMOV     r2,r3,d13             ;288
000136  f7fffffe          BL       __aeabi_dmul
00013a  e9c4010a          STRD     r0,r1,[r4,#0x28]      ;289
00013e  ed950b04          VLDR     d0,[r5,#0x10]         ;289
000142  ec532b18          VMOV     r2,r3,d8              ;289
000146  ec510b10          VMOV     r0,r1,d0              ;289
00014a  f7fffffe          BL       __aeabi_dadd
00014e  e9c40100          STRD     r0,r1,[r4,#0]         ;289
000152  ed950b02          VLDR     d0,[r5,#8]            ;290
000156  f7fffffe          BL       __hardfp_cos
00015a  ec532b19          VMOV     r2,r3,d9              ;290
00015e  ec510b10          VMOV     r0,r1,d0              ;290
000162  f7fffffe          BL       __aeabi_dmul
000166  e9c40102          STRD     r0,r1,[r4,#8]         ;290
00016a  ed950b04          VLDR     d0,[r5,#0x10]         ;291
00016e  ec510b18          VMOV     r0,r1,d8              ;291
000172  ec532b10          VMOV     r2,r3,d0              ;291
000176  f7fffffe          BL       __aeabi_dsub
00017a  f000b99f          B.W      |L3.1212|
00017e  ed950b02          VLDR     d0,[r5,#8]            ;295
000182  f7fffffe          BL       __hardfp_cos
000186  ec532b18          VMOV     r2,r3,d8              ;295
00018a  ec510b10          VMOV     r0,r1,d0              ;295
00018e  f7fffffe          BL       __aeabi_dadd
000192  ec532b1d          VMOV     r2,r3,d13             ;295
000196  f7fffffe          BL       __aeabi_dmul
00019a  e9c40106          STRD     r0,r1,[r4,#0x18]      ;295
00019e  ed950b02          VLDR     d0,[r5,#8]            ;296
0001a2  f7fffffe          BL       __hardfp_cos
0001a6  ed9f1bae          VLDR     d1,|L3.1120|
0001aa  ec510b10          VMOV     r0,r1,d0              ;296
0001ae  ec532b11          VMOV     r2,r3,d1              ;296
0001b2  f7fffffe          BL       __aeabi_drsub
0001b6  e9c40108          STRD     r0,r1,[r4,#0x20]      ;296
0001ba  ed950b02          VLDR     d0,[r5,#8]            ;297
0001be  f7fffffe          BL       __hardfp_cos
0001c2  ec532b18          VMOV     r2,r3,d8              ;297
0001c6  ec510b10          VMOV     r0,r1,d0              ;297
0001ca  f7fffffe          BL       __aeabi_dadd
0001ce  ec532b1d          VMOV     r2,r3,d13             ;297
0001d2  f7fffffe          BL       __aeabi_dmul
0001d6  e9c4010a          STRD     r0,r1,[r4,#0x28]      ;298
0001da  ed950b04          VLDR     d0,[r5,#0x10]         ;298
0001de  ec532b18          VMOV     r2,r3,d8              ;298
0001e2  ec510b10          VMOV     r0,r1,d0              ;298
0001e6  f7fffffe          BL       __aeabi_dadd
0001ea  e9c40100          STRD     r0,r1,[r4,#0]         ;298
0001ee  ed950b02          VLDR     d0,[r5,#8]            ;299
0001f2  f7fffffe          BL       __hardfp_cos
0001f6  ec532b19          VMOV     r2,r3,d9              ;299
0001fa  ec510b10          VMOV     r0,r1,d0              ;299
0001fe  f7fffffe          BL       __aeabi_dmul
000202  e9c40102          STRD     r0,r1,[r4,#8]         ;299
000206  ed950b04          VLDR     d0,[r5,#0x10]         ;300
00020a  ec510b18          VMOV     r0,r1,d8              ;300
00020e  ec532b10          VMOV     r2,r3,d0              ;300
000212  f7fffffe          BL       __aeabi_dsub
000216  e9c40104          STRD     r0,r1,[r4,#0x10]      ;300
00021a  f000bbed          B.W      |L3.2552|
00021e  ee1c0a10          VMOV     r0,s24                ;304
000222  f7fffffe          BL       __aeabi_f2d
000226  ec532b1a          VMOV     r2,r3,d10             ;304
00022a  f7fffffe          BL       __aeabi_dmul
00022e  e9c40106          STRD     r0,r1,[r4,#0x18]      ;304
;;;306                    b2 =  -Q*alpha;
000232  eeb10a4c          VNEG.F32 s0,s24
000236  ed84eb08          VSTR     d14,[r4,#0x20]        ;305
00023a  ee100a10          VMOV     r0,s0
00023e  f7fffffe          BL       __aeabi_f2d
000242  ec532b1a          VMOV     r2,r3,d10
000246  f7fffffe          BL       __aeabi_dmul
;;;307                    a0 =   1 + alpha;
00024a  e9c4010a          STRD     r0,r1,[r4,#0x28]
00024e  ec532b18          VMOV     r2,r3,d8
000252  ec510b1a          VMOV     r0,r1,d10
000256  f7fffffe          BL       __aeabi_dadd
00025a  e9c40100          STRD     r0,r1,[r4,#0]
;;;308                    a1 =  -2*cos(w0);
00025e  ed950b02          VLDR     d0,[r5,#8]
000262  f7fffffe          BL       __hardfp_cos
000266  ec532b19          VMOV     r2,r3,d9
00026a  ec510b10          VMOV     r0,r1,d0
00026e  f7fffffe          BL       __aeabi_dmul
000272  e9c40102          STRD     r0,r1,[r4,#8]
;;;309                    a2 =   1 - alpha;
000276  ed950b04          VLDR     d0,[r5,#0x10]
00027a  ec510b18          VMOV     r0,r1,d8
00027e  ec532b10          VMOV     r2,r3,d0
000282  f7fffffe          BL       __aeabi_dsub
000286  e9c40104          STRD     r0,r1,[r4,#0x10]
;;;310                    break;
00028a  f000bbb5          B.W      |L3.2552|
;;;311    
;;;312                case            BIQUAD_BAND_PASS_FILTER_CONSTANT_0_DB_PEAK_GAIN:
;;;313                    b0 =   alpha;
00028e  ed84ab06          VSTR     d10,[r4,#0x18]
;;;314                    b1 =   0;
000292  ed84eb08          VSTR     d14,[r4,#0x20]
;;;315                    b2 =  -alpha;
000296  ec510b1a          VMOV     r0,r1,d10
00029a  f7fffffe          BL       __aeabi_dneg
;;;316                    a0 =   1 + alpha;
00029e  e9c4010a          STRD     r0,r1,[r4,#0x28]
0002a2  ec532b18          VMOV     r2,r3,d8
0002a6  ec510b1a          VMOV     r0,r1,d10
0002aa  f7fffffe          BL       __aeabi_dadd
0002ae  e9c40100          STRD     r0,r1,[r4,#0]
;;;317                    a1 =  -2*cos(w0);
0002b2  ed950b02          VLDR     d0,[r5,#8]
0002b6  f7fffffe          BL       __hardfp_cos
0002ba  ec532b19          VMOV     r2,r3,d9
0002be  ec510b10          VMOV     r0,r1,d0
0002c2  f7fffffe          BL       __aeabi_dmul
0002c6  e9c40102          STRD     r0,r1,[r4,#8]
;;;318                    a2 =   1 - alpha;
0002ca  ed950b04          VLDR     d0,[r5,#0x10]
0002ce  e004              B        |L3.730|
0002d0  e244              B        |L3.1884|
0002d2  e0f7              B        |L3.1220|
0002d4  e075              B        |L3.962|
0002d6  e03c              B        |L3.850|
0002d8  e009              B        |L3.750|
                  |L3.730|
0002da  ec532b10          VMOV     r2,r3,d0
0002de  ec510b18          VMOV     r0,r1,d8
0002e2  f7fffffe          BL       __aeabi_dsub
0002e6  e9c40104          STRD     r0,r1,[r4,#0x10]
;;;319                    break;
0002ea  f000bb85          B.W      |L3.2552|
                  |L3.750|
;;;320    
;;;321                case             BIQUAD_NOTCH_FILTER:
;;;322                    b0 =   1;
0002ee  ed848b06          VSTR     d8,[r4,#0x18]
;;;323                    b1 =  -2*cos(w0);
0002f2  ed950b02          VLDR     d0,[r5,#8]
0002f6  f7fffffe          BL       __hardfp_cos
0002fa  ec532b19          VMOV     r2,r3,d9
0002fe  ec510b10          VMOV     r0,r1,d0
000302  f7fffffe          BL       __aeabi_dmul
000306  e9c40108          STRD     r0,r1,[r4,#0x20]
;;;324                    b2 =   1;
00030a  ed848b0a          VSTR     d8,[r4,#0x28]
;;;325                    a0 =   1 + alpha;
00030e  ed950b04          VLDR     d0,[r5,#0x10]
000312  ec532b18          VMOV     r2,r3,d8
000316  ec510b10          VMOV     r0,r1,d0
00031a  f7fffffe          BL       __aeabi_dadd
00031e  e9c40100          STRD     r0,r1,[r4,#0]
;;;326                    a1 =  -2*cos(w0);
000322  ed950b02          VLDR     d0,[r5,#8]
000326  f7fffffe          BL       __hardfp_cos
00032a  ec532b19          VMOV     r2,r3,d9
00032e  ec510b10          VMOV     r0,r1,d0
000332  f7fffffe          BL       __aeabi_dmul
000336  e9c40102          STRD     r0,r1,[r4,#8]
;;;327                    a2 =   1 - alpha;
00033a  ed950b04          VLDR     d0,[r5,#0x10]
00033e  ec510b18          VMOV     r0,r1,d8
000342  ec532b10          VMOV     r2,r3,d0
000346  f7fffffe          BL       __aeabi_dsub
00034a  e9c40104          STRD     r0,r1,[r4,#0x10]
;;;328                    break;
00034e  f000bb53          B.W      |L3.2552|
                  |L3.850|
;;;329    
;;;330                case             BIQUAD_ALL_PASS_FILTER:
;;;331                    b0 =   1 - alpha;
000352  ec532b1a          VMOV     r2,r3,d10
000356  ec510b18          VMOV     r0,r1,d8
00035a  f7fffffe          BL       __aeabi_dsub
00035e  e9c40106          STRD     r0,r1,[r4,#0x18]
;;;332                    b1 =  -2*cos(w0);
000362  ed950b02          VLDR     d0,[r5,#8]
000366  f7fffffe          BL       __hardfp_cos
00036a  ec532b19          VMOV     r2,r3,d9
00036e  ec510b10          VMOV     r0,r1,d0
000372  f7fffffe          BL       __aeabi_dmul
;;;333                    b2 =   1 + alpha;
000376  e9c40108          STRD     r0,r1,[r4,#0x20]
00037a  ed950b04          VLDR     d0,[r5,#0x10]
00037e  ec532b18          VMOV     r2,r3,d8
000382  ec510b10          VMOV     r0,r1,d0
000386  f7fffffe          BL       __aeabi_dadd
00038a  e9c4010a          STRD     r0,r1,[r4,#0x28]
00038e  e9c40100          STRD     r0,r1,[r4,#0]
;;;334                    a0 =   1 + alpha;
;;;335                    a1 =  -2*cos(w0);
000392  ed950b02          VLDR     d0,[r5,#8]
000396  f7fffffe          BL       __hardfp_cos
00039a  ec532b19          VMOV     r2,r3,d9
00039e  ec510b10          VMOV     r0,r1,d0
0003a2  f7fffffe          BL       __aeabi_dmul
0003a6  e9c40102          STRD     r0,r1,[r4,#8]
;;;336                    a2 =   1 - alpha;
0003aa  ed950b04          VLDR     d0,[r5,#0x10]
0003ae  ec510b18          VMOV     r0,r1,d8
0003b2  ec532b10          VMOV     r2,r3,d0
0003b6  f7fffffe          BL       __aeabi_dsub
0003ba  e9c40104          STRD     r0,r1,[r4,#0x10]
;;;337                    break;
0003be  f000bb1b          B.W      |L3.2552|
                  |L3.962|
;;;338    
;;;339                case            BIQUAD_PEAKING_EQ:
;;;340                    b0 =   1 + alpha*A;
0003c2  ed950b00          VLDR     d0,[r5,#0]
0003c6  ec510b1a          VMOV     r0,r1,d10
0003ca  ec532b10          VMOV     r2,r3,d0
0003ce  f7fffffe          BL       __aeabi_dmul
0003d2  ec532b18          VMOV     r2,r3,d8
0003d6  f7fffffe          BL       __aeabi_dadd
0003da  e9c40106          STRD     r0,r1,[r4,#0x18]
;;;341                    b1 =  -2*cos(w0);
0003de  ed950b02          VLDR     d0,[r5,#8]
0003e2  f7fffffe          BL       __hardfp_cos
0003e6  ec532b19          VMOV     r2,r3,d9
0003ea  ec510b10          VMOV     r0,r1,d0
0003ee  f7fffffe          BL       __aeabi_dmul
0003f2  e9c40108          STRD     r0,r1,[r4,#0x20]
;;;342                    b2 =   1 - alpha*A;
0003f6  ed95ab00          VLDR     d10,[r5,#0]
0003fa  ed95bb04          VLDR     d11,[r5,#0x10]
0003fe  ec532b1a          VMOV     r2,r3,d10
000402  ec510b1b          VMOV     r0,r1,d11
000406  f7fffffe          BL       __aeabi_dmul
00040a  ec532b18          VMOV     r2,r3,d8
00040e  e02b              B        |L3.1128|
                  |L3.1040|
000410  42200000          DCFS     0x42200000 ; 40
                          DCD      0x00000000
                  |L3.1048|
000418  00000000          DCFD     0x4024000000000000 ; 10
00041c  40240000
                  |L3.1056|
                          DCD      ||.data||
                  |L3.1060|
000424  447a0000          DCFS     0x447a0000 ; 1000
                  |L3.1064|
000428  54524550          DCFD     0x401921fb54524550 ; 6.2831853080000002
00042c  401921fb
                  |L3.1072|
000430  00000000          DCFD     0x4000000000000000 ; 2
000434  40000000
                  |L3.1080|
000438  00000000          DCFD     0x3fe0000000000000 ; 0.5
00043c  3fe00000
                  |L3.1088|
000440  00000000          DCFD     0x0000000000000000 ; 0
000444  00000000
                  |L3.1096|
000448  00000000          DCFD     0xc000000000000000 ; -2
00044c  c0000000
                  |L3.1104|
000450  00000000          DCFD     0x3ff0000000000000 ; 1
000454  3ff00000
                  |L3.1112|
                          DCD      ||.bss||
                          DCD      0x00000000
                  |L3.1120|
000460  00000000          DCFD     0xbff0000000000000 ; -1
000464  bff00000
                  |L3.1128|
000468  f7fffffe          BL       __aeabi_drsub
;;;343                    a0 =   1 + alpha/A;
00046c  e9c4010a          STRD     r0,r1,[r4,#0x28]
000470  ec532b1a          VMOV     r2,r3,d10
000474  ec510b1b          VMOV     r0,r1,d11
000478  f7fffffe          BL       __aeabi_ddiv
00047c  ec532b18          VMOV     r2,r3,d8
000480  f7fffffe          BL       __aeabi_dadd
000484  e9c40100          STRD     r0,r1,[r4,#0]
;;;344                    a1 =  -2*cos(w0);
000488  ed950b02          VLDR     d0,[r5,#8]
00048c  f7fffffe          BL       __hardfp_cos
000490  ec532b19          VMOV     r2,r3,d9
000494  ec510b10          VMOV     r0,r1,d0
000498  f7fffffe          BL       __aeabi_dmul
00049c  e9c40102          STRD     r0,r1,[r4,#8]
;;;345                    a2 =   1 - alpha/A;
0004a0  ed950b00          VLDR     d0,[r5,#0]
0004a4  ec532b10          VMOV     r2,r3,d0
0004a8  ed950b04          VLDR     d0,[r5,#0x10]
0004ac  ec510b10          VMOV     r0,r1,d0
0004b0  f7fffffe          BL       __aeabi_ddiv
0004b4  ec532b18          VMOV     r2,r3,d8
0004b8  f7fffffe          BL       __aeabi_drsub
                  |L3.1212|
0004bc  e9c40104          STRD     r0,r1,[r4,#0x10]
0004c0  f000ba9a          B.W      |L3.2552|
                  |L3.1220|
;;;346                    break;
;;;347    
;;;348                case            BIQUAD_LOW_SHELF:
;;;349                    b0 =    A*( (A+1.0) - (A-1.0)*cos(w0) + 2.0*sqrt(A)*alpha );
0004c4  ed950b00          VLDR     d0,[r5,#0]
0004c8  f7fffffe          BL       __hardfp_sqrt
0004cc  ec532b1b          VMOV     r2,r3,d11
0004d0  ec510b10          VMOV     r0,r1,d0
0004d4  f7fffffe          BL       __aeabi_dmul
0004d8  ed951b04          VLDR     d1,[r5,#0x10]
0004dc  ec532b11          VMOV     r2,r3,d1
0004e0  f7fffffe          BL       __aeabi_dmul
0004e4  ec410b1d          VMOV     d13,r0,r1
0004e8  ed950b02          VLDR     d0,[r5,#8]
0004ec  f7fffffe          BL       __hardfp_cos
0004f0  ed95ab00          VLDR     d10,[r5,#0]
0004f4  eeb0ca40          VMOV.F32 s24,s0
0004f8  eef0ca60          VMOV.F32 s25,s1
0004fc  ec532b18          VMOV     r2,r3,d8
000500  ec510b1a          VMOV     r0,r1,d10
000504  f7fffffe          BL       __aeabi_dsub
000508  ec532b1c          VMOV     r2,r3,d12
00050c  f7fffffe          BL       __aeabi_dmul
000510  ec410b1c          VMOV     d12,r0,r1
000514  ec532b18          VMOV     r2,r3,d8
000518  ec510b1a          VMOV     r0,r1,d10
00051c  f7fffffe          BL       __aeabi_dadd
000520  ec532b1c          VMOV     r2,r3,d12
000524  f7fffffe          BL       __aeabi_dsub
000528  ec532b1d          VMOV     r2,r3,d13
00052c  f7fffffe          BL       __aeabi_dadd
000530  ec532b1a          VMOV     r2,r3,d10
000534  f7fffffe          BL       __aeabi_dmul
000538  e9c40106          STRD     r0,r1,[r4,#0x18]
;;;350                    b1 =  2.0*A*( (A-1.0) - (A+1.0)*cos(w0)                   );
00053c  ed950b02          VLDR     d0,[r5,#8]
000540  f7fffffe          BL       __hardfp_cos
000544  eeb01a40          VMOV.F32 s2,s0
000548  eef01a60          VMOV.F32 s3,s1
00054c  ed95ab00          VLDR     d10,[r5,#0]
000550  eeb0ca41          VMOV.F32 s24,s2
000554  eef0ca61          VMOV.F32 s25,s3
000558  ec532b18          VMOV     r2,r3,d8
00055c  ec510b1a          VMOV     r0,r1,d10
000560  f7fffffe          BL       __aeabi_dadd
000564  ec532b1c          VMOV     r2,r3,d12
000568  f7fffffe          BL       __aeabi_dmul
00056c  ec410b1c          VMOV     d12,r0,r1
000570  ec532b18          VMOV     r2,r3,d8
000574  ec510b1a          VMOV     r0,r1,d10
000578  f7fffffe          BL       __aeabi_dsub
00057c  ec532b1c          VMOV     r2,r3,d12
000580  f7fffffe          BL       __aeabi_dsub
000584  ec410b1c          VMOV     d12,r0,r1
000588  ec532b1b          VMOV     r2,r3,d11
00058c  ec510b1a          VMOV     r0,r1,d10
000590  f7fffffe          BL       __aeabi_dmul
000594  ec532b1c          VMOV     r2,r3,d12
000598  f7fffffe          BL       __aeabi_dmul
00059c  eeb00a4a          VMOV.F32 s0,s20
0005a0  eef00a6a          VMOV.F32 s1,s21
0005a4  e9c40108          STRD     r0,r1,[r4,#0x20]
;;;351                    b2 =    A*( (A+1.0) - (A-1.0)*cos(w0) - 2.0*sqrt(A)*alpha );
0005a8  f7fffffe          BL       __hardfp_sqrt
0005ac  ec532b1b          VMOV     r2,r3,d11
0005b0  ec510b10          VMOV     r0,r1,d0
0005b4  f7fffffe          BL       __aeabi_dmul
0005b8  ed951b04          VLDR     d1,[r5,#0x10]
0005bc  ec532b11          VMOV     r2,r3,d1
0005c0  f7fffffe          BL       __aeabi_dmul
0005c4  ec410b1d          VMOV     d13,r0,r1
0005c8  ed950b02          VLDR     d0,[r5,#8]
0005cc  f7fffffe          BL       __hardfp_cos
0005d0  ed95ab00          VLDR     d10,[r5,#0]
0005d4  eeb0ca40          VMOV.F32 s24,s0
0005d8  eef0ca60          VMOV.F32 s25,s1
0005dc  ec532b18          VMOV     r2,r3,d8
0005e0  ec510b1a          VMOV     r0,r1,d10
0005e4  f7fffffe          BL       __aeabi_dsub
0005e8  ec532b1c          VMOV     r2,r3,d12
0005ec  f7fffffe          BL       __aeabi_dmul
0005f0  ec410b1c          VMOV     d12,r0,r1
0005f4  ec532b18          VMOV     r2,r3,d8
0005f8  ec510b1a          VMOV     r0,r1,d10
0005fc  f7fffffe          BL       __aeabi_dadd
000600  ec532b1c          VMOV     r2,r3,d12
000604  f7fffffe          BL       __aeabi_dsub
000608  ec532b1d          VMOV     r2,r3,d13
00060c  f7fffffe          BL       __aeabi_dsub
000610  ec532b1a          VMOV     r2,r3,d10
000614  f7fffffe          BL       __aeabi_dmul
000618  eeb00a4a          VMOV.F32 s0,s20
00061c  eef00a6a          VMOV.F32 s1,s21
000620  e9c4010a          STRD     r0,r1,[r4,#0x28]
;;;352                    a0 =        (A+1.0) + (A-1.0)*cos(w0) + 2.0*sqrt(A)*alpha;
000624  f7fffffe          BL       __hardfp_sqrt
000628  ec532b1b          VMOV     r2,r3,d11
00062c  ec510b10          VMOV     r0,r1,d0
000630  f7fffffe          BL       __aeabi_dmul
000634  ed951b04          VLDR     d1,[r5,#0x10]
000638  ec532b11          VMOV     r2,r3,d1
00063c  f7fffffe          BL       __aeabi_dmul
000640  ec410b1a          VMOV     d10,r0,r1
000644  ed950b02          VLDR     d0,[r5,#8]
000648  f7fffffe          BL       __hardfp_cos
00064c  ed95db00          VLDR     d13,[r5,#0]
000650  eeb0ca40          VMOV.F32 s24,s0
000654  eef0ca60          VMOV.F32 s25,s1
000658  ec532b18          VMOV     r2,r3,d8
00065c  ec510b1d          VMOV     r0,r1,d13
000660  f7fffffe          BL       __aeabi_dsub
000664  ec532b1c          VMOV     r2,r3,d12
000668  f7fffffe          BL       __aeabi_dmul
00066c  ec410b1c          VMOV     d12,r0,r1
000670  ec532b18          VMOV     r2,r3,d8
000674  ec510b1d          VMOV     r0,r1,d13
000678  f7fffffe          BL       __aeabi_dadd
00067c  ec532b1c          VMOV     r2,r3,d12
000680  f7fffffe          BL       __aeabi_dadd
000684  ec532b1a          VMOV     r2,r3,d10
000688  f7fffffe          BL       __aeabi_dadd
00068c  e9c40100          STRD     r0,r1,[r4,#0]
;;;353                    a1 =   -2.0*( (A-1.0) + (A+1.0)*cos(w0)                   );
000690  ed950b02          VLDR     d0,[r5,#8]
000694  f7fffffe          BL       __hardfp_cos
000698  eeb01a40          VMOV.F32 s2,s0
00069c  eef01a60          VMOV.F32 s3,s1
0006a0  ed95cb00          VLDR     d12,[r5,#0]
0006a4  eeb0aa41          VMOV.F32 s20,s2
0006a8  eef0aa61          VMOV.F32 s21,s3
0006ac  ec532b18          VMOV     r2,r3,d8
0006b0  ec510b1c          VMOV     r0,r1,d12
0006b4  f7fffffe          BL       __aeabi_dadd
0006b8  ec532b1a          VMOV     r2,r3,d10
0006bc  f7fffffe          BL       __aeabi_dmul
0006c0  ec410b1a          VMOV     d10,r0,r1
0006c4  ec532b18          VMOV     r2,r3,d8
0006c8  ec510b1c          VMOV     r0,r1,d12
0006cc  f7fffffe          BL       __aeabi_dsub
0006d0  ec532b1a          VMOV     r2,r3,d10
0006d4  f7fffffe          BL       __aeabi_dadd
0006d8  ec532b19          VMOV     r2,r3,d9
0006dc  f7fffffe          BL       __aeabi_dmul
0006e0  eeb00a4c          VMOV.F32 s0,s24
0006e4  eef00a6c          VMOV.F32 s1,s25
0006e8  e9c40102          STRD     r0,r1,[r4,#8]
;;;354                    a2 =        (A+1.0) + (A-1.0)*cos(w0) - 2.0*sqrt(A)*alpha;
0006ec  f7fffffe          BL       __hardfp_sqrt
0006f0  ec532b1b          VMOV     r2,r3,d11
0006f4  ec510b10          VMOV     r0,r1,d0
0006f8  f7fffffe          BL       __aeabi_dmul
0006fc  ed951b04          VLDR     d1,[r5,#0x10]
000700  ec532b11          VMOV     r2,r3,d1
000704  f7fffffe          BL       __aeabi_dmul
000708  ec410b19          VMOV     d9,r0,r1
00070c  ed950b02          VLDR     d0,[r5,#8]
000710  f7fffffe          BL       __hardfp_cos
000714  ed95bb00          VLDR     d11,[r5,#0]
000718  eeb0aa40          VMOV.F32 s20,s0
00071c  eef0aa60          VMOV.F32 s21,s1
000720  ec532b18          VMOV     r2,r3,d8
000724  ec510b1b          VMOV     r0,r1,d11
000728  f7fffffe          BL       __aeabi_dsub
00072c  ec532b1a          VMOV     r2,r3,d10
000730  f7fffffe          BL       __aeabi_dmul
000734  ec410b1a          VMOV     d10,r0,r1
000738  ec532b18          VMOV     r2,r3,d8
00073c  ec510b1b          VMOV     r0,r1,d11
000740  f7fffffe          BL       __aeabi_dadd
000744  ec532b1a          VMOV     r2,r3,d10
000748  f7fffffe          BL       __aeabi_dadd
00074c  ec532b19          VMOV     r2,r3,d9
000750  f7fffffe          BL       __aeabi_dsub
000754  e9c40104          STRD     r0,r1,[r4,#0x10]
;;;355                    break;
000758  f000b94e          B.W      |L3.2552|
                  |L3.1884|
;;;356    
;;;357                case           BIQUAD_HIGH_SHELF:
;;;358                    b0 =    A*( (A+1) + (A-1)*cos(w0) + 2*sqrt(A)*alpha );
00075c  ed950b00          VLDR     d0,[r5,#0]
000760  f7fffffe          BL       __hardfp_sqrt
000764  ec532b1b          VMOV     r2,r3,d11
000768  ec510b10          VMOV     r0,r1,d0
00076c  f7fffffe          BL       __aeabi_dmul
000770  ed951b04          VLDR     d1,[r5,#0x10]
000774  ec532b11          VMOV     r2,r3,d1
000778  f7fffffe          BL       __aeabi_dmul
00077c  ec410b1d          VMOV     d13,r0,r1
000780  ed950b02          VLDR     d0,[r5,#8]
000784  f7fffffe          BL       __hardfp_cos
000788  ed95ab00          VLDR     d10,[r5,#0]
00078c  eeb0ca40          VMOV.F32 s24,s0
000790  eef0ca60          VMOV.F32 s25,s1
000794  ec532b18          VMOV     r2,r3,d8
000798  ec510b1a          VMOV     r0,r1,d10
00079c  f7fffffe          BL       __aeabi_dsub
0007a0  ec532b1c          VMOV     r2,r3,d12
0007a4  f7fffffe          BL       __aeabi_dmul
0007a8  ec410b1c          VMOV     d12,r0,r1
0007ac  ec532b18          VMOV     r2,r3,d8
0007b0  ec510b1a          VMOV     r0,r1,d10
0007b4  f7fffffe          BL       __aeabi_dadd
0007b8  ec532b1c          VMOV     r2,r3,d12
0007bc  f7fffffe          BL       __aeabi_dadd
0007c0  ec532b1d          VMOV     r2,r3,d13
0007c4  f7fffffe          BL       __aeabi_dadd
0007c8  ec532b1a          VMOV     r2,r3,d10
0007cc  f7fffffe          BL       __aeabi_dmul
0007d0  e9c40106          STRD     r0,r1,[r4,#0x18]
;;;359                    b1 = -2*A*( (A-1) + (A+1)*cos(w0)                   );
0007d4  ed950b02          VLDR     d0,[r5,#8]
0007d8  f7fffffe          BL       __hardfp_cos
0007dc  eeb01a40          VMOV.F32 s2,s0
0007e0  eef01a60          VMOV.F32 s3,s1
0007e4  ed95ab00          VLDR     d10,[r5,#0]
0007e8  eeb0ca41          VMOV.F32 s24,s2
0007ec  eef0ca61          VMOV.F32 s25,s3
0007f0  ec532b18          VMOV     r2,r3,d8
0007f4  ec510b1a          VMOV     r0,r1,d10
0007f8  f7fffffe          BL       __aeabi_dadd
0007fc  ec532b1c          VMOV     r2,r3,d12
000800  f7fffffe          BL       __aeabi_dmul
000804  ec410b1c          VMOV     d12,r0,r1
000808  ec532b18          VMOV     r2,r3,d8
00080c  ec510b1a          VMOV     r0,r1,d10
000810  f7fffffe          BL       __aeabi_dsub
000814  ec532b1c          VMOV     r2,r3,d12
000818  f7fffffe          BL       __aeabi_dadd
00081c  ec410b1c          VMOV     d12,r0,r1
000820  ec532b19          VMOV     r2,r3,d9
000824  ec510b1a          VMOV     r0,r1,d10
000828  f7fffffe          BL       __aeabi_dmul
00082c  ec532b1c          VMOV     r2,r3,d12
000830  f7fffffe          BL       __aeabi_dmul
000834  eeb00a4a          VMOV.F32 s0,s20
000838  eef00a6a          VMOV.F32 s1,s21
00083c  e9c40108          STRD     r0,r1,[r4,#0x20]
;;;360                    b2 =    A*( (A+1) + (A-1)*cos(w0) - 2*sqrt(A)*alpha );
000840  f7fffffe          BL       __hardfp_sqrt
000844  ec532b1b          VMOV     r2,r3,d11
000848  ec510b10          VMOV     r0,r1,d0
00084c  f7fffffe          BL       __aeabi_dmul
000850  ed951b04          VLDR     d1,[r5,#0x10]
000854  ec532b11          VMOV     r2,r3,d1
000858  f7fffffe          BL       __aeabi_dmul
00085c  ec410b1a          VMOV     d10,r0,r1
000860  ed950b02          VLDR     d0,[r5,#8]
000864  f7fffffe          BL       __hardfp_cos
000868  eeb01a40          VMOV.F32 s2,s0
00086c  eef01a60          VMOV.F32 s3,s1
000870  ed959b00          VLDR     d9,[r5,#0]
000874  eeb0ca41          VMOV.F32 s24,s2
000878  eef0ca61          VMOV.F32 s25,s3
00087c  ec532b18          VMOV     r2,r3,d8
000880  ec510b19          VMOV     r0,r1,d9
000884  f7fffffe          BL       __aeabi_dsub
000888  ec532b1c          VMOV     r2,r3,d12
00088c  f7fffffe          BL       __aeabi_dmul
000890  ec410b1c          VMOV     d12,r0,r1
000894  ec532b18          VMOV     r2,r3,d8
000898  ec510b19          VMOV     r0,r1,d9
00089c  f7fffffe          BL       __aeabi_dadd
0008a0  ec532b1c          VMOV     r2,r3,d12
0008a4  f7fffffe          BL       __aeabi_dadd
0008a8  ec532b1a          VMOV     r2,r3,d10
0008ac  f7fffffe          BL       __aeabi_dsub
0008b0  ec532b19          VMOV     r2,r3,d9
0008b4  f7fffffe          BL       __aeabi_dmul
0008b8  eeb00a49          VMOV.F32 s0,s18
0008bc  eef00a69          VMOV.F32 s1,s19
0008c0  e9c4010a          STRD     r0,r1,[r4,#0x28]
;;;361                    a0 =        (A+1) - (A-1)*cos(w0) + 2*sqrt(A)*alpha;
0008c4  f7fffffe          BL       __hardfp_sqrt
0008c8  ec532b1b          VMOV     r2,r3,d11
0008cc  ec510b10          VMOV     r0,r1,d0
0008d0  f7fffffe          BL       __aeabi_dmul
0008d4  ed951b04          VLDR     d1,[r5,#0x10]
0008d8  ec532b11          VMOV     r2,r3,d1
0008dc  f7fffffe          BL       __aeabi_dmul
0008e0  ec410b19          VMOV     d9,r0,r1
0008e4  ed950b02          VLDR     d0,[r5,#8]
0008e8  f7fffffe          BL       __hardfp_cos
0008ec  ed95cb00          VLDR     d12,[r5,#0]
0008f0  eeb0aa40          VMOV.F32 s20,s0
0008f4  eef0aa60          VMOV.F32 s21,s1
0008f8  ec532b18          VMOV     r2,r3,d8
0008fc  ec510b1c          VMOV     r0,r1,d12
000900  f7fffffe          BL       __aeabi_dsub
000904  ec532b1a          VMOV     r2,r3,d10
000908  f7fffffe          BL       __aeabi_dmul
00090c  ec410b1a          VMOV     d10,r0,r1
000910  ec532b18          VMOV     r2,r3,d8
000914  ec510b1c          VMOV     r0,r1,d12
000918  f7fffffe          BL       __aeabi_dadd
00091c  ec532b1a          VMOV     r2,r3,d10
000920  f7fffffe          BL       __aeabi_dsub
000924  ec532b19          VMOV     r2,r3,d9
000928  f7fffffe          BL       __aeabi_dadd
00092c  e9c40100          STRD     r0,r1,[r4,#0]
;;;362                    a1 =    2*( (A-1) - (A+1)*cos(w0)                   );
000930  ed950b02          VLDR     d0,[r5,#8]
000934  f7fffffe          BL       __hardfp_cos
000938  eeb01a40          VMOV.F32 s2,s0
00093c  eef01a60          VMOV.F32 s3,s1
000940  ed95ab00          VLDR     d10,[r5,#0]
000944  eeb09a41          VMOV.F32 s18,s2
000948  eef09a61          VMOV.F32 s19,s3
00094c  ec532b18          VMOV     r2,r3,d8
000950  ec510b1a          VMOV     r0,r1,d10
000954  f7fffffe          BL       __aeabi_dadd
000958  ec532b19          VMOV     r2,r3,d9
00095c  f7fffffe          BL       __aeabi_dmul
000960  ec410b19          VMOV     d9,r0,r1
000964  ec532b18          VMOV     r2,r3,d8
000968  ec510b1a          VMOV     r0,r1,d10
00096c  f7fffffe          BL       __aeabi_dsub
000970  ec532b19          VMOV     r2,r3,d9
000974  f7fffffe          BL       __aeabi_dsub
000978  ec532b1b          VMOV     r2,r3,d11
00097c  f7fffffe          BL       __aeabi_dmul
000980  eeb00a4a          VMOV.F32 s0,s20
000984  eef00a6a          VMOV.F32 s1,s21
000988  e9c40102          STRD     r0,r1,[r4,#8]
;;;363                    a2 =        (A+1) - (A-1)*cos(w0) - 2*sqrt(A)*alpha;
00098c  f7fffffe          BL       __hardfp_sqrt
000990  ec532b1b          VMOV     r2,r3,d11
000994  ec510b10          VMOV     r0,r1,d0
000998  f7fffffe          BL       __aeabi_dmul
00099c  ed951b04          VLDR     d1,[r5,#0x10]
0009a0  ec532b11          VMOV     r2,r3,d1
0009a4  f7fffffe          BL       __aeabi_dmul
0009a8  ec410b19          VMOV     d9,r0,r1
0009ac  ed950b02          VLDR     d0,[r5,#8]
0009b0  f7fffffe          BL       __hardfp_cos
0009b4  ed95bb00          VLDR     d11,[r5,#0]
0009b8  eeb0aa40          VMOV.F32 s20,s0
0009bc  eef0aa60          VMOV.F32 s21,s1
0009c0  ec532b18          VMOV     r2,r3,d8
0009c4  ec510b1b          VMOV     r0,r1,d11
0009c8  f7fffffe          BL       __aeabi_dsub
0009cc  ec532b1a          VMOV     r2,r3,d10
0009d0  f7fffffe          BL       __aeabi_dmul
0009d4  ec410b1a          VMOV     d10,r0,r1
0009d8  ec532b18          VMOV     r2,r3,d8
0009dc  ec510b1b          VMOV     r0,r1,d11
0009e0  f7fffffe          BL       __aeabi_dadd
0009e4  ec532b1a          VMOV     r2,r3,d10
0009e8  f7fffffe          BL       __aeabi_dsub
0009ec  ec532b19          VMOV     r2,r3,d9
0009f0  f7fffffe          BL       __aeabi_dsub
0009f4  e9c40104          STRD     r0,r1,[r4,#0x10]
                  |L3.2552|
;;;364                    break;
;;;365            }
;;;366    
;;;367        /*
;;;368        The most straight forward implementation would be the "Direct Form 1"
;;;369        (Eq 2):
;;;370    
;;;371            y[n] = (b0/a0)*x[n] + (b1/a0)*x[n-1] + (b2/a0)*x[n-2]
;;;372                                - (a1/a0)*y[n-1] - (a2/a0)*y[n-2]            (Eq 4)
;;;373    
;;;374        but to make things easier on the chip,  we will do all adds:
;;;375    
;;;376        	    y[n] = (b0/a0)*x[n] + (b1/a0)*x[n-1] + (b2/a0)*x[n-2]
;;;377                                + (a1/a0)*y[n-1] + (a2/a0)*y[n-2]            (Eq 4)
;;;378    
;;;379                                THis means that 2 feedback coef. have to be inverted
;;;380    
;;;381          */
;;;382        b0 = b0/a0;
0009f8  ed949b00          VLDR     d9,[r4,#0]
0009fc  ed940b06          VLDR     d0,[r4,#0x18]
000a00  ec532b19          VMOV     r2,r3,d9
000a04  ec510b10          VMOV     r0,r1,d0
000a08  f7fffffe          BL       __aeabi_ddiv
000a0c  e9c40106          STRD     r0,r1,[r4,#0x18]
;;;383        b1 = b1/a0;
000a10  ed940b08          VLDR     d0,[r4,#0x20]
000a14  ec532b19          VMOV     r2,r3,d9
000a18  ec510b10          VMOV     r0,r1,d0
000a1c  f7fffffe          BL       __aeabi_ddiv
000a20  e9c40108          STRD     r0,r1,[r4,#0x20]
;;;384        b2 = b2/a0;
000a24  ed940b0a          VLDR     d0,[r4,#0x28]
000a28  ec532b19          VMOV     r2,r3,d9
000a2c  ec510b10          VMOV     r0,r1,d0
000a30  f7fffffe          BL       __aeabi_ddiv
000a34  e9c4010a          STRD     r0,r1,[r4,#0x28]
;;;385        a1 = a1/a0;
000a38  ed940b02          VLDR     d0,[r4,#8]
000a3c  ec532b19          VMOV     r2,r3,d9
000a40  ec510b10          VMOV     r0,r1,d0
000a44  f7fffffe          BL       __aeabi_ddiv
;;;386        a2 = a2/a0;
000a48  ed940b04          VLDR     d0,[r4,#0x10]
000a4c  ec410b1a          VMOV     d10,r0,r1             ;385
000a50  ec532b19          VMOV     r2,r3,d9
000a54  ec510b10          VMOV     r0,r1,d0
000a58  f7fffffe          BL       __aeabi_ddiv
000a5c  ec410b19          VMOV     d9,r0,r1
;;;387        a0 = 1.0;
000a60  ed848b00          VSTR     d8,[r4,#0]
;;;388        a1 = a1 * -1.0;
000a64  ec510b1a          VMOV     r0,r1,d10
000a68  f7fffffe          BL       __aeabi_dneg
000a6c  ec410b18          VMOV     d8,r0,r1
;;;389        a2 = a2 * -1.0;
000a70  ec510b19          VMOV     r0,r1,d9
000a74  ed848b02          VSTR     d8,[r4,#8]            ;388
000a78  f7fffffe          BL       __aeabi_dneg
000a7c  e9c40104          STRD     r0,r1,[r4,#0x10]
;;;390    
;;;391        C->a[0] =  a1;
000a80  ec510b18          VMOV     r0,r1,d8
000a84  f7fffffe          BL       __aeabi_d2f
;;;392        C->a[1] =  a2;
000a88  60f0              STR      r0,[r6,#0xc]
000a8a  ed940b04          VLDR     d0,[r4,#0x10]
000a8e  ec510b10          VMOV     r0,r1,d0
000a92  f7fffffe          BL       __aeabi_d2f
;;;393        C->b[0] =  b0;
000a96  6130              STR      r0,[r6,#0x10]
000a98  ed940b06          VLDR     d0,[r4,#0x18]
000a9c  ec510b10          VMOV     r0,r1,d0
000aa0  f7fffffe          BL       __aeabi_d2f
;;;394        C->b[1] =  b1;
000aa4  6030              STR      r0,[r6,#0]
000aa6  ed940b08          VLDR     d0,[r4,#0x20]
000aaa  ec510b10          VMOV     r0,r1,d0
000aae  f7fffffe          BL       __aeabi_d2f
;;;395        C->b[2] =  b2;
000ab2  6070              STR      r0,[r6,#4]
000ab4  ed940b0a          VLDR     d0,[r4,#0x28]
000ab8  ec510b10          VMOV     r0,r1,d0
000abc  f7fffffe          BL       __aeabi_d2f
000ac0  60b0              STR      r0,[r6,#8]
;;;396        return;
;;;397    }
000ac2  ecbd8b0e          VPOP     {d8-d14}
000ac6  e8bd81f0          POP      {r4-r8,pc}
;;;398    
                          ENDP


                          AREA ||i.DesignAudioBiquadIIR_q31_t||, CODE, READONLY, ALIGN=3

                  DesignAudioBiquadIIR_q31_t PROC
;;;108    
;;;109    void DesignAudioBiquadIIR_q31_t(q31_t_IIR_Coefficients *C,// Pointer to the IIR Structure
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;110                                    uint8_t FilterType,
;;;111                                    float Fs, //System Sample Rate
;;;112                                    float f0, //("wherever it's happenin', man."  Center Frequency or
;;;113                                    //Corner Frequency, or shelf midpoint frequency, depending
;;;114                                    //on which filter type.  The "significant frequency".)*/
;;;115                                    float Q,//(the EE kind of definition, except for peakingEQ in which A*Q is
;;;116                                    // the classic EE Q.  That adjustment in definition was made so that
;;;117                                    // a boost of N dB followed by a cut of N dB for identical Q and
;;;118                                    // f0/Fs results in a precisely flat unity gain filter or "wire".)*/
;;;119                                    float dBgain// (used only for peaking and shelving filters)
;;;120                                   )
;;;121    {
000004  4605              MOV      r5,r0
000006  ed2d8b0e          VPUSH    {d8-d14}
00000a  eef08a60          VMOV.F32 s17,s1
00000e  eeb08a40          VMOV.F32 s16,s0
000012  eeb0da41          VMOV.F32 s26,s2
000016  460e              MOV      r6,r1
;;;122        A = sqrt(pow(10,(dBgain/40)));
000018  eddf0afd          VLDR     s1,|L4.1040|
00001c  ee810aa0          VDIV.F32 s0,s3,s1
000020  ee100a10          VMOV     r0,s0
000024  f7fffffe          BL       __aeabi_f2d
000028  ec410b11          VMOV     d1,r0,r1
00002c  ed9f0bfa          VLDR     d0,|L4.1048|
000030  f7fffffe          BL       __hardfp_pow
000034  f7fffffe          BL       __hardfp_sqrt
;;;123    
;;;124        if(Fs == 0) Fs = 1000;
000038  eeb58ac0          VCMPE.F32 s16,#0.0
00003c  4cf8              LDR      r4,|L4.1056|
00003e  eef1fa10          VMRS     APSR_nzcv,FPSCR
000042  ed840b00          VSTR     d0,[r4,#0]            ;122
000046  bf08              IT       EQ
000048  ed9f8af6          VLDREQ   s16,|L4.1060|
;;;125    
;;;126        if(Q == 0) Q = 1.0;
00004c  eeb5dac0          VCMPE.F32 s26,#0.0
000050  eef1fa10          VMRS     APSR_nzcv,FPSCR
000054  bf08              IT       EQ
000056  eeb7da00          VMOVEQ.F32 s26,#1.00000000
;;;127    
;;;128        w0 = 2.0*3.141592654*f0/Fs;
00005a  ee180a10          VMOV     r0,s16
00005e  f7fffffe          BL       __aeabi_f2d
000062  ec410b19          VMOV     d9,r0,r1
000066  ee180a90          VMOV     r0,s17
00006a  f7fffffe          BL       __aeabi_f2d
00006e  ed9f1bee          VLDR     d1,|L4.1064|
000072  ec532b11          VMOV     r2,r3,d1
000076  f7fffffe          BL       __aeabi_dmul
00007a  ec532b19          VMOV     r2,r3,d9
00007e  f7fffffe          BL       __aeabi_ddiv
000082  ec410b19          VMOV     d9,r0,r1
;;;129        alpha = sin(w0)/(2.0 * Q);
000086  ee1d0a10          VMOV     r0,s26
00008a  ed849b02          VSTR     d9,[r4,#8]            ;128
00008e  f7fffffe          BL       __aeabi_f2d
000092  ed9fcbe7          VLDR     d12,|L4.1072|
000096  ec532b1c          VMOV     r2,r3,d12
00009a  f7fffffe          BL       __aeabi_dmul
00009e  ec410b18          VMOV     d8,r0,r1
0000a2  eeb00a49          VMOV.F32 s0,s18
0000a6  eef00a69          VMOV.F32 s1,s19
0000aa  f7fffffe          BL       __hardfp_sin
0000ae  ec532b18          VMOV     r2,r3,d8
0000b2  ec510b10          VMOV     r0,r1,d0
0000b6  f7fffffe          BL       __aeabi_ddiv
0000ba  ec410b19          VMOV     d9,r0,r1
0000be  ed849b04          VSTR     d9,[r4,#0x10]
;;;130    
;;;131        switch(FilterType)
;;;132            {
;;;133                default:
;;;134                case BIQUAD_LOW_PASS_FILTER	:
;;;135                    b0 =  (1 - cos(w0))/2;
0000c2  ed9febdd          VLDR     d14,|L4.1080|
;;;136                    b1 =   1 - cos(w0);
;;;137                    b2 =  (1 - cos(w0))/2;
;;;138                    a0 =   1 + alpha;
;;;139                    a1 =  -2*cos(w0);
0000c6  ed9f8bde          VLDR     d8,|L4.1088|
0000ca  f8df937c          LDR      r9,|L4.1096|
;;;140                    a2 =   1 - alpha;
;;;141                    break;
;;;142    
;;;143                case   BIQUAD_HIGH_PASS_FILTER 	:
;;;144                    b0 =  (1 + cos(w0))/2;
;;;145                    b1 = -(1 + cos(w0));
;;;146                    b2 =  (1 + cos(w0))/2;
;;;147                    a0 =   1 + alpha;
;;;148                    a1 =  -2*cos(w0);
;;;149                    a2 =   1 - alpha;
;;;150                    break;
;;;151    
;;;152                case         BIQUAD_BAND_PASS_FILTER_CONSTANT_SKIRT_GAIN_PEAKGAIN_Q	:
;;;153                    b0 =   Q*alpha;
;;;154                    b1 =   0;
0000ce  ed9fbbe0          VLDR     d11,|L4.1104|
0000d2  ed9fabe1          VLDR     d10,|L4.1112|
0000d6  2e09              CMP      r6,#9                 ;131
0000d8  d206              BCS      |L4.232|
0000da  e8dff006          TBB      [pc,r6]               ;131
0000de  0551              DCB      0x05,0x51
0000e0  a1d9fcfb          DCB      0xa1,0xd9,0xfc,0xfb
0000e4  faf9f800          DCB      0xfa,0xf9,0xf8,0x00
                  |L4.232|
0000e8  ed940b02          VLDR     d0,[r4,#8]            ;135
0000ec  f7fffffe          BL       __hardfp_cos
0000f0  ec532b1a          VMOV     r2,r3,d10             ;135
0000f4  ec510b10          VMOV     r0,r1,d0              ;135
0000f8  f7fffffe          BL       __aeabi_drsub
0000fc  ec532b1e          VMOV     r2,r3,d14             ;135
000100  f7fffffe          BL       __aeabi_dmul
000104  e9c90106          STRD     r0,r1,[r9,#0x18]      ;135
000108  ed940b02          VLDR     d0,[r4,#8]            ;136
00010c  f7fffffe          BL       __hardfp_cos
000110  ec532b1a          VMOV     r2,r3,d10             ;136
000114  ec510b10          VMOV     r0,r1,d0              ;136
000118  f7fffffe          BL       __aeabi_drsub
00011c  e9c90108          STRD     r0,r1,[r9,#0x20]      ;136
000120  ed940b02          VLDR     d0,[r4,#8]            ;137
000124  f7fffffe          BL       __hardfp_cos
000128  ec532b1a          VMOV     r2,r3,d10             ;137
00012c  ec510b10          VMOV     r0,r1,d0              ;137
000130  f7fffffe          BL       __aeabi_drsub
000134  ec532b1e          VMOV     r2,r3,d14             ;137
000138  f7fffffe          BL       __aeabi_dmul
00013c  e9c9010a          STRD     r0,r1,[r9,#0x28]      ;138
000140  ed940b04          VLDR     d0,[r4,#0x10]         ;138
000144  ec532b1a          VMOV     r2,r3,d10             ;138
000148  ec510b10          VMOV     r0,r1,d0              ;138
00014c  f7fffffe          BL       __aeabi_dadd
000150  e9c90100          STRD     r0,r1,[r9,#0]         ;138
000154  ed940b02          VLDR     d0,[r4,#8]            ;139
000158  f7fffffe          BL       __hardfp_cos
00015c  ec532b18          VMOV     r2,r3,d8              ;139
000160  ec510b10          VMOV     r0,r1,d0              ;139
000164  f7fffffe          BL       __aeabi_dmul
000168  e9c90102          STRD     r0,r1,[r9,#8]         ;139
00016c  ed940b04          VLDR     d0,[r4,#0x10]         ;140
000170  ec510b1a          VMOV     r0,r1,d10             ;140
000174  ec532b10          VMOV     r2,r3,d0              ;140
000178  f7fffffe          BL       __aeabi_dsub
00017c  f000b9a0          B.W      |L4.1216|
000180  ed940b02          VLDR     d0,[r4,#8]            ;144
000184  f7fffffe          BL       __hardfp_cos
000188  ec532b1a          VMOV     r2,r3,d10             ;144
00018c  ec510b10          VMOV     r0,r1,d0              ;144
000190  f7fffffe          BL       __aeabi_dadd
000194  ec532b1e          VMOV     r2,r3,d14             ;144
000198  f7fffffe          BL       __aeabi_dmul
00019c  e9c90106          STRD     r0,r1,[r9,#0x18]      ;144
0001a0  ed940b02          VLDR     d0,[r4,#8]            ;145
0001a4  f7fffffe          BL       __hardfp_cos
0001a8  ed9f1bad          VLDR     d1,|L4.1120|
0001ac  ec510b10          VMOV     r0,r1,d0              ;145
0001b0  ec532b11          VMOV     r2,r3,d1              ;145
0001b4  f7fffffe          BL       __aeabi_drsub
0001b8  e9c90108          STRD     r0,r1,[r9,#0x20]      ;145
0001bc  ed940b02          VLDR     d0,[r4,#8]            ;146
0001c0  f7fffffe          BL       __hardfp_cos
0001c4  ec532b1a          VMOV     r2,r3,d10             ;146
0001c8  ec510b10          VMOV     r0,r1,d0              ;146
0001cc  f7fffffe          BL       __aeabi_dadd
0001d0  ec532b1e          VMOV     r2,r3,d14             ;146
0001d4  f7fffffe          BL       __aeabi_dmul
0001d8  e9c9010a          STRD     r0,r1,[r9,#0x28]      ;147
0001dc  ed940b04          VLDR     d0,[r4,#0x10]         ;147
0001e0  ec532b1a          VMOV     r2,r3,d10             ;147
0001e4  ec510b10          VMOV     r0,r1,d0              ;147
0001e8  f7fffffe          BL       __aeabi_dadd
0001ec  e9c90100          STRD     r0,r1,[r9,#0]         ;147
0001f0  ed940b02          VLDR     d0,[r4,#8]            ;148
0001f4  f7fffffe          BL       __hardfp_cos
0001f8  ec532b18          VMOV     r2,r3,d8              ;148
0001fc  ec510b10          VMOV     r0,r1,d0              ;148
000200  f7fffffe          BL       __aeabi_dmul
000204  e9c90102          STRD     r0,r1,[r9,#8]         ;148
000208  ed940b04          VLDR     d0,[r4,#0x10]         ;149
00020c  ec510b1a          VMOV     r0,r1,d10             ;149
000210  ec532b10          VMOV     r2,r3,d0              ;149
000214  f7fffffe          BL       __aeabi_dsub
000218  e9c90104          STRD     r0,r1,[r9,#0x10]      ;149
00021c  f000bbda          B.W      |L4.2516|
000220  ee1d0a10          VMOV     r0,s26                ;153
000224  f7fffffe          BL       __aeabi_f2d
000228  ec532b19          VMOV     r2,r3,d9              ;153
00022c  f7fffffe          BL       __aeabi_dmul
000230  e9c90106          STRD     r0,r1,[r9,#0x18]      ;153
;;;155                    b2 =  -Q*alpha;
000234  eeb10a4d          VNEG.F32 s0,s26
000238  ed89bb08          VSTR     d11,[r9,#0x20]        ;154
00023c  ee100a10          VMOV     r0,s0
000240  f7fffffe          BL       __aeabi_f2d
000244  ec532b19          VMOV     r2,r3,d9
000248  f7fffffe          BL       __aeabi_dmul
;;;156                    a0 =   1 + alpha;
00024c  e9c9010a          STRD     r0,r1,[r9,#0x28]
000250  ec532b1a          VMOV     r2,r3,d10
000254  ec510b19          VMOV     r0,r1,d9
000258  f7fffffe          BL       __aeabi_dadd
00025c  e9c90100          STRD     r0,r1,[r9,#0]
;;;157                    a1 =  -2*cos(w0);
000260  ed940b02          VLDR     d0,[r4,#8]
000264  f7fffffe          BL       __hardfp_cos
000268  ec532b18          VMOV     r2,r3,d8
00026c  ec510b10          VMOV     r0,r1,d0
000270  f7fffffe          BL       __aeabi_dmul
000274  e9c90102          STRD     r0,r1,[r9,#8]
;;;158                    a2 =   1 - alpha;
000278  ed940b04          VLDR     d0,[r4,#0x10]
00027c  ec510b1a          VMOV     r0,r1,d10
000280  ec532b10          VMOV     r2,r3,d0
000284  f7fffffe          BL       __aeabi_dsub
000288  e9c90104          STRD     r0,r1,[r9,#0x10]
;;;159                    break;
00028c  f000bba2          B.W      |L4.2516|
;;;160    
;;;161                case            BIQUAD_BAND_PASS_FILTER_CONSTANT_0_DB_PEAK_GAIN:
;;;162                    b0 =   alpha;
000290  ed899b06          VSTR     d9,[r9,#0x18]
;;;163                    b1 =   0;
000294  ed89bb08          VSTR     d11,[r9,#0x20]
;;;164                    b2 =  -alpha;
000298  ec510b19          VMOV     r0,r1,d9
00029c  f7fffffe          BL       __aeabi_dneg
;;;165                    a0 =   1 + alpha;
0002a0  e9c9010a          STRD     r0,r1,[r9,#0x28]
0002a4  ec532b1a          VMOV     r2,r3,d10
0002a8  ec510b19          VMOV     r0,r1,d9
0002ac  f7fffffe          BL       __aeabi_dadd
0002b0  e9c90100          STRD     r0,r1,[r9,#0]
;;;166                    a1 =  -2*cos(w0);
0002b4  ed940b02          VLDR     d0,[r4,#8]
0002b8  f7fffffe          BL       __hardfp_cos
0002bc  ec532b18          VMOV     r2,r3,d8
0002c0  ec510b10          VMOV     r0,r1,d0
0002c4  f7fffffe          BL       __aeabi_dmul
0002c8  e9c90102          STRD     r0,r1,[r9,#8]
;;;167                    a2 =   1 - alpha;
0002cc  e004              B        |L4.728|
0002ce  e23f              B        |L4.1872|
0002d0  e0fa              B        |L4.1224|
0002d2  e077              B        |L4.964|
0002d4  e03e              B        |L4.852|
0002d6  e00b              B        |L4.752|
                  |L4.728|
0002d8  ed940b04          VLDR     d0,[r4,#0x10]
0002dc  ec510b1a          VMOV     r0,r1,d10
0002e0  ec532b10          VMOV     r2,r3,d0
0002e4  f7fffffe          BL       __aeabi_dsub
0002e8  e9c90104          STRD     r0,r1,[r9,#0x10]
;;;168                    break;
0002ec  f000bb72          B.W      |L4.2516|
                  |L4.752|
;;;169    
;;;170                case             BIQUAD_NOTCH_FILTER:
;;;171                    b0 =   1;
0002f0  ed89ab06          VSTR     d10,[r9,#0x18]
;;;172                    b1 =  -2*cos(w0);
0002f4  ed940b02          VLDR     d0,[r4,#8]
0002f8  f7fffffe          BL       __hardfp_cos
0002fc  ec532b18          VMOV     r2,r3,d8
000300  ec510b10          VMOV     r0,r1,d0
000304  f7fffffe          BL       __aeabi_dmul
000308  e9c90108          STRD     r0,r1,[r9,#0x20]
;;;173                    b2 =   1;
00030c  ed89ab0a          VSTR     d10,[r9,#0x28]
;;;174                    a0 =   1 + alpha;
000310  ed940b04          VLDR     d0,[r4,#0x10]
000314  ec532b1a          VMOV     r2,r3,d10
000318  ec510b10          VMOV     r0,r1,d0
00031c  f7fffffe          BL       __aeabi_dadd
000320  e9c90100          STRD     r0,r1,[r9,#0]
;;;175                    a1 =  -2*cos(w0);
000324  ed940b02          VLDR     d0,[r4,#8]
000328  f7fffffe          BL       __hardfp_cos
00032c  ec532b18          VMOV     r2,r3,d8
000330  ec510b10          VMOV     r0,r1,d0
000334  f7fffffe          BL       __aeabi_dmul
000338  e9c90102          STRD     r0,r1,[r9,#8]
;;;176                    a2 =   1 - alpha;
00033c  ed940b04          VLDR     d0,[r4,#0x10]
000340  ec510b1a          VMOV     r0,r1,d10
000344  ec532b10          VMOV     r2,r3,d0
000348  f7fffffe          BL       __aeabi_dsub
00034c  e9c90104          STRD     r0,r1,[r9,#0x10]
;;;177                    break;
000350  f000bb40          B.W      |L4.2516|
                  |L4.852|
;;;178    
;;;179                case             BIQUAD_ALL_PASS_FILTER:
;;;180                    b0 =   1 - alpha;
000354  ec532b19          VMOV     r2,r3,d9
000358  ec510b1a          VMOV     r0,r1,d10
00035c  f7fffffe          BL       __aeabi_dsub
000360  e9c90106          STRD     r0,r1,[r9,#0x18]
;;;181                    b1 =  -2*cos(w0);
000364  ed940b02          VLDR     d0,[r4,#8]
000368  f7fffffe          BL       __hardfp_cos
00036c  ec532b18          VMOV     r2,r3,d8
000370  ec510b10          VMOV     r0,r1,d0
000374  f7fffffe          BL       __aeabi_dmul
;;;182                    b2 =   1 + alpha;
000378  e9c90108          STRD     r0,r1,[r9,#0x20]
00037c  ed940b04          VLDR     d0,[r4,#0x10]
000380  ec532b1a          VMOV     r2,r3,d10
000384  ec510b10          VMOV     r0,r1,d0
000388  f7fffffe          BL       __aeabi_dadd
00038c  e9c9010a          STRD     r0,r1,[r9,#0x28]
000390  e9c90100          STRD     r0,r1,[r9,#0]
;;;183                    a0 =   1 + alpha;
;;;184                    a1 =  -2*cos(w0);
000394  ed940b02          VLDR     d0,[r4,#8]
000398  f7fffffe          BL       __hardfp_cos
00039c  ec532b18          VMOV     r2,r3,d8
0003a0  ec510b10          VMOV     r0,r1,d0
0003a4  f7fffffe          BL       __aeabi_dmul
0003a8  e9c90102          STRD     r0,r1,[r9,#8]
;;;185                    a2 =   1 - alpha;
0003ac  ed940b04          VLDR     d0,[r4,#0x10]
0003b0  ec510b1a          VMOV     r0,r1,d10
0003b4  ec532b10          VMOV     r2,r3,d0
0003b8  f7fffffe          BL       __aeabi_dsub
0003bc  e9c90104          STRD     r0,r1,[r9,#0x10]
;;;186                    break;
0003c0  f000bb08          B.W      |L4.2516|
                  |L4.964|
;;;187    
;;;188                case            BIQUAD_PEAKING_EQ:
;;;189                    b0 =   1 + alpha*A;
0003c4  ed940b00          VLDR     d0,[r4,#0]
0003c8  ec510b19          VMOV     r0,r1,d9
0003cc  ec532b10          VMOV     r2,r3,d0
0003d0  f7fffffe          BL       __aeabi_dmul
0003d4  ec532b1a          VMOV     r2,r3,d10
0003d8  f7fffffe          BL       __aeabi_dadd
0003dc  e9c90106          STRD     r0,r1,[r9,#0x18]
;;;190                    b1 =  -2*cos(w0);
0003e0  ed940b02          VLDR     d0,[r4,#8]
0003e4  f7fffffe          BL       __hardfp_cos
0003e8  ec532b18          VMOV     r2,r3,d8
0003ec  ec510b10          VMOV     r0,r1,d0
0003f0  f7fffffe          BL       __aeabi_dmul
0003f4  e9c90108          STRD     r0,r1,[r9,#0x20]
;;;191                    b2 =   1 - alpha*A;
0003f8  ed949b00          VLDR     d9,[r4,#0]
0003fc  ed94cb04          VLDR     d12,[r4,#0x10]
000400  ec532b19          VMOV     r2,r3,d9
000404  ec510b1c          VMOV     r0,r1,d12
000408  f7fffffe          BL       __aeabi_dmul
00040c  e02c              B        |L4.1128|
00040e  0000              DCW      0x0000
                  |L4.1040|
000410  42200000          DCFS     0x42200000 ; 40
                          DCD      0x00000000
                  |L4.1048|
000418  00000000          DCFD     0x4024000000000000 ; 10
00041c  40240000
                  |L4.1056|
                          DCD      ||.data||
                  |L4.1060|
000424  447a0000          DCFS     0x447a0000 ; 1000
                  |L4.1064|
000428  54524550          DCFD     0x401921fb54524550 ; 6.2831853080000002
00042c  401921fb
                  |L4.1072|
000430  00000000          DCFD     0x4000000000000000 ; 2
000434  40000000
                  |L4.1080|
000438  00000000          DCFD     0x3fe0000000000000 ; 0.5
00043c  3fe00000
                  |L4.1088|
000440  00000000          DCFD     0xc000000000000000 ; -2
000444  c0000000
                  |L4.1096|
                          DCD      ||.bss||
                          DCD      0x00000000
                  |L4.1104|
000450  00000000          DCFD     0x0000000000000000 ; 0
000454  00000000
                  |L4.1112|
000458  00000000          DCFD     0x3ff0000000000000 ; 1
00045c  3ff00000
                  |L4.1120|
000460  00000000          DCFD     0xbff0000000000000 ; -1
000464  bff00000
                  |L4.1128|
000468  ec532b1a          VMOV     r2,r3,d10
00046c  f7fffffe          BL       __aeabi_drsub
;;;192                    a0 =   1 + alpha/A;
000470  e9c9010a          STRD     r0,r1,[r9,#0x28]
000474  ec532b19          VMOV     r2,r3,d9
000478  ec510b1c          VMOV     r0,r1,d12
00047c  f7fffffe          BL       __aeabi_ddiv
000480  ec532b1a          VMOV     r2,r3,d10
000484  f7fffffe          BL       __aeabi_dadd
000488  e9c90100          STRD     r0,r1,[r9,#0]
;;;193                    a1 =  -2*cos(w0);
00048c  ed940b02          VLDR     d0,[r4,#8]
000490  f7fffffe          BL       __hardfp_cos
000494  ec532b18          VMOV     r2,r3,d8
000498  ec510b10          VMOV     r0,r1,d0
00049c  f7fffffe          BL       __aeabi_dmul
0004a0  e9c90102          STRD     r0,r1,[r9,#8]
;;;194                    a2 =   1 - alpha/A;
0004a4  ed940b00          VLDR     d0,[r4,#0]
0004a8  ec532b10          VMOV     r2,r3,d0
0004ac  ed940b04          VLDR     d0,[r4,#0x10]
0004b0  ec510b10          VMOV     r0,r1,d0
0004b4  f7fffffe          BL       __aeabi_ddiv
0004b8  ec532b1a          VMOV     r2,r3,d10
0004bc  f7fffffe          BL       __aeabi_drsub
                  |L4.1216|
0004c0  e9c90104          STRD     r0,r1,[r9,#0x10]
0004c4  f000ba86          B.W      |L4.2516|
                  |L4.1224|
;;;195                    break;
;;;196    
;;;197                case            BIQUAD_LOW_SHELF:
;;;198                    b0 =    A*( (A+1.0) - (A-1.0)*cos(w0) + 2.0*sqrt(A)*alpha );
0004c8  ed940b00          VLDR     d0,[r4,#0]
0004cc  f7fffffe          BL       __hardfp_sqrt
0004d0  ec532b1c          VMOV     r2,r3,d12
0004d4  ec510b10          VMOV     r0,r1,d0
0004d8  f7fffffe          BL       __aeabi_dmul
0004dc  ed941b04          VLDR     d1,[r4,#0x10]
0004e0  ec532b11          VMOV     r2,r3,d1
0004e4  f7fffffe          BL       __aeabi_dmul
0004e8  ec410b19          VMOV     d9,r0,r1
0004ec  ed940b02          VLDR     d0,[r4,#8]
0004f0  f7fffffe          BL       __hardfp_cos
0004f4  ed94eb00          VLDR     d14,[r4,#0]
0004f8  eeb0da40          VMOV.F32 s26,s0
0004fc  eef0da60          VMOV.F32 s27,s1
000500  ec532b1a          VMOV     r2,r3,d10
000504  ec510b1e          VMOV     r0,r1,d14
000508  f7fffffe          BL       __aeabi_dsub
00050c  ec532b1d          VMOV     r2,r3,d13
000510  f7fffffe          BL       __aeabi_dmul
000514  ec410b1d          VMOV     d13,r0,r1
000518  ec532b1a          VMOV     r2,r3,d10
00051c  ec510b1e          VMOV     r0,r1,d14
000520  f7fffffe          BL       __aeabi_dadd
000524  ec532b1d          VMOV     r2,r3,d13
000528  f7fffffe          BL       __aeabi_dsub
00052c  ec532b19          VMOV     r2,r3,d9
000530  f7fffffe          BL       __aeabi_dadd
000534  ec532b1e          VMOV     r2,r3,d14
000538  f7fffffe          BL       __aeabi_dmul
00053c  e9c90106          STRD     r0,r1,[r9,#0x18]
;;;199                    b1 =  2.0*A*( (A-1.0) - (A+1.0)*cos(w0)                   );
000540  ed940b02          VLDR     d0,[r4,#8]
000544  f7fffffe          BL       __hardfp_cos
000548  ed949b00          VLDR     d9,[r4,#0]
00054c  eeb0da40          VMOV.F32 s26,s0
000550  eef0da60          VMOV.F32 s27,s1
000554  ec532b1a          VMOV     r2,r3,d10
000558  ec510b19          VMOV     r0,r1,d9
00055c  f7fffffe          BL       __aeabi_dadd
000560  ec532b1d          VMOV     r2,r3,d13
000564  f7fffffe          BL       __aeabi_dmul
000568  ec410b1d          VMOV     d13,r0,r1
00056c  ec532b1a          VMOV     r2,r3,d10
000570  ec510b19          VMOV     r0,r1,d9
000574  f7fffffe          BL       __aeabi_dsub
000578  ec532b1d          VMOV     r2,r3,d13
00057c  f7fffffe          BL       __aeabi_dsub
000580  ec410b1d          VMOV     d13,r0,r1
000584  ec532b1c          VMOV     r2,r3,d12
000588  ec510b19          VMOV     r0,r1,d9
00058c  f7fffffe          BL       __aeabi_dmul
000590  ec532b1d          VMOV     r2,r3,d13
000594  f7fffffe          BL       __aeabi_dmul
000598  eeb00a49          VMOV.F32 s0,s18
00059c  eef00a69          VMOV.F32 s1,s19
0005a0  e9c90108          STRD     r0,r1,[r9,#0x20]
;;;200                    b2 =    A*( (A+1.0) - (A-1.0)*cos(w0) - 2.0*sqrt(A)*alpha );
0005a4  f7fffffe          BL       __hardfp_sqrt
0005a8  ec532b1c          VMOV     r2,r3,d12
0005ac  ec510b10          VMOV     r0,r1,d0
0005b0  f7fffffe          BL       __aeabi_dmul
0005b4  ed941b04          VLDR     d1,[r4,#0x10]
0005b8  ec532b11          VMOV     r2,r3,d1
0005bc  f7fffffe          BL       __aeabi_dmul
0005c0  ec410b1d          VMOV     d13,r0,r1
0005c4  ed940b02          VLDR     d0,[r4,#8]
0005c8  f7fffffe          BL       __hardfp_cos
0005cc  ed949b00          VLDR     d9,[r4,#0]
0005d0  eeb0ea40          VMOV.F32 s28,s0
0005d4  eef0ea60          VMOV.F32 s29,s1
0005d8  ec532b1a          VMOV     r2,r3,d10
0005dc  ec510b19          VMOV     r0,r1,d9
0005e0  f7fffffe          BL       __aeabi_dsub
0005e4  ec532b1e          VMOV     r2,r3,d14
0005e8  f7fffffe          BL       __aeabi_dmul
0005ec  ec410b1e          VMOV     d14,r0,r1
0005f0  ec532b1a          VMOV     r2,r3,d10
0005f4  ec510b19          VMOV     r0,r1,d9
0005f8  f7fffffe          BL       __aeabi_dadd
0005fc  ec532b1e          VMOV     r2,r3,d14
000600  f7fffffe          BL       __aeabi_dsub
000604  ec532b1d          VMOV     r2,r3,d13
000608  f7fffffe          BL       __aeabi_dsub
00060c  ec532b19          VMOV     r2,r3,d9
000610  f7fffffe          BL       __aeabi_dmul
000614  eeb00a49          VMOV.F32 s0,s18
000618  eef00a69          VMOV.F32 s1,s19
00061c  e9c9010a          STRD     r0,r1,[r9,#0x28]
;;;201                    a0 =        (A+1.0) + (A-1.0)*cos(w0) + 2.0*sqrt(A)*alpha;
000620  f7fffffe          BL       __hardfp_sqrt
000624  ec532b1c          VMOV     r2,r3,d12
000628  ec510b10          VMOV     r0,r1,d0
00062c  f7fffffe          BL       __aeabi_dmul
000630  ed941b04          VLDR     d1,[r4,#0x10]
000634  ec532b11          VMOV     r2,r3,d1
000638  f7fffffe          BL       __aeabi_dmul
00063c  ec410b19          VMOV     d9,r0,r1
000640  ed940b02          VLDR     d0,[r4,#8]
000644  f7fffffe          BL       __hardfp_cos
000648  ed94eb00          VLDR     d14,[r4,#0]
00064c  eeb0da40          VMOV.F32 s26,s0
000650  eef0da60          VMOV.F32 s27,s1
000654  ec532b1a          VMOV     r2,r3,d10
000658  ec510b1e          VMOV     r0,r1,d14
00065c  f7fffffe          BL       __aeabi_dsub
000660  ec532b1d          VMOV     r2,r3,d13
000664  f7fffffe          BL       __aeabi_dmul
000668  ec410b1d          VMOV     d13,r0,r1
00066c  ec532b1a          VMOV     r2,r3,d10
000670  ec510b1e          VMOV     r0,r1,d14
000674  f7fffffe          BL       __aeabi_dadd
000678  ec532b1d          VMOV     r2,r3,d13
00067c  f7fffffe          BL       __aeabi_dadd
000680  ec532b19          VMOV     r2,r3,d9
000684  f7fffffe          BL       __aeabi_dadd
000688  e9c90100          STRD     r0,r1,[r9,#0]
;;;202                    a1 =   -2.0*( (A-1.0) + (A+1.0)*cos(w0)                   );
00068c  ed940b02          VLDR     d0,[r4,#8]
000690  f7fffffe          BL       __hardfp_cos
000694  ed949b00          VLDR     d9,[r4,#0]
000698  eeb0da40          VMOV.F32 s26,s0
00069c  eef0da60          VMOV.F32 s27,s1
0006a0  ec532b1a          VMOV     r2,r3,d10
0006a4  ec510b19          VMOV     r0,r1,d9
0006a8  f7fffffe          BL       __aeabi_dadd
0006ac  ec532b1d          VMOV     r2,r3,d13
0006b0  f7fffffe          BL       __aeabi_dmul
0006b4  ec410b1d          VMOV     d13,r0,r1
0006b8  ec532b1a          VMOV     r2,r3,d10
0006bc  ec510b19          VMOV     r0,r1,d9
0006c0  f7fffffe          BL       __aeabi_dsub
0006c4  ec532b1d          VMOV     r2,r3,d13
0006c8  f7fffffe          BL       __aeabi_dadd
0006cc  ec532b18          VMOV     r2,r3,d8
0006d0  f7fffffe          BL       __aeabi_dmul
0006d4  eeb00a49          VMOV.F32 s0,s18
0006d8  eef00a69          VMOV.F32 s1,s19
0006dc  e9c90102          STRD     r0,r1,[r9,#8]
;;;203                    a2 =        (A+1.0) + (A-1.0)*cos(w0) - 2.0*sqrt(A)*alpha;
0006e0  f7fffffe          BL       __hardfp_sqrt
0006e4  ec532b1c          VMOV     r2,r3,d12
0006e8  ec510b10          VMOV     r0,r1,d0
0006ec  f7fffffe          BL       __aeabi_dmul
0006f0  ed941b04          VLDR     d1,[r4,#0x10]
0006f4  ec532b11          VMOV     r2,r3,d1
0006f8  f7fffffe          BL       __aeabi_dmul
0006fc  ec410b1c          VMOV     d12,r0,r1
000700  ed940b02          VLDR     d0,[r4,#8]
000704  f7fffffe          BL       __hardfp_cos
000708  ed949b00          VLDR     d9,[r4,#0]
00070c  eeb08a40          VMOV.F32 s16,s0
000710  eef08a60          VMOV.F32 s17,s1
000714  ec532b1a          VMOV     r2,r3,d10
000718  ec510b19          VMOV     r0,r1,d9
00071c  f7fffffe          BL       __aeabi_dsub
000720  ec532b18          VMOV     r2,r3,d8
000724  f7fffffe          BL       __aeabi_dmul
000728  ec410b18          VMOV     d8,r0,r1
00072c  ec532b1a          VMOV     r2,r3,d10
000730  ec510b19          VMOV     r0,r1,d9
000734  f7fffffe          BL       __aeabi_dadd
000738  ec532b18          VMOV     r2,r3,d8
00073c  f7fffffe          BL       __aeabi_dadd
000740  ec532b1c          VMOV     r2,r3,d12
000744  f7fffffe          BL       __aeabi_dsub
000748  e9c90104          STRD     r0,r1,[r9,#0x10]
;;;204                    break;
00074c  f000b942          B.W      |L4.2516|
                  |L4.1872|
;;;205    
;;;206                case           BIQUAD_HIGH_SHELF:
;;;207                    b0 =    A*( (A+1) + (A-1)*cos(w0) + 2*sqrt(A)*alpha );
000750  ed940b00          VLDR     d0,[r4,#0]
000754  f7fffffe          BL       __hardfp_sqrt
000758  ec532b1c          VMOV     r2,r3,d12
00075c  ec510b10          VMOV     r0,r1,d0
000760  f7fffffe          BL       __aeabi_dmul
000764  ed941b04          VLDR     d1,[r4,#0x10]
000768  ec532b11          VMOV     r2,r3,d1
00076c  f7fffffe          BL       __aeabi_dmul
000770  ec410b1d          VMOV     d13,r0,r1
000774  ed940b02          VLDR     d0,[r4,#8]
000778  f7fffffe          BL       __hardfp_cos
00077c  ed94eb00          VLDR     d14,[r4,#0]
000780  eeb09a40          VMOV.F32 s18,s0
000784  eef09a60          VMOV.F32 s19,s1
000788  ec532b1a          VMOV     r2,r3,d10
00078c  ec510b1e          VMOV     r0,r1,d14
000790  f7fffffe          BL       __aeabi_dsub
000794  ec532b19          VMOV     r2,r3,d9
000798  f7fffffe          BL       __aeabi_dmul
00079c  ec410b19          VMOV     d9,r0,r1
0007a0  ec532b1a          VMOV     r2,r3,d10
0007a4  ec510b1e          VMOV     r0,r1,d14
0007a8  f7fffffe          BL       __aeabi_dadd
0007ac  ec532b19          VMOV     r2,r3,d9
0007b0  f7fffffe          BL       __aeabi_dadd
0007b4  ec532b1d          VMOV     r2,r3,d13
0007b8  f7fffffe          BL       __aeabi_dadd
0007bc  ec532b1e          VMOV     r2,r3,d14
0007c0  f7fffffe          BL       __aeabi_dmul
0007c4  e9c90106          STRD     r0,r1,[r9,#0x18]
;;;208                    b1 = -2*A*( (A-1) + (A+1)*cos(w0)                   );
0007c8  ed940b02          VLDR     d0,[r4,#8]
0007cc  f7fffffe          BL       __hardfp_cos
0007d0  ed949b00          VLDR     d9,[r4,#0]
0007d4  eeb0da40          VMOV.F32 s26,s0
0007d8  eef0da60          VMOV.F32 s27,s1
0007dc  ec532b1a          VMOV     r2,r3,d10
0007e0  ec510b19          VMOV     r0,r1,d9
0007e4  f7fffffe          BL       __aeabi_dadd
0007e8  ec532b1d          VMOV     r2,r3,d13
0007ec  f7fffffe          BL       __aeabi_dmul
0007f0  ec410b1d          VMOV     d13,r0,r1
0007f4  ec532b1a          VMOV     r2,r3,d10
0007f8  ec510b19          VMOV     r0,r1,d9
0007fc  f7fffffe          BL       __aeabi_dsub
000800  ec532b1d          VMOV     r2,r3,d13
000804  f7fffffe          BL       __aeabi_dadd
000808  ec410b1d          VMOV     d13,r0,r1
00080c  ec532b18          VMOV     r2,r3,d8
000810  ec510b19          VMOV     r0,r1,d9
000814  f7fffffe          BL       __aeabi_dmul
000818  ec532b1d          VMOV     r2,r3,d13
00081c  f7fffffe          BL       __aeabi_dmul
000820  eeb00a49          VMOV.F32 s0,s18
000824  eef00a69          VMOV.F32 s1,s19
000828  e9c90108          STRD     r0,r1,[r9,#0x20]
;;;209                    b2 =    A*( (A+1) + (A-1)*cos(w0) - 2*sqrt(A)*alpha );
00082c  f7fffffe          BL       __hardfp_sqrt
000830  ec532b1c          VMOV     r2,r3,d12
000834  ec510b10          VMOV     r0,r1,d0
000838  f7fffffe          BL       __aeabi_dmul
00083c  ed941b04          VLDR     d1,[r4,#0x10]
000840  ec532b11          VMOV     r2,r3,d1
000844  f7fffffe          BL       __aeabi_dmul
000848  ec410b19          VMOV     d9,r0,r1
00084c  ed940b02          VLDR     d0,[r4,#8]
000850  f7fffffe          BL       __hardfp_cos
000854  ed948b00          VLDR     d8,[r4,#0]
000858  eeb0da40          VMOV.F32 s26,s0
00085c  eef0da60          VMOV.F32 s27,s1
000860  ec532b1a          VMOV     r2,r3,d10
000864  ec510b18          VMOV     r0,r1,d8
000868  f7fffffe          BL       __aeabi_dsub
00086c  ec532b1d          VMOV     r2,r3,d13
000870  f7fffffe          BL       __aeabi_dmul
000874  ec410b1d          VMOV     d13,r0,r1
000878  ec532b1a          VMOV     r2,r3,d10
00087c  ec510b18          VMOV     r0,r1,d8
000880  f7fffffe          BL       __aeabi_dadd
000884  ec532b1d          VMOV     r2,r3,d13
000888  f7fffffe          BL       __aeabi_dadd
00088c  ec532b19          VMOV     r2,r3,d9
000890  f7fffffe          BL       __aeabi_dsub
000894  ec532b18          VMOV     r2,r3,d8
000898  f7fffffe          BL       __aeabi_dmul
00089c  eeb00a48          VMOV.F32 s0,s16
0008a0  eef00a68          VMOV.F32 s1,s17
0008a4  e9c9010a          STRD     r0,r1,[r9,#0x28]
;;;210                    a0 =        (A+1) - (A-1)*cos(w0) + 2*sqrt(A)*alpha;
0008a8  f7fffffe          BL       __hardfp_sqrt
0008ac  ec532b1c          VMOV     r2,r3,d12
0008b0  ec510b10          VMOV     r0,r1,d0
0008b4  f7fffffe          BL       __aeabi_dmul
0008b8  ed941b04          VLDR     d1,[r4,#0x10]
0008bc  ec532b11          VMOV     r2,r3,d1
0008c0  f7fffffe          BL       __aeabi_dmul
0008c4  ec410b19          VMOV     d9,r0,r1
0008c8  ed940b02          VLDR     d0,[r4,#8]
0008cc  f7fffffe          BL       __hardfp_cos
0008d0  ed94db00          VLDR     d13,[r4,#0]
0008d4  eeb08a40          VMOV.F32 s16,s0
0008d8  eef08a60          VMOV.F32 s17,s1
0008dc  ec532b1a          VMOV     r2,r3,d10
0008e0  ec510b1d          VMOV     r0,r1,d13
0008e4  f7fffffe          BL       __aeabi_dsub
0008e8  ec532b18          VMOV     r2,r3,d8
0008ec  f7fffffe          BL       __aeabi_dmul
0008f0  ec410b18          VMOV     d8,r0,r1
0008f4  ec532b1a          VMOV     r2,r3,d10
0008f8  ec510b1d          VMOV     r0,r1,d13
0008fc  f7fffffe          BL       __aeabi_dadd
000900  ec532b18          VMOV     r2,r3,d8
000904  f7fffffe          BL       __aeabi_dsub
000908  ec532b19          VMOV     r2,r3,d9
00090c  f7fffffe          BL       __aeabi_dadd
000910  e9c90100          STRD     r0,r1,[r9,#0]
;;;211                    a1 =    2*( (A-1) - (A+1)*cos(w0)                   );
000914  ed940b02          VLDR     d0,[r4,#8]
000918  f7fffffe          BL       __hardfp_cos
00091c  ed948b00          VLDR     d8,[r4,#0]
000920  eeb09a40          VMOV.F32 s18,s0
000924  eef09a60          VMOV.F32 s19,s1
000928  ec532b1a          VMOV     r2,r3,d10
00092c  ec510b18          VMOV     r0,r1,d8
000930  f7fffffe          BL       __aeabi_dadd
000934  ec532b19          VMOV     r2,r3,d9
000938  f7fffffe          BL       __aeabi_dmul
00093c  ec410b19          VMOV     d9,r0,r1
000940  ec532b1a          VMOV     r2,r3,d10
000944  ec510b18          VMOV     r0,r1,d8
000948  f7fffffe          BL       __aeabi_dsub
00094c  ec532b19          VMOV     r2,r3,d9
000950  f7fffffe          BL       __aeabi_dsub
000954  ec532b1c          VMOV     r2,r3,d12
000958  f7fffffe          BL       __aeabi_dmul
00095c  eeb00a48          VMOV.F32 s0,s16
000960  eef00a68          VMOV.F32 s1,s17
000964  e9c90102          STRD     r0,r1,[r9,#8]
;;;212                    a2 =        (A+1) - (A-1)*cos(w0) - 2*sqrt(A)*alpha;
000968  f7fffffe          BL       __hardfp_sqrt
00096c  ec532b1c          VMOV     r2,r3,d12
000970  ec510b10          VMOV     r0,r1,d0
000974  f7fffffe          BL       __aeabi_dmul
000978  ed941b04          VLDR     d1,[r4,#0x10]
00097c  ec532b11          VMOV     r2,r3,d1
000980  f7fffffe          BL       __aeabi_dmul
000984  ec410b18          VMOV     d8,r0,r1
000988  ed940b02          VLDR     d0,[r4,#8]
00098c  f7fffffe          BL       __hardfp_cos
000990  ed94cb00          VLDR     d12,[r4,#0]
000994  eeb09a40          VMOV.F32 s18,s0
000998  eef09a60          VMOV.F32 s19,s1
00099c  ec532b1a          VMOV     r2,r3,d10
0009a0  ec510b1c          VMOV     r0,r1,d12
0009a4  f7fffffe          BL       __aeabi_dsub
0009a8  ec532b19          VMOV     r2,r3,d9
0009ac  f7fffffe          BL       __aeabi_dmul
0009b0  ec410b19          VMOV     d9,r0,r1
0009b4  ec532b1a          VMOV     r2,r3,d10
0009b8  ec510b1c          VMOV     r0,r1,d12
0009bc  f7fffffe          BL       __aeabi_dadd
0009c0  ec532b19          VMOV     r2,r3,d9
0009c4  f7fffffe          BL       __aeabi_dsub
0009c8  ec532b18          VMOV     r2,r3,d8
0009cc  f7fffffe          BL       __aeabi_dsub
0009d0  e9c90104          STRD     r0,r1,[r9,#0x10]
                  |L4.2516|
;;;213                    break;
;;;214            }
;;;215    
;;;216        /*
;;;217        The most straight forward implementation would be the "Direct Form 1"
;;;218        (Eq 2):
;;;219    
;;;220            y[n] = (b0/a0)*x[n] + (b1/a0)*x[n-1] + (b2/a0)*x[n-2]
;;;221                                - (a1/a0)*y[n-1] - (a2/a0)*y[n-2]            (Eq 4)
;;;222    
;;;223        but to make things easier on the chip,  we will do all adds:
;;;224    
;;;225        	    y[n] = (b0/a0)*x[n] + (b1/a0)*x[n-1] + (b2/a0)*x[n-2]
;;;226                                + (a1/a0)*y[n-1] + (a2/a0)*y[n-2]            (Eq 4)
;;;227    
;;;228                                THis means that 2 feedback coef. have to be inverted
;;;229    
;;;230          */
;;;231        b0 = b0/a0;
0009d4  ed998b00          VLDR     d8,[r9,#0]
0009d8  ed990b06          VLDR     d0,[r9,#0x18]
0009dc  ec532b18          VMOV     r2,r3,d8
0009e0  ec510b10          VMOV     r0,r1,d0
0009e4  f7fffffe          BL       __aeabi_ddiv
0009e8  e9c90106          STRD     r0,r1,[r9,#0x18]
;;;232        b1 = b1/a0;
0009ec  ed990b08          VLDR     d0,[r9,#0x20]
0009f0  ec532b18          VMOV     r2,r3,d8
0009f4  ec510b10          VMOV     r0,r1,d0
0009f8  f7fffffe          BL       __aeabi_ddiv
0009fc  e9c90108          STRD     r0,r1,[r9,#0x20]
;;;233        b2 = b2/a0;
000a00  ed990b0a          VLDR     d0,[r9,#0x28]
000a04  ec532b18          VMOV     r2,r3,d8
000a08  ec510b10          VMOV     r0,r1,d0
000a0c  f7fffffe          BL       __aeabi_ddiv
000a10  e9c9010a          STRD     r0,r1,[r9,#0x28]
;;;234        a1 = a1/a0;
000a14  ed990b02          VLDR     d0,[r9,#8]
000a18  ec532b18          VMOV     r2,r3,d8
000a1c  ec510b10          VMOV     r0,r1,d0
000a20  f7fffffe          BL       __aeabi_ddiv
;;;235        a2 = a2/a0;
000a24  ed990b04          VLDR     d0,[r9,#0x10]
000a28  ec410b19          VMOV     d9,r0,r1              ;234
000a2c  ec532b18          VMOV     r2,r3,d8
000a30  ec510b10          VMOV     r0,r1,d0
000a34  f7fffffe          BL       __aeabi_ddiv
000a38  ec410b18          VMOV     d8,r0,r1
;;;236        a0 = 1.0;
000a3c  ed89ab00          VSTR     d10,[r9,#0]
;;;237        a1 = a1 * -1.0;
000a40  ec510b19          VMOV     r0,r1,d9
000a44  f7fffffe          BL       __aeabi_dneg
000a48  e9c90102          STRD     r0,r1,[r9,#8]
;;;238        a2 = a2 * -1.0;
000a4c  ec510b18          VMOV     r0,r1,d8
000a50  f7fffffe          BL       __aeabi_dneg
000a54  e9c90104          STRD     r0,r1,[r9,#0x10]
;;;239        C->PostShift = 0;
000a58  2000              MOVS     r0,#0
000a5a  7528              STRB     r0,[r5,#0x14]
000a5c  f04f0a01          MOV      r10,#1                ;121
;;;240    
;;;241        while(GetPeak(&coef[0],6) > 1.0)
000a60  e08b              B        |L4.2938|
                  |L4.2658|
;;;242            {
;;;243                C->PostShift++;
000a62  7d28              LDRB     r0,[r5,#0x14]
000a64  1c40              ADDS     r0,r0,#1
000a66  7528              STRB     r0,[r5,#0x14]
;;;244                b0 = b0/(float)(1<<C->PostShift);
000a68  fa0af000          LSL      r0,r10,r0
000a6c  ee000a10          VMOV     s0,r0
000a70  eeb80ac0          VCVT.F32.S32 s0,s0
000a74  ee100a10          VMOV     r0,s0
000a78  f7fffffe          BL       __aeabi_f2d
000a7c  ec410b11          VMOV     d1,r0,r1
000a80  ed990b06          VLDR     d0,[r9,#0x18]
000a84  ec532b11          VMOV     r2,r3,d1
000a88  ec510b10          VMOV     r0,r1,d0
000a8c  f7fffffe          BL       __aeabi_ddiv
000a90  e9c90106          STRD     r0,r1,[r9,#0x18]
;;;245                b1 = b1/(float)(1<<C->PostShift);
000a94  7d28              LDRB     r0,[r5,#0x14]
000a96  fa0af000          LSL      r0,r10,r0
000a9a  ee000a10          VMOV     s0,r0
000a9e  eeb80ac0          VCVT.F32.S32 s0,s0
000aa2  ee100a10          VMOV     r0,s0
000aa6  f7fffffe          BL       __aeabi_f2d
000aaa  ec410b10          VMOV     d0,r0,r1
000aae  ed991b08          VLDR     d1,[r9,#0x20]
000ab2  ec532b10          VMOV     r2,r3,d0
000ab6  ec510b11          VMOV     r0,r1,d1
000aba  f7fffffe          BL       __aeabi_ddiv
000abe  e9c90108          STRD     r0,r1,[r9,#0x20]
;;;246                b2 = b2/(float)(1<<C->PostShift);
000ac2  7d28              LDRB     r0,[r5,#0x14]
000ac4  fa0af000          LSL      r0,r10,r0
000ac8  ee000a10          VMOV     s0,r0
000acc  eeb80ac0          VCVT.F32.S32 s0,s0
000ad0  ee100a10          VMOV     r0,s0
000ad4  f7fffffe          BL       __aeabi_f2d
000ad8  ec410b10          VMOV     d0,r0,r1
000adc  ed991b0a          VLDR     d1,[r9,#0x28]
000ae0  ec532b10          VMOV     r2,r3,d0
000ae4  ec510b11          VMOV     r0,r1,d1
000ae8  f7fffffe          BL       __aeabi_ddiv
000aec  e9c9010a          STRD     r0,r1,[r9,#0x28]
;;;247                a1 = a1/(float)(1<<C->PostShift);
000af0  7d28              LDRB     r0,[r5,#0x14]
000af2  fa0af000          LSL      r0,r10,r0
000af6  ee000a10          VMOV     s0,r0
000afa  eeb80ac0          VCVT.F32.S32 s0,s0
000afe  ee100a10          VMOV     r0,s0
000b02  f7fffffe          BL       __aeabi_f2d
000b06  ec410b10          VMOV     d0,r0,r1
000b0a  ed991b02          VLDR     d1,[r9,#8]
000b0e  ec532b10          VMOV     r2,r3,d0
000b12  ec510b11          VMOV     r0,r1,d1
000b16  f7fffffe          BL       __aeabi_ddiv
000b1a  e9c90102          STRD     r0,r1,[r9,#8]
;;;248                a2 = a2/(float)(1<<C->PostShift);
000b1e  7d28              LDRB     r0,[r5,#0x14]
000b20  fa0af000          LSL      r0,r10,r0
000b24  ee000a10          VMOV     s0,r0
000b28  eeb80ac0          VCVT.F32.S32 s0,s0
000b2c  ee100a10          VMOV     r0,s0
000b30  f7fffffe          BL       __aeabi_f2d
000b34  ec410b10          VMOV     d0,r0,r1
000b38  ed991b04          VLDR     d1,[r9,#0x10]
000b3c  ec532b10          VMOV     r2,r3,d0
000b40  ec510b11          VMOV     r0,r1,d1
000b44  f7fffffe          BL       __aeabi_ddiv
000b48  e9c90104          STRD     r0,r1,[r9,#0x10]
;;;249                a0 = a0/(float)(1<<C->PostShift);
000b4c  7d28              LDRB     r0,[r5,#0x14]
000b4e  fa0af000          LSL      r0,r10,r0
000b52  ee000a10          VMOV     s0,r0
000b56  eeb80ac0          VCVT.F32.S32 s0,s0
000b5a  ee100a10          VMOV     r0,s0
000b5e  f7fffffe          BL       __aeabi_f2d
000b62  ec410b11          VMOV     d1,r0,r1
000b66  ed990b00          VLDR     d0,[r9,#0]
000b6a  ec532b11          VMOV     r2,r3,d1
000b6e  ec510b10          VMOV     r0,r1,d0
000b72  f7fffffe          BL       __aeabi_ddiv
000b76  e9c90100          STRD     r0,r1,[r9,#0]
                  |L4.2938|
000b7a  f8df80ec          LDR      r8,|L4.3176|
000b7e  2706              MOVS     r7,#6                 ;241
000b80  eeb08a4b          VMOV.F32 s16,s22               ;241
000b84  eef08a6b          VMOV.F32 s17,s23               ;241
000b88  f05f0400          MOVS.W   r4,#0                 ;241
                  |L4.2956|
000b8c  eb0806c4          ADD      r6,r8,r4,LSL #3       ;241
000b90  eeb01a4b          VMOV.F32 s2,s22                ;241
000b94  ed960b00          VLDR     d0,[r6,#0]            ;241
000b98  eef01a6b          VMOV.F32 s3,s23                ;241
000b9c  ec532b11          VMOV     r2,r3,d1              ;241
000ba0  ec510b10          VMOV     r0,r1,d0              ;241
000ba4  f7fffffe          BL       __aeabi_cdcmple
000ba8  bf28              IT       CS                    ;241
000baa  ed969b00          VLDRCS   d9,[r6,#0]            ;241
000bae  d207              BCS      |L4.3008|
000bb0  ed960b00          VLDR     d0,[r6,#0]            ;241
000bb4  ec510b10          VMOV     r0,r1,d0              ;241
000bb8  f7fffffe          BL       __aeabi_dneg
000bbc  ec410b19          VMOV     d9,r0,r1              ;241
                  |L4.3008|
000bc0  ec532b18          VMOV     r2,r3,d8              ;241
000bc4  ec510b19          VMOV     r0,r1,d9              ;241
000bc8  f7fffffe          BL       __aeabi_cdrcmple
000bcc  bf3c              ITT      CC                    ;241
000bce  eeb08a49          VMOVCC.F32 s16,s18               ;241
000bd2  eef08a69          VMOVCC.F32 s17,s19               ;241
000bd6  1c64              ADDS     r4,r4,#1              ;241
000bd8  42bc              CMP      r4,r7                 ;241
000bda  dbd7              BLT      |L4.2956|
000bdc  ec532b1a          VMOV     r2,r3,d10             ;241
000be0  ec510b18          VMOV     r0,r1,d8              ;241
000be4  f7fffffe          BL       __aeabi_cdrcmple
000be8  f4ffaf3b          BCC      |L4.2658|
;;;250            }
;;;251    
;;;252        C->a[0] = (q31_t)(0x7FFFFFFF * a1); //a[0] in the IIR struct is actually a1
000bec  ed990b02          VLDR     d0,[r9,#8]
000bf0  ed9f8b1f          VLDR     d8,|L4.3184|
000bf4  ec510b10          VMOV     r0,r1,d0
000bf8  ec532b18          VMOV     r2,r3,d8
000bfc  f7fffffe          BL       __aeabi_dmul
000c00  f7fffffe          BL       __aeabi_d2iz
;;;253        C->a[1] = (q31_t)(0x7FFFFFFF * a2); //a[1] in the IIR struct is actually a2
000c04  60e8              STR      r0,[r5,#0xc]
000c06  ed990b04          VLDR     d0,[r9,#0x10]
000c0a  ec532b18          VMOV     r2,r3,d8
000c0e  ec510b10          VMOV     r0,r1,d0
000c12  f7fffffe          BL       __aeabi_dmul
000c16  f7fffffe          BL       __aeabi_d2iz
;;;254        C->b[0] = (q31_t)(0x7FFFFFFF * b0);
000c1a  6128              STR      r0,[r5,#0x10]
000c1c  ed990b06          VLDR     d0,[r9,#0x18]
000c20  ec532b18          VMOV     r2,r3,d8
000c24  ec510b10          VMOV     r0,r1,d0
000c28  f7fffffe          BL       __aeabi_dmul
000c2c  f7fffffe          BL       __aeabi_d2iz
;;;255        C->b[1] = (q31_t)(0x7FFFFFFF * b1);
000c30  6028              STR      r0,[r5,#0]
000c32  ed990b08          VLDR     d0,[r9,#0x20]
000c36  ec532b18          VMOV     r2,r3,d8
000c3a  ec510b10          VMOV     r0,r1,d0
000c3e  f7fffffe          BL       __aeabi_dmul
000c42  f7fffffe          BL       __aeabi_d2iz
;;;256        C->b[2] = (q31_t)(0x7FFFFFFF * b2);
000c46  6068              STR      r0,[r5,#4]
000c48  ed990b0a          VLDR     d0,[r9,#0x28]
000c4c  ec532b18          VMOV     r2,r3,d8
000c50  ec510b10          VMOV     r0,r1,d0
000c54  f7fffffe          BL       __aeabi_dmul
000c58  f7fffffe          BL       __aeabi_d2iz
000c5c  60a8              STR      r0,[r5,#8]
;;;257        return;
;;;258    }
000c5e  ecbd8b0e          VPOP     {d8-d14}
000c62  e8bd87f0          POP      {r4-r10,pc}
;;;259    
                          ENDP

000c66  0000              DCW      0x0000
                  |L4.3176|
                          DCD      ||.bss||
                          DCD      0x00000000
                  |L4.3184|
000c70  ffc00000          DCFD     0x41dfffffffc00000 ; 2147483647
000c74  41dfffff

                          AREA ||i.GetPeak||, CODE, READONLY, ALIGN=3

                  GetPeak PROC
;;;398    
;;;399    double GetPeak(double *Values,uint8_t Size)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;400    {
000004  1e0e              SUBS     r6,r1,#0
000006  ed2d8b06          VPUSH    {d8-d10}
00000a  4607              MOV      r7,r0
;;;401        double Peak = 0;
;;;402        double Temp = 0;
;;;403        uint8_t i;
;;;404    
;;;405        for(i=0; i<Size; i++)
00000c  f04f0400          MOV      r4,#0
000010  ed9f8b19          VLDR     d8,|L5.120|
000014  bfc4              ITT      GT                    ;401
000016  eeb0aa48          VMOVGT.F32 s20,s16               ;401
00001a  eef0aa68          VMOVGT.F32 s21,s17               ;401
00001e  dd23              BLE      |L5.104|
                  |L5.32|
;;;406            {
;;;407                if(Values[i]<0)
000020  eb0705c4          ADD      r5,r7,r4,LSL #3
000024  ec532b1a          VMOV     r2,r3,d10
000028  ed950b00          VLDR     d0,[r5,#0]
00002c  ec510b10          VMOV     r0,r1,d0
000030  f7fffffe          BL       __aeabi_cdcmple
;;;408                    Temp= Values[i]*-1;
;;;409                else
;;;410                    Temp = Values[i];
000034  bf28              IT       CS
000036  ed959b00          VLDRCS   d9,[r5,#0]
00003a  d207              BCS      |L5.76|
00003c  ed950b00          VLDR     d0,[r5,#0]            ;408
000040  ec510b10          VMOV     r0,r1,d0              ;408
000044  f7fffffe          BL       __aeabi_dneg
000048  ec410b19          VMOV     d9,r0,r1              ;408
                  |L5.76|
;;;411    
;;;412                if(Temp>Peak)
;;;413                    Peak = Temp;
00004c  ec532b18          VMOV     r2,r3,d8
000050  ec510b19          VMOV     r0,r1,d9
000054  f7fffffe          BL       __aeabi_cdrcmple
000058  bf3c              ITT      CC
00005a  eeb08a49          VMOVCC.F32 s16,s18
00005e  eef08a69          VMOVCC.F32 s17,s19
000062  1c64              ADDS     r4,r4,#1
000064  42b4              CMP      r4,r6
000066  dbdb              BLT      |L5.32|
                  |L5.104|
;;;414            }
;;;415    
;;;416        return Peak;
000068  eeb00a48          VMOV.F32 s0,s16
00006c  eef00a68          VMOV.F32 s1,s17
;;;417    }
000070  ecbd8b06          VPOP     {d8-d10}
000074  e8bd81f0          POP      {r4-r8,pc}
                          ENDP

                  |L5.120|
000078  00000000          DCFD     0x0000000000000000 ; 0
00007c  00000000

                          AREA ||i.Init_f32_IIR||, CODE, READONLY, ALIGN=2

                  Init_f32_IIR PROC
;;;31     
;;;32     void Init_f32_IIR(f32_IIR *MyIIR)
000000  2100              MOVS     r1,#0
;;;33     {
;;;34         MyIIR->Update = 0;
;;;35         MyIIR->State.Yn1 = 0;
000002  ed9f0a04          VLDR     s0,|L6.20|
000006  f8801038          STRB     r1,[r0,#0x38]         ;34
00000a  ed800a07          VSTR     s0,[r0,#0x1c]
;;;36         MyIIR->State.Yn2 = 0;
00000e  ed800a08          VSTR     s0,[r0,#0x20]
;;;37     }
000012  4770              BX       lr
;;;38     
                          ENDP

                  |L6.20|
000014  00000000          DCFS     0x00000000 ; 0

                          AREA ||i.Init_q31_t_IIR||, CODE, READONLY, ALIGN=1

                  Init_q31_t_IIR PROC
;;;24     
;;;25     void Init_q31_t_IIR(q31_t_IIR *MyIIR)
000000  2100              MOVS     r1,#0
;;;26     {
;;;27         MyIIR->Update = 0;
000002  f8801048          STRB     r1,[r0,#0x48]
000006  e9c01108          STRD     r1,r1,[r0,#0x20]
00000a  e9c0110a          STRD     r1,r1,[r0,#0x28]
;;;28         MyIIR->State.Yn1 = 0;
;;;29         MyIIR->State.Yn2 = 0;
;;;30     }
00000e  4770              BX       lr
;;;31     
                          ENDP


                          AREA ||.bss||, DATA, NOINIT, ALIGN=3

                  coef
                          %        48

                          AREA ||.data||, DATA, ALIGN=3

                  A
                          %        8
                  ||w0||
                          %        8
                  alpha
                          %        8

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\..\\..\\..\\COMMON\\SRC\\TEST\\IIR.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___5_IIR_c_22a1b159____REV16|
#line 129 "..\\..\\..\\chip_5411x\\inc\\core_cmInstr.h"
|__asm___5_IIR_c_22a1b159____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___5_IIR_c_22a1b159____REVSH|
#line 144
|__asm___5_IIR_c_22a1b159____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
