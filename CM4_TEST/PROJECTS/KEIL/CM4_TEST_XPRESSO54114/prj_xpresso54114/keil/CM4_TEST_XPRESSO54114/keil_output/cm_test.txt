; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\keil_output\cm_test.o --asm_dir=.\keil_output\ --list_dir=.\keil_output\ --depend=.\keil_output\cm_test.d --cpu=Cortex-M4.fp --apcs=interwork -O3 --diag_suppress=9931 -I..\..\..\chip_5411x\inc -I..\..\..\brd_xpresso54114\inc -I..\..\..\..\..\..\COMMON\SRC\CMSIS_DSP_4_5\inc -IC:\Users\ehughes\Documents\GitHub\ESC-M4\CM4_TEST\PROJECTS\KEIL\CM4_TEST_XPRESSO54114\prj_xpresso54114\keil\CM4_TEST_XPRESSO54114\RTE\_iflash_nxp_lpcxpresso_lpc5411X -IC:\Keil_v5\ARM\PACK\Keil\LPC54000_DFP\2.1.0\LPCOpen\lpc5411x\chip_5411x\inc -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=522 -DCHIP_LPC5411X -DCHIP_LPC5411X -DCORE_M4 -DARM_MATH_CM4 -D__FPU_PRESENT=1 -DBOARD=2 -DABI=1 -DBUILD_CONFIG=3 -DCORE_M4 --omf_browse=.\keil_output\cm_test.crf ..\..\..\..\..\..\COMMON\SRC\TEST\CM_TEST.c]
                          THUMB

                          AREA ||i.main||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                          REQUIRE _printf_i
                  main PROC
;;;252    
;;;253    int main(void)
000000  b51c              PUSH     {r2-r4,lr}
;;;254    {
;;;255    int i = 0 ;
000002  2700              MOVS     r7,#0
;;;256    volatile float r=1;
000004  eeb70a00          VMOV.F32 s0,#1.00000000
000008  ed8d0a00          VSTR     s0,[sp,#0]
;;;257    volatile uint32_t CycleTimer = 0;
00000c  463d              MOV      r5,r7
;;;258    volatile uint32_t CycleOffset = 0;
00000e  9700              STR      r7,[sp,#0]
;;;259    
;;;260    #if(BOARD==0 || BOARD==1 || BOARD==2)
;;;261    	SystemCoreClockUpdate();
000010  9701              STR      r7,[sp,#4]
000012  f7fffffe          BL       SystemCoreClockUpdate
;;;262    	 fpuInit();
000016  f7fffffe          BL       fpuInit
;;;263    	Board_Init();
00001a  f7fffffe          BL       Board_Init
;;;264    #endif
;;;265    
;;;266    
;;;267    #if (BOARD==3)
;;;268      BOARD_InitPins();
;;;269      BOARD_BootClockRUN();
;;;270      BOARD_InitDebugConsole();
;;;271      SystemCoreClockUpdate();
;;;272    #endif
;;;273    
;;;274    
;;;275    INIT_CYCLE_TIMER;
00001e  f04f24e0          MOV      r4,#0xe000e000
000022  2604              MOVS     r6,#4
000024  6126              STR      r6,[r4,#0x10]
000026  f06f407f          MVN      r0,#0xff000000
00002a  6160              STR      r0,[r4,#0x14]
00002c  61a5              STR      r5,[r4,#0x18]
;;;276    
;;;277    #ifdef ENABLE_BLOCK_PROCESSING
;;;278    
;;;279    	for(i=0;i<MAX_INPUT_SIZE;i++)
;;;280        {
;;;281        	InputData.q31[i] = rand();
00002e  f8df9388          LDR      r9,|L1.952|
000032  f44f5880          MOV      r8,#0x1000            ;279
000036  bf00              NOP      
                  |L1.56|
000038  f7fffffe          BL       rand
00003c  f8490027          STR      r0,[r9,r7,LSL #2]
000040  1c7f              ADDS     r7,r7,#1
000042  4547              CMP      r7,r8                 ;279
000044  dbf8              BLT      |L1.56|
;;;282        }
;;;283    
;;;284    	#ifdef ENABLE_BLOCK_FIR
;;;285    		for(i=0;i<32;i++)
;;;286    		{
;;;287    		#ifdef _f32
;;;288    			FIR_Coef_f32[i] = (float32_t)i/32;
;;;289    		#endif
;;;290    
;;;291    		#ifdef _q31
;;;292    			FIR_Coef_q31[i] = i<<26;
;;;293    		#endif
;;;294    
;;;295    		#ifdef _q15
;;;296    			 	 FIR_Coef_q15[i] = i<<10;
;;;297    		#endif
;;;298    		}
;;;299    	#endif
;;;300    
;;;301    #endif
;;;302    
;;;303        CM_PRINTF("Cortex M4/7 Performance Test.\r\n");
000046  a0dd              ADR      r0,|L1.956|
000048  f7fffffe          BL       __2printf
;;;304    		
;;;305    		#ifdef __ARMCC_VERSION
;;;306    		
;;;307    			CM_PRINTF("ARMCC Version: %d\r\n",__ARMCC_VERSION);
00004c  49e3              LDR      r1,|L1.988|
00004e  a0e4              ADR      r0,|L1.992|
000050  f7fffffe          BL       __2printf
;;;308    			CM_PRINTF("%s %s %s\r\n",CPU_NAME,OPT_LEVEL,ABI_TYPE);
000054  a3e7              ADR      r3,|L1.1012|
000056  a2e9              ADR      r2,|L1.1020|
000058  a1e9              ADR      r1,|L1.1024|
00005a  a0ec              ADR      r0,|L1.1036|
00005c  f7fffffe          BL       __2printf
;;;309    			CM_PRINTF("NOTES: \r\n");
000060  a0ed              ADR      r0,|L1.1048|
000062  f7fffffe          BL       __2printf
;;;310    		
;;;311    		#else
;;;312    		
;;;313    			CM_PRINTF("GCC Version: %d.%d.%d\r\n",__GNUC__,__GNUC_MINOR__,__GNUC_PATCHLEVEL__);
;;;314    			CM_PRINTF("%s %s %s\r\n",CPU_NAME,OPT_LEVEL,ABI_TYPE);
;;;315    			CM_PRINTF("NOTES: \r\n");
;;;316    	  
;;;317    		#endif
;;;318    
;;;319       	START_CYCLE_TIMER;
000066  61a5              STR      r5,[r4,#0x18]
000068  2705              MOVS     r7,#5
00006a  6127              STR      r7,[r4,#0x10]
;;;320       	STOP_AND_GRAB_CYCLE_TIMER(CycleOffset);
00006c  6126              STR      r6,[r4,#0x10]
00006e  69a0              LDR      r0,[r4,#0x18]
000070  f1c07080          RSB      r0,r0,#0x1000000
;;;321       	CM_PRINTF("Cycle Offset: %d\r\n",CycleOffset);
000074  4601              MOV      r1,r0
000076  9001              STR      r0,[sp,#4]
000078  a0ea              ADR      r0,|L1.1060|
00007a  f7fffffe          BL       __2printf
;;;322    
;;;323       	/***
;;;324       	 *      ____  _      ____   _____ _  __  _____  _____   ____   _____ ______  _____ _____ _____ _   _  _____
;;;325       	 *     |  _ \| |    / __ \ / ____| |/ / |  __ \|  __ \ / __ \ / ____|  ____|/ ____/ ____|_   _| \ | |/ ____|
;;;326       	 *     | |_) | |   | |  | | |    | ' /  | |__) | |__) | |  | | |    | |__  | (___| (___   | | |  \| | |  __
;;;327       	 *     |  _ <| |   | |  | | |    |  <   |  ___/|  _  /| |  | | |    |  __|  \___ \\___ \  | | | . ` | | |_ |
;;;328       	 *     | |_) | |___| |__| | |____| . \  | |    | | \ \| |__| | |____| |____ ____) |___) |_| |_| |\  | |__| |
;;;329       	 *     |____/|______\____/ \_____|_|\_\ |_|    |_|  \_\\____/ \_____|______|_____/_____/|_____|_| \_|\_____|
;;;330       	 *
;;;331       	 *
;;;332       	 */
;;;333    
;;;334    #ifdef ENABLE_BLOCK_PROCESSING
;;;335    
;;;336       	CM_PRINTF("\r\nBlock Processing Functions\r\n");
00007e  a0ee              ADR      r0,|L1.1080|
000080  f7fffffe          BL       __2printf
;;;337    
;;;338       	CM_PRINTF("Length,16,32,64,128,256,512,1024,2048,4096");
000084  a0f4              ADR      r0,|L1.1112|
000086  f7fffffe          BL       __2printf
;;;339    
;;;340    	   /***
;;;341    	    *       __ ____ ___
;;;342    	    *      / _|___ \__ \
;;;343    	    *     | |_  __) | ) |
;;;344    	    *     |  _||__ < / /
;;;345    	    *     | |  ___) / /_
;;;346    	    *     |_| |____/____|
;;;347    	    *
;;;348    	    *
;;;349    	    */
;;;350    
;;;351    	#ifdef _f32
;;;352    
;;;353    			#ifdef ENABLE_CFFT_BR
;;;354    					CM_PRINTF("\r\n");
00008a  a0e2              ADR      r0,|L1.1044|
00008c  f7fffffe          BL       __2printf
;;;355    					CM_PRINTF("\r\nCFFT-f32-BitReverse,");
000090  a0fc              ADR      r0,|L1.1156|
000092  f7fffffe          BL       __2printf
;;;356    					START_CYCLE_TIMER; arm_cfft_f32(&arm_cfft_sR_f32_len16,  &InputData.f32[0], 0, 1);REPORT_CYCLE_TIMER;COMMA;
000096  61a5              STR      r5,[r4,#0x18]
000098  6127              STR      r7,[r4,#0x10]
00009a  2301              MOVS     r3,#1
00009c  2200              MOVS     r2,#0
00009e  49c6              LDR      r1,|L1.952|
0000a0  48fe              LDR      r0,|L1.1180|
0000a2  f7fffffe          BL       arm_cfft_f32
0000a6  6126              STR      r6,[r4,#0x10]
0000a8  69a0              LDR      r0,[r4,#0x18]
0000aa  9901              LDR      r1,[sp,#4]
0000ac  f1c07080          RSB      r0,r0,#0x1000000
0000b0  9000              STR      r0,[sp,#0]
0000b2  1a41              SUBS     r1,r0,r1
0000b4  a0fa              ADR      r0,|L1.1184|
0000b6  f7fffffe          BL       __2printf
0000ba  a0fa              ADR      r0,|L1.1188|
0000bc  f7fffffe          BL       __2printf
;;;357    					START_CYCLE_TIMER;arm_cfft_f32(&arm_cfft_sR_f32_len32,   &InputData.f32[0], 0, 1);REPORT_CYCLE_TIMER;COMMA;
0000c0  61a5              STR      r5,[r4,#0x18]
0000c2  6127              STR      r7,[r4,#0x10]
0000c4  2301              MOVS     r3,#1
0000c6  2200              MOVS     r2,#0
0000c8  49bb              LDR      r1,|L1.952|
0000ca  48f7              LDR      r0,|L1.1192|
0000cc  f7fffffe          BL       arm_cfft_f32
0000d0  6126              STR      r6,[r4,#0x10]
0000d2  69a0              LDR      r0,[r4,#0x18]
0000d4  9901              LDR      r1,[sp,#4]
0000d6  f1c07080          RSB      r0,r0,#0x1000000
0000da  9000              STR      r0,[sp,#0]
0000dc  1a41              SUBS     r1,r0,r1
0000de  a0f0              ADR      r0,|L1.1184|
0000e0  f7fffffe          BL       __2printf
0000e4  a0ef              ADR      r0,|L1.1188|
0000e6  f7fffffe          BL       __2printf
;;;358    					START_CYCLE_TIMER;arm_cfft_f32(&arm_cfft_sR_f32_len64,   &InputData.f32[0], 0, 1);REPORT_CYCLE_TIMER;COMMA;
0000ea  61a5              STR      r5,[r4,#0x18]
0000ec  6127              STR      r7,[r4,#0x10]
0000ee  2301              MOVS     r3,#1
0000f0  2200              MOVS     r2,#0
0000f2  49b1              LDR      r1,|L1.952|
0000f4  48ed              LDR      r0,|L1.1196|
0000f6  f7fffffe          BL       arm_cfft_f32
0000fa  6126              STR      r6,[r4,#0x10]
0000fc  69a0              LDR      r0,[r4,#0x18]
0000fe  9901              LDR      r1,[sp,#4]
000100  f1c07080          RSB      r0,r0,#0x1000000
000104  9000              STR      r0,[sp,#0]
000106  1a41              SUBS     r1,r0,r1
000108  a0e5              ADR      r0,|L1.1184|
00010a  f7fffffe          BL       __2printf
00010e  a0e5              ADR      r0,|L1.1188|
000110  f7fffffe          BL       __2printf
;;;359    					START_CYCLE_TIMER;arm_cfft_f32(&arm_cfft_sR_f32_len128,  &InputData.f32[0], 0, 1);REPORT_CYCLE_TIMER;COMMA;
000114  61a5              STR      r5,[r4,#0x18]
000116  6127              STR      r7,[r4,#0x10]
000118  2301              MOVS     r3,#1
00011a  2200              MOVS     r2,#0
00011c  49a6              LDR      r1,|L1.952|
00011e  48e4              LDR      r0,|L1.1200|
000120  f7fffffe          BL       arm_cfft_f32
000124  6126              STR      r6,[r4,#0x10]
000126  69a0              LDR      r0,[r4,#0x18]
000128  9901              LDR      r1,[sp,#4]
00012a  f1c07080          RSB      r0,r0,#0x1000000
00012e  9000              STR      r0,[sp,#0]
000130  1a41              SUBS     r1,r0,r1
000132  a0db              ADR      r0,|L1.1184|
000134  f7fffffe          BL       __2printf
000138  a0da              ADR      r0,|L1.1188|
00013a  f7fffffe          BL       __2printf
;;;360    					START_CYCLE_TIMER;arm_cfft_f32(&arm_cfft_sR_f32_len256,  &InputData.f32[0], 0, 1);REPORT_CYCLE_TIMER;COMMA;
00013e  61a5              STR      r5,[r4,#0x18]
000140  6127              STR      r7,[r4,#0x10]
000142  2301              MOVS     r3,#1
000144  2200              MOVS     r2,#0
000146  499c              LDR      r1,|L1.952|
000148  48da              LDR      r0,|L1.1204|
00014a  f7fffffe          BL       arm_cfft_f32
00014e  6126              STR      r6,[r4,#0x10]
000150  69a0              LDR      r0,[r4,#0x18]
000152  9901              LDR      r1,[sp,#4]
000154  f1c07080          RSB      r0,r0,#0x1000000
000158  9000              STR      r0,[sp,#0]
00015a  1a41              SUBS     r1,r0,r1
00015c  a0d0              ADR      r0,|L1.1184|
00015e  f7fffffe          BL       __2printf
000162  a0d0              ADR      r0,|L1.1188|
000164  f7fffffe          BL       __2printf
;;;361    					START_CYCLE_TIMER;arm_cfft_f32(&arm_cfft_sR_f32_len512,  &InputData.f32[0], 0, 1);REPORT_CYCLE_TIMER;COMMA;
000168  61a5              STR      r5,[r4,#0x18]
00016a  6127              STR      r7,[r4,#0x10]
00016c  2301              MOVS     r3,#1
00016e  2200              MOVS     r2,#0
000170  4991              LDR      r1,|L1.952|
000172  48d1              LDR      r0,|L1.1208|
000174  f7fffffe          BL       arm_cfft_f32
000178  6126              STR      r6,[r4,#0x10]
00017a  69a0              LDR      r0,[r4,#0x18]
00017c  9901              LDR      r1,[sp,#4]
00017e  f1c07080          RSB      r0,r0,#0x1000000
000182  9000              STR      r0,[sp,#0]
000184  1a41              SUBS     r1,r0,r1
000186  a0c6              ADR      r0,|L1.1184|
000188  f7fffffe          BL       __2printf
00018c  a0c5              ADR      r0,|L1.1188|
00018e  f7fffffe          BL       __2printf
;;;362    					START_CYCLE_TIMER;arm_cfft_f32(&arm_cfft_sR_f32_len1024, &InputData.f32[0], 0, 1);REPORT_CYCLE_TIMER;COMMA;
000192  61a5              STR      r5,[r4,#0x18]
000194  6127              STR      r7,[r4,#0x10]
000196  2301              MOVS     r3,#1
000198  2200              MOVS     r2,#0
00019a  4987              LDR      r1,|L1.952|
00019c  48c7              LDR      r0,|L1.1212|
00019e  f7fffffe          BL       arm_cfft_f32
0001a2  6126              STR      r6,[r4,#0x10]
0001a4  69a0              LDR      r0,[r4,#0x18]
0001a6  9901              LDR      r1,[sp,#4]
0001a8  f1c07080          RSB      r0,r0,#0x1000000
0001ac  9000              STR      r0,[sp,#0]
0001ae  1a41              SUBS     r1,r0,r1
0001b0  a0bb              ADR      r0,|L1.1184|
0001b2  f7fffffe          BL       __2printf
0001b6  a0bb              ADR      r0,|L1.1188|
0001b8  f7fffffe          BL       __2printf
;;;363    					START_CYCLE_TIMER;arm_cfft_f32(&arm_cfft_sR_f32_len2048, &InputData.f32[0], 0, 1);REPORT_CYCLE_TIMER;COMMA;
0001bc  61a5              STR      r5,[r4,#0x18]
0001be  6127              STR      r7,[r4,#0x10]
0001c0  2301              MOVS     r3,#1
0001c2  2200              MOVS     r2,#0
0001c4  497c              LDR      r1,|L1.952|
0001c6  48be              LDR      r0,|L1.1216|
0001c8  f7fffffe          BL       arm_cfft_f32
0001cc  6126              STR      r6,[r4,#0x10]
0001ce  69a0              LDR      r0,[r4,#0x18]
0001d0  9901              LDR      r1,[sp,#4]
0001d2  f1c07080          RSB      r0,r0,#0x1000000
0001d6  9000              STR      r0,[sp,#0]
0001d8  1a41              SUBS     r1,r0,r1
0001da  a0b1              ADR      r0,|L1.1184|
0001dc  f7fffffe          BL       __2printf
0001e0  a0b0              ADR      r0,|L1.1188|
0001e2  f7fffffe          BL       __2printf
;;;364    					START_CYCLE_TIMER;arm_cfft_f32(&arm_cfft_sR_f32_len4096, &InputData.f32[0], 0, 1);REPORT_CYCLE_TIMER;COMMA;
0001e6  61a5              STR      r5,[r4,#0x18]
0001e8  6127              STR      r7,[r4,#0x10]
0001ea  2301              MOVS     r3,#1
0001ec  2200              MOVS     r2,#0
0001ee  4972              LDR      r1,|L1.952|
0001f0  48b4              LDR      r0,|L1.1220|
0001f2  f7fffffe          BL       arm_cfft_f32
0001f6  6126              STR      r6,[r4,#0x10]
0001f8  69a0              LDR      r0,[r4,#0x18]
0001fa  9901              LDR      r1,[sp,#4]
0001fc  f1c07080          RSB      r0,r0,#0x1000000
000200  9000              STR      r0,[sp,#0]
000202  1a41              SUBS     r1,r0,r1
000204  a0a6              ADR      r0,|L1.1184|
000206  f7fffffe          BL       __2printf
00020a  a0a6              ADR      r0,|L1.1188|
00020c  f7fffffe          BL       __2printf
;;;365    		    #endif
;;;366    
;;;367    			#ifdef ENABLE_CFFT_NBR
;;;368    					CM_PRINTF("\r\n");
000210  a080              ADR      r0,|L1.1044|
000212  f7fffffe          BL       __2printf
;;;369    					CM_PRINTF("CFFT-f32-NoBitReverse,");
000216  a0ac              ADR      r0,|L1.1224|
000218  f7fffffe          BL       __2printf
;;;370    					START_CYCLE_TIMER;arm_cfft_f32(&arm_cfft_sR_f32_len16,   &InputData.f32[0], 0, 0);REPORT_CYCLE_TIMER;COMMA;
00021c  61a5              STR      r5,[r4,#0x18]
00021e  6127              STR      r7,[r4,#0x10]
000220  2300              MOVS     r3,#0
000222  461a              MOV      r2,r3
000224  4964              LDR      r1,|L1.952|
000226  489d              LDR      r0,|L1.1180|
000228  f7fffffe          BL       arm_cfft_f32
00022c  6126              STR      r6,[r4,#0x10]
00022e  69a0              LDR      r0,[r4,#0x18]
000230  9901              LDR      r1,[sp,#4]
000232  f1c07080          RSB      r0,r0,#0x1000000
000236  9000              STR      r0,[sp,#0]
000238  1a41              SUBS     r1,r0,r1
00023a  a099              ADR      r0,|L1.1184|
00023c  f7fffffe          BL       __2printf
000240  a098              ADR      r0,|L1.1188|
000242  f7fffffe          BL       __2printf
;;;371    					START_CYCLE_TIMER;arm_cfft_f32(&arm_cfft_sR_f32_len32,   &InputData.f32[0], 0, 0);REPORT_CYCLE_TIMER;COMMA;
000246  61a5              STR      r5,[r4,#0x18]
000248  6127              STR      r7,[r4,#0x10]
00024a  2300              MOVS     r3,#0
00024c  461a              MOV      r2,r3
00024e  495a              LDR      r1,|L1.952|
000250  4895              LDR      r0,|L1.1192|
000252  f7fffffe          BL       arm_cfft_f32
000256  6126              STR      r6,[r4,#0x10]
000258  69a0              LDR      r0,[r4,#0x18]
00025a  9901              LDR      r1,[sp,#4]
00025c  f1c07080          RSB      r0,r0,#0x1000000
000260  9000              STR      r0,[sp,#0]
000262  1a41              SUBS     r1,r0,r1
000264  a08e              ADR      r0,|L1.1184|
000266  f7fffffe          BL       __2printf
00026a  a08e              ADR      r0,|L1.1188|
00026c  f7fffffe          BL       __2printf
;;;372    					START_CYCLE_TIMER;arm_cfft_f32(&arm_cfft_sR_f32_len64,   &InputData.f32[0], 0, 0);REPORT_CYCLE_TIMER;COMMA;
000270  61a5              STR      r5,[r4,#0x18]
000272  6127              STR      r7,[r4,#0x10]
000274  2300              MOVS     r3,#0
000276  461a              MOV      r2,r3
000278  494f              LDR      r1,|L1.952|
00027a  488c              LDR      r0,|L1.1196|
00027c  f7fffffe          BL       arm_cfft_f32
000280  6126              STR      r6,[r4,#0x10]
000282  69a0              LDR      r0,[r4,#0x18]
000284  9901              LDR      r1,[sp,#4]
000286  f1c07080          RSB      r0,r0,#0x1000000
00028a  9000              STR      r0,[sp,#0]
00028c  1a41              SUBS     r1,r0,r1
00028e  a084              ADR      r0,|L1.1184|
000290  f7fffffe          BL       __2printf
000294  a083              ADR      r0,|L1.1188|
000296  f7fffffe          BL       __2printf
;;;373    					START_CYCLE_TIMER;arm_cfft_f32(&arm_cfft_sR_f32_len128,  &InputData.f32[0], 0, 0);REPORT_CYCLE_TIMER;COMMA;
00029a  61a5              STR      r5,[r4,#0x18]
00029c  6127              STR      r7,[r4,#0x10]
00029e  2300              MOVS     r3,#0
0002a0  461a              MOV      r2,r3
0002a2  4945              LDR      r1,|L1.952|
0002a4  4882              LDR      r0,|L1.1200|
0002a6  f7fffffe          BL       arm_cfft_f32
0002aa  6126              STR      r6,[r4,#0x10]
0002ac  69a0              LDR      r0,[r4,#0x18]
0002ae  9901              LDR      r1,[sp,#4]
0002b0  f1c07080          RSB      r0,r0,#0x1000000
0002b4  9000              STR      r0,[sp,#0]
0002b6  1a41              SUBS     r1,r0,r1
0002b8  a079              ADR      r0,|L1.1184|
0002ba  f7fffffe          BL       __2printf
0002be  a079              ADR      r0,|L1.1188|
0002c0  f7fffffe          BL       __2printf
;;;374    					START_CYCLE_TIMER;arm_cfft_f32(&arm_cfft_sR_f32_len256,  &InputData.f32[0], 0, 0);REPORT_CYCLE_TIMER;COMMA;
0002c4  61a5              STR      r5,[r4,#0x18]
0002c6  6127              STR      r7,[r4,#0x10]
0002c8  2300              MOVS     r3,#0
0002ca  461a              MOV      r2,r3
0002cc  493a              LDR      r1,|L1.952|
0002ce  4879              LDR      r0,|L1.1204|
0002d0  f7fffffe          BL       arm_cfft_f32
0002d4  6126              STR      r6,[r4,#0x10]
0002d6  69a0              LDR      r0,[r4,#0x18]
0002d8  9901              LDR      r1,[sp,#4]
0002da  f1c07080          RSB      r0,r0,#0x1000000
0002de  9000              STR      r0,[sp,#0]
0002e0  1a41              SUBS     r1,r0,r1
0002e2  a06f              ADR      r0,|L1.1184|
0002e4  f7fffffe          BL       __2printf
0002e8  a06e              ADR      r0,|L1.1188|
0002ea  f7fffffe          BL       __2printf
;;;375    					START_CYCLE_TIMER;arm_cfft_f32(&arm_cfft_sR_f32_len512,  &InputData.f32[0], 0, 0);REPORT_CYCLE_TIMER;COMMA;
0002ee  61a5              STR      r5,[r4,#0x18]
0002f0  6127              STR      r7,[r4,#0x10]
0002f2  2300              MOVS     r3,#0
0002f4  461a              MOV      r2,r3
0002f6  4930              LDR      r1,|L1.952|
0002f8  486f              LDR      r0,|L1.1208|
0002fa  f7fffffe          BL       arm_cfft_f32
0002fe  6126              STR      r6,[r4,#0x10]
000300  69a0              LDR      r0,[r4,#0x18]
000302  9901              LDR      r1,[sp,#4]
000304  f1c07080          RSB      r0,r0,#0x1000000
000308  9000              STR      r0,[sp,#0]
00030a  1a41              SUBS     r1,r0,r1
00030c  a064              ADR      r0,|L1.1184|
00030e  f7fffffe          BL       __2printf
000312  a064              ADR      r0,|L1.1188|
000314  f7fffffe          BL       __2printf
;;;376    					START_CYCLE_TIMER;arm_cfft_f32(&arm_cfft_sR_f32_len1024, &InputData.f32[0], 0, 0);REPORT_CYCLE_TIMER;COMMA;
000318  61a5              STR      r5,[r4,#0x18]
00031a  6127              STR      r7,[r4,#0x10]
00031c  2300              MOVS     r3,#0
00031e  461a              MOV      r2,r3
000320  4925              LDR      r1,|L1.952|
000322  4866              LDR      r0,|L1.1212|
000324  f7fffffe          BL       arm_cfft_f32
000328  6126              STR      r6,[r4,#0x10]
00032a  69a0              LDR      r0,[r4,#0x18]
00032c  9901              LDR      r1,[sp,#4]
00032e  f1c07080          RSB      r0,r0,#0x1000000
000332  9000              STR      r0,[sp,#0]
000334  1a41              SUBS     r1,r0,r1
000336  a05a              ADR      r0,|L1.1184|
000338  f7fffffe          BL       __2printf
00033c  a059              ADR      r0,|L1.1188|
00033e  f7fffffe          BL       __2printf
;;;377    					START_CYCLE_TIMER;arm_cfft_f32(&arm_cfft_sR_f32_len2048, &InputData.f32[0], 0, 0);REPORT_CYCLE_TIMER;COMMA;
000342  61a5              STR      r5,[r4,#0x18]
000344  6127              STR      r7,[r4,#0x10]
000346  2300              MOVS     r3,#0
000348  461a              MOV      r2,r3
00034a  491b              LDR      r1,|L1.952|
00034c  485c              LDR      r0,|L1.1216|
00034e  f7fffffe          BL       arm_cfft_f32
000352  6126              STR      r6,[r4,#0x10]
000354  69a0              LDR      r0,[r4,#0x18]
000356  9901              LDR      r1,[sp,#4]
000358  f1c07080          RSB      r0,r0,#0x1000000
00035c  9000              STR      r0,[sp,#0]
00035e  1a41              SUBS     r1,r0,r1
000360  a04f              ADR      r0,|L1.1184|
000362  f7fffffe          BL       __2printf
000366  a04f              ADR      r0,|L1.1188|
000368  f7fffffe          BL       __2printf
;;;378    					START_CYCLE_TIMER;arm_cfft_f32(&arm_cfft_sR_f32_len4096, &InputData.f32[0], 0, 0);REPORT_CYCLE_TIMER;COMMA;
00036c  61a5              STR      r5,[r4,#0x18]
00036e  6127              STR      r7,[r4,#0x10]
000370  2300              MOVS     r3,#0
000372  461a              MOV      r2,r3
000374  4910              LDR      r1,|L1.952|
000376  4853              LDR      r0,|L1.1220|
000378  f7fffffe          BL       arm_cfft_f32
00037c  6126              STR      r6,[r4,#0x10]
00037e  69a0              LDR      r0,[r4,#0x18]
000380  9901              LDR      r1,[sp,#4]
000382  f1c07080          RSB      r0,r0,#0x1000000
000386  9000              STR      r0,[sp,#0]
000388  1a41              SUBS     r1,r0,r1
00038a  a045              ADR      r0,|L1.1184|
00038c  f7fffffe          BL       __2printf
000390  a044              ADR      r0,|L1.1188|
000392  f7fffffe          BL       __2printf
;;;379    			#endif
;;;380    
;;;381    
;;;382    			#ifdef ENABLE_RFFT_NBR
;;;383    					CM_PRINTF("\r\n");
000396  a01f              ADR      r0,|L1.1044|
000398  f7fffffe          BL       __2printf
;;;384    					CM_PRINTF("RFFT-f32-NoBitReverse,");
00039c  a050              ADR      r0,|L1.1248|
00039e  f7fffffe          BL       __2printf
;;;385    
;;;386    					CM_PRINTF("n/a");COMMA;
0003a2  a055              ADR      r0,|L1.1272|
0003a4  f7fffffe          BL       __2printf
0003a8  a03e              ADR      r0,|L1.1188|
0003aa  f7fffffe          BL       __2printf
;;;387    					arm_rfft_fast_init_f32(&FFT_Inst.rfft_fast_f32,32);START_CYCLE_TIMER;arm_rfft_fast_f32(&FFT_Inst.rfft_fast_f32,&InputData.f32[0], &OutputData.f32[0], 0);REPORT_CYCLE_TIMER;COMMA;
0003ae  2120              MOVS     r1,#0x20
0003b0  4852              LDR      r0,|L1.1276|
0003b2  f7fffffe          BL       arm_rfft_fast_init_f32
0003b6  e0a3              B        |L1.1280|
                  |L1.952|
                          DCD      ||area_number.4||
                  |L1.956|
0003bc  436f7274          DCB      "Cortex M4/7 Performance Test.\r\n",0
0003c0  6578204d
0003c4  342f3720
0003c8  50657266
0003cc  6f726d61
0003d0  6e636520
0003d4  54657374
0003d8  2e0d0a00
                  |L1.988|
                          DCD      0x004d3746
                  |L1.992|
0003e0  41524d43          DCB      "ARMCC Version: %d\r\n",0
0003e4  43205665
0003e8  7273696f
0003ec  6e3a2025
0003f0  640d0a00
                  |L1.1012|
0003f4  48617264          DCB      "HardABI",0
0003f8  41424900
                  |L1.1020|
0003fc  2d4f3300          DCB      "-O3",0
                  |L1.1024|
000400  4c504335          DCB      "LPC54114",0
000404  34313134
000408  00      
000409  00                DCB      0
00040a  00                DCB      0
00040b  00                DCB      0
                  |L1.1036|
00040c  25732025          DCB      "%s %s %s"
000410  73202573
                  |L1.1044|
000414  0d0a00            DCB      "\r\n",0
000417  00                DCB      0
                  |L1.1048|
000418  4e4f5445          DCB      "NOTES: \r\n",0
00041c  533a200d
000420  0a00    
000422  00                DCB      0
000423  00                DCB      0
                  |L1.1060|
000424  4379636c          DCB      "Cycle Offset: %d\r\n",0
000428  65204f66
00042c  66736574
000430  3a202564
000434  0d0a00  
000437  00                DCB      0
                  |L1.1080|
000438  0d0a426c          DCB      "\r\nBlock Processing Functions\r\n",0
00043c  6f636b20
000440  50726f63
000444  65737369
000448  6e672046
00044c  756e6374
000450  696f6e73
000454  0d0a00  
000457  00                DCB      0
                  |L1.1112|
000458  4c656e67          DCB      "Length,16,32,64,128,256,512,1024,2048,4096",0
00045c  74682c31
000460  362c3332
000464  2c36342c
000468  3132382c
00046c  3235362c
000470  3531322c
000474  31303234
000478  2c323034
00047c  382c3430
000480  393600  
000483  00                DCB      0
                  |L1.1156|
000484  0d0a4346          DCB      "\r\nCFFT-f32-BitReverse,",0
000488  46542d66
00048c  33322d42
000490  69745265
000494  76657273
000498  652c00  
00049b  00                DCB      0
                  |L1.1180|
                          DCD      arm_cfft_sR_f32_len16
                  |L1.1184|
0004a0  256900            DCB      "%i",0
0004a3  00                DCB      0
                  |L1.1188|
0004a4  2c00              DCB      ",",0
0004a6  00                DCB      0
0004a7  00                DCB      0
                  |L1.1192|
                          DCD      arm_cfft_sR_f32_len32
                  |L1.1196|
                          DCD      arm_cfft_sR_f32_len64
                  |L1.1200|
                          DCD      arm_cfft_sR_f32_len128
                  |L1.1204|
                          DCD      arm_cfft_sR_f32_len256
                  |L1.1208|
                          DCD      arm_cfft_sR_f32_len512
                  |L1.1212|
                          DCD      arm_cfft_sR_f32_len1024
                  |L1.1216|
                          DCD      arm_cfft_sR_f32_len2048
                  |L1.1220|
                          DCD      arm_cfft_sR_f32_len4096
                  |L1.1224|
0004c8  43464654          DCB      "CFFT-f32-NoBitReverse,",0
0004cc  2d663332
0004d0  2d4e6f42
0004d4  69745265
0004d8  76657273
0004dc  652c00  
0004df  00                DCB      0
                  |L1.1248|
0004e0  52464654          DCB      "RFFT-f32-NoBitReverse,",0
0004e4  2d663332
0004e8  2d4e6f42
0004ec  69745265
0004f0  76657273
0004f4  652c00  
0004f7  00                DCB      0
                  |L1.1272|
0004f8  6e2f6100          DCB      "n/a",0
                  |L1.1276|
                          DCD      ||area_number.4||+0x8000
                  |L1.1280|
000500  61a5              STR      r5,[r4,#0x18]
000502  6127              STR      r7,[r4,#0x10]
000504  4afe              LDR      r2,|L1.2304|
000506  2300              MOVS     r3,#0
000508  f5a24180          SUB      r1,r2,#0x4000
00050c  f5014000          ADD      r0,r1,#0x8000
000510  f7fffffe          BL       arm_rfft_fast_f32
000514  6126              STR      r6,[r4,#0x10]
000516  69a0              LDR      r0,[r4,#0x18]
000518  9901              LDR      r1,[sp,#4]
00051a  f1c07080          RSB      r0,r0,#0x1000000
00051e  9000              STR      r0,[sp,#0]
000520  1a41              SUBS     r1,r0,r1
000522  f2af0084          ADR      r0,|L1.1184|
000526  f7fffffe          BL       __2printf
00052a  f2af0088          ADR      r0,|L1.1188|
00052e  f7fffffe          BL       __2printf
;;;388    					arm_rfft_fast_init_f32(&FFT_Inst.rfft_fast_f32,64);START_CYCLE_TIMER;arm_rfft_fast_f32(&FFT_Inst.rfft_fast_f32,&InputData.f32[0], &OutputData.f32[0], 0);REPORT_CYCLE_TIMER;COMMA;
000532  2140              MOVS     r1,#0x40
000534  48f3              LDR      r0,|L1.2308|
000536  f7fffffe          BL       arm_rfft_fast_init_f32
00053a  61a5              STR      r5,[r4,#0x18]
00053c  6127              STR      r7,[r4,#0x10]
00053e  4af0              LDR      r2,|L1.2304|
000540  2300              MOVS     r3,#0
000542  f5a24180          SUB      r1,r2,#0x4000
000546  48ef              LDR      r0,|L1.2308|
000548  f7fffffe          BL       arm_rfft_fast_f32
00054c  6126              STR      r6,[r4,#0x10]
00054e  69a0              LDR      r0,[r4,#0x18]
000550  9901              LDR      r1,[sp,#4]
000552  f1c07080          RSB      r0,r0,#0x1000000
000556  9000              STR      r0,[sp,#0]
000558  1a41              SUBS     r1,r0,r1
00055a  f2af00bc          ADR      r0,|L1.1184|
00055e  f7fffffe          BL       __2printf
000562  f2af00c0          ADR      r0,|L1.1188|
000566  f7fffffe          BL       __2printf
;;;389    					arm_rfft_fast_init_f32(&FFT_Inst.rfft_fast_f32,128);START_CYCLE_TIMER;arm_rfft_fast_f32(&FFT_Inst.rfft_fast_f32,&InputData.f32[0], &OutputData.f32[0], 0);REPORT_CYCLE_TIMER;COMMA;
00056a  2180              MOVS     r1,#0x80
00056c  48e5              LDR      r0,|L1.2308|
00056e  f7fffffe          BL       arm_rfft_fast_init_f32
000572  61a5              STR      r5,[r4,#0x18]
000574  6127              STR      r7,[r4,#0x10]
000576  4ae2              LDR      r2,|L1.2304|
000578  2300              MOVS     r3,#0
00057a  f5a24180          SUB      r1,r2,#0x4000
00057e  48e1              LDR      r0,|L1.2308|
000580  f7fffffe          BL       arm_rfft_fast_f32
000584  6126              STR      r6,[r4,#0x10]
000586  69a0              LDR      r0,[r4,#0x18]
000588  9901              LDR      r1,[sp,#4]
00058a  f1c07080          RSB      r0,r0,#0x1000000
00058e  9000              STR      r0,[sp,#0]
000590  1a41              SUBS     r1,r0,r1
000592  f2af00f4          ADR      r0,|L1.1184|
000596  f7fffffe          BL       __2printf
00059a  f2af00f8          ADR      r0,|L1.1188|
00059e  f7fffffe          BL       __2printf
;;;390    					arm_rfft_fast_init_f32(&FFT_Inst.rfft_fast_f32,256);START_CYCLE_TIMER;arm_rfft_fast_f32(&FFT_Inst.rfft_fast_f32,&InputData.f32[0], &OutputData.f32[0], 0);REPORT_CYCLE_TIMER;COMMA;
0005a2  f44f7980          MOV      r9,#0x100
0005a6  4649              MOV      r1,r9
0005a8  48d6              LDR      r0,|L1.2308|
0005aa  f7fffffe          BL       arm_rfft_fast_init_f32
0005ae  61a5              STR      r5,[r4,#0x18]
0005b0  6127              STR      r7,[r4,#0x10]
0005b2  4ad3              LDR      r2,|L1.2304|
0005b4  2300              MOVS     r3,#0
0005b6  f5a24180          SUB      r1,r2,#0x4000
0005ba  48d2              LDR      r0,|L1.2308|
0005bc  f7fffffe          BL       arm_rfft_fast_f32
0005c0  6126              STR      r6,[r4,#0x10]
0005c2  69a0              LDR      r0,[r4,#0x18]
0005c4  9901              LDR      r1,[sp,#4]
0005c6  f1c07080          RSB      r0,r0,#0x1000000
0005ca  9000              STR      r0,[sp,#0]
0005cc  1a41              SUBS     r1,r0,r1
0005ce  f2af1030          ADR      r0,|L1.1184|
0005d2  f7fffffe          BL       __2printf
0005d6  f2af1034          ADR      r0,|L1.1188|
0005da  f7fffffe          BL       __2printf
;;;391    					arm_rfft_fast_init_f32(&FFT_Inst.rfft_fast_f32,512);START_CYCLE_TIMER;arm_rfft_fast_f32(&FFT_Inst.rfft_fast_f32,&InputData.f32[0], &OutputData.f32[0], 0);REPORT_CYCLE_TIMER;COMMA;
0005de  f44f7a00          MOV      r10,#0x200
0005e2  4651              MOV      r1,r10
0005e4  48c7              LDR      r0,|L1.2308|
0005e6  f7fffffe          BL       arm_rfft_fast_init_f32
0005ea  61a5              STR      r5,[r4,#0x18]
0005ec  6127              STR      r7,[r4,#0x10]
0005ee  4ac4              LDR      r2,|L1.2304|
0005f0  2300              MOVS     r3,#0
0005f2  f5a24180          SUB      r1,r2,#0x4000
0005f6  48c3              LDR      r0,|L1.2308|
0005f8  f7fffffe          BL       arm_rfft_fast_f32
0005fc  6126              STR      r6,[r4,#0x10]
0005fe  69a0              LDR      r0,[r4,#0x18]
000600  9901              LDR      r1,[sp,#4]
000602  f1c07080          RSB      r0,r0,#0x1000000
000606  9000              STR      r0,[sp,#0]
000608  1a41              SUBS     r1,r0,r1
00060a  f2af106c          ADR      r0,|L1.1184|
00060e  f7fffffe          BL       __2printf
000612  f2af1070          ADR      r0,|L1.1188|
000616  f7fffffe          BL       __2printf
;;;392    					arm_rfft_fast_init_f32(&FFT_Inst.rfft_fast_f32,1024);START_CYCLE_TIMER;arm_rfft_fast_f32(&FFT_Inst.rfft_fast_f32,&InputData.f32[0], &OutputData.f32[0], 0);REPORT_CYCLE_TIMER;COMMA;
00061a  f44f6b80          MOV      r11,#0x400
00061e  4659              MOV      r1,r11
000620  48b8              LDR      r0,|L1.2308|
000622  f7fffffe          BL       arm_rfft_fast_init_f32
000626  61a5              STR      r5,[r4,#0x18]
000628  6127              STR      r7,[r4,#0x10]
00062a  4ab5              LDR      r2,|L1.2304|
00062c  2300              MOVS     r3,#0
00062e  f5a24180          SUB      r1,r2,#0x4000
000632  48b4              LDR      r0,|L1.2308|
000634  f7fffffe          BL       arm_rfft_fast_f32
000638  6126              STR      r6,[r4,#0x10]
00063a  69a0              LDR      r0,[r4,#0x18]
00063c  9901              LDR      r1,[sp,#4]
00063e  f1c07080          RSB      r0,r0,#0x1000000
000642  9000              STR      r0,[sp,#0]
000644  1a41              SUBS     r1,r0,r1
000646  f2af10a8          ADR      r0,|L1.1184|
00064a  f7fffffe          BL       __2printf
00064e  f2af10ac          ADR      r0,|L1.1188|
000652  f7fffffe          BL       __2printf
;;;393    					arm_rfft_fast_init_f32(&FFT_Inst.rfft_fast_f32,2048);START_CYCLE_TIMER;arm_rfft_fast_f32(&FFT_Inst.rfft_fast_f32,&InputData.f32[0], &OutputData.f32[0], 0);REPORT_CYCLE_TIMER;COMMA;
000656  f44f6100          MOV      r1,#0x800
00065a  48aa              LDR      r0,|L1.2308|
00065c  f7fffffe          BL       arm_rfft_fast_init_f32
000660  61a5              STR      r5,[r4,#0x18]
000662  6127              STR      r7,[r4,#0x10]
000664  4aa6              LDR      r2,|L1.2304|
000666  2300              MOVS     r3,#0
000668  f5a24180          SUB      r1,r2,#0x4000
00066c  48a5              LDR      r0,|L1.2308|
00066e  f7fffffe          BL       arm_rfft_fast_f32
000672  6126              STR      r6,[r4,#0x10]
000674  69a0              LDR      r0,[r4,#0x18]
000676  9901              LDR      r1,[sp,#4]
000678  f1c07080          RSB      r0,r0,#0x1000000
00067c  9000              STR      r0,[sp,#0]
00067e  1a41              SUBS     r1,r0,r1
000680  f2af10e4          ADR      r0,|L1.1184|
000684  f7fffffe          BL       __2printf
000688  f2af10e8          ADR      r0,|L1.1188|
00068c  f7fffffe          BL       __2printf
;;;394    					arm_rfft_fast_init_f32(&FFT_Inst.rfft_fast_f32,4096);START_CYCLE_TIMER;arm_rfft_fast_f32(&FFT_Inst.rfft_fast_f32,&InputData.f32[0], &OutputData.f32[0], 0);REPORT_CYCLE_TIMER;COMMA;
000690  4641              MOV      r1,r8
000692  489c              LDR      r0,|L1.2308|
000694  f7fffffe          BL       arm_rfft_fast_init_f32
000698  61a5              STR      r5,[r4,#0x18]
00069a  6127              STR      r7,[r4,#0x10]
00069c  4a98              LDR      r2,|L1.2304|
00069e  2300              MOVS     r3,#0
0006a0  f5a24180          SUB      r1,r2,#0x4000
0006a4  4897              LDR      r0,|L1.2308|
0006a6  f7fffffe          BL       arm_rfft_fast_f32
0006aa  6126              STR      r6,[r4,#0x10]
0006ac  69a0              LDR      r0,[r4,#0x18]
0006ae  9901              LDR      r1,[sp,#4]
0006b0  f1c07080          RSB      r0,r0,#0x1000000
0006b4  9000              STR      r0,[sp,#0]
0006b6  1a41              SUBS     r1,r0,r1
0006b8  f2af201c          ADR      r0,|L1.1184|
0006bc  f7fffffe          BL       __2printf
0006c0  f2af2020          ADR      r0,|L1.1188|
0006c4  f7fffffe          BL       __2printf
;;;395    			#endif
;;;396    
;;;397    			#ifdef COMPLEX_MAG
;;;398    					CM_PRINTF("\r\n");
0006c8  f2af20b8          ADR      r0,|L1.1044|
0006cc  f7fffffe          BL       __2printf
;;;399    					CM_PRINTF("ComplexMag-f32,");
0006d0  a08d              ADR      r0,|L1.2312|
0006d2  f7fffffe          BL       __2printf
;;;400    					START_CYCLE_TIMER;arm_cmplx_mag_f32(&InputData.f32[0],&OutputData.f32[0],16);REPORT_CYCLE_TIMER;COMMA;
0006d6  61a5              STR      r5,[r4,#0x18]
0006d8  6127              STR      r7,[r4,#0x10]
0006da  4989              LDR      r1,|L1.2304|
0006dc  2210              MOVS     r2,#0x10
0006de  f5a14080          SUB      r0,r1,#0x4000
0006e2  f7fffffe          BL       arm_cmplx_mag_f32
0006e6  6126              STR      r6,[r4,#0x10]
0006e8  69a0              LDR      r0,[r4,#0x18]
0006ea  9901              LDR      r1,[sp,#4]
0006ec  f1c07080          RSB      r0,r0,#0x1000000
0006f0  9000              STR      r0,[sp,#0]
0006f2  1a41              SUBS     r1,r0,r1
0006f4  f2af2058          ADR      r0,|L1.1184|
0006f8  f7fffffe          BL       __2printf
0006fc  f2af205c          ADR      r0,|L1.1188|
000700  f7fffffe          BL       __2printf
;;;401    					START_CYCLE_TIMER;arm_cmplx_mag_f32(&InputData.f32[0],&OutputData.f32[0],32);REPORT_CYCLE_TIMER;COMMA;
000704  61a5              STR      r5,[r4,#0x18]
000706  6127              STR      r7,[r4,#0x10]
000708  497d              LDR      r1,|L1.2304|
00070a  2220              MOVS     r2,#0x20
00070c  f5a14080          SUB      r0,r1,#0x4000
000710  f7fffffe          BL       arm_cmplx_mag_f32
000714  6126              STR      r6,[r4,#0x10]
000716  69a0              LDR      r0,[r4,#0x18]
000718  9901              LDR      r1,[sp,#4]
00071a  f1c07080          RSB      r0,r0,#0x1000000
00071e  9000              STR      r0,[sp,#0]
000720  1a41              SUBS     r1,r0,r1
000722  f2af2084          ADR      r0,|L1.1184|
000726  f7fffffe          BL       __2printf
00072a  f2af2088          ADR      r0,|L1.1188|
00072e  f7fffffe          BL       __2printf
;;;402    					START_CYCLE_TIMER;arm_cmplx_mag_f32(&InputData.f32[0],&OutputData.f32[0],64);REPORT_CYCLE_TIMER;COMMA;
000732  61a5              STR      r5,[r4,#0x18]
000734  6127              STR      r7,[r4,#0x10]
000736  4972              LDR      r1,|L1.2304|
000738  2240              MOVS     r2,#0x40
00073a  f5a14080          SUB      r0,r1,#0x4000
00073e  f7fffffe          BL       arm_cmplx_mag_f32
000742  6126              STR      r6,[r4,#0x10]
000744  69a0              LDR      r0,[r4,#0x18]
000746  f1c07080          RSB      r0,r0,#0x1000000
00074a  4601              MOV      r1,r0
00074c  9000              STR      r0,[sp,#0]
00074e  9801              LDR      r0,[sp,#4]
000750  1a09              SUBS     r1,r1,r0
000752  f2af20b4          ADR      r0,|L1.1184|
000756  f7fffffe          BL       __2printf
00075a  f2af20b8          ADR      r0,|L1.1188|
00075e  f7fffffe          BL       __2printf
;;;403    					START_CYCLE_TIMER;arm_cmplx_mag_f32(&InputData.f32[0],&OutputData.f32[0],128);REPORT_CYCLE_TIMER;COMMA;
000762  61a5              STR      r5,[r4,#0x18]
000764  6127              STR      r7,[r4,#0x10]
000766  4966              LDR      r1,|L1.2304|
000768  2280              MOVS     r2,#0x80
00076a  f5a14080          SUB      r0,r1,#0x4000
00076e  f7fffffe          BL       arm_cmplx_mag_f32
000772  6126              STR      r6,[r4,#0x10]
000774  69a0              LDR      r0,[r4,#0x18]
000776  9901              LDR      r1,[sp,#4]
000778  f1c07080          RSB      r0,r0,#0x1000000
00077c  9000              STR      r0,[sp,#0]
00077e  1a41              SUBS     r1,r0,r1
000780  f2af20e4          ADR      r0,|L1.1184|
000784  f7fffffe          BL       __2printf
000788  f2af20e8          ADR      r0,|L1.1188|
00078c  f7fffffe          BL       __2printf
;;;404    					START_CYCLE_TIMER;arm_cmplx_mag_f32(&InputData.f32[0],&OutputData.f32[0],256);REPORT_CYCLE_TIMER;COMMA;
000790  61a5              STR      r5,[r4,#0x18]
000792  6127              STR      r7,[r4,#0x10]
000794  495a              LDR      r1,|L1.2304|
000796  464a              MOV      r2,r9
000798  f5a14080          SUB      r0,r1,#0x4000
00079c  f7fffffe          BL       arm_cmplx_mag_f32
0007a0  6126              STR      r6,[r4,#0x10]
0007a2  69a0              LDR      r0,[r4,#0x18]
0007a4  f1c07080          RSB      r0,r0,#0x1000000
0007a8  4601              MOV      r1,r0
0007aa  9000              STR      r0,[sp,#0]
0007ac  9801              LDR      r0,[sp,#4]
0007ae  1a09              SUBS     r1,r1,r0
0007b0  f2af3014          ADR      r0,|L1.1184|
0007b4  f7fffffe          BL       __2printf
0007b8  f2af3018          ADR      r0,|L1.1188|
0007bc  f7fffffe          BL       __2printf
;;;405    					START_CYCLE_TIMER;arm_cmplx_mag_f32(&InputData.f32[0],&OutputData.f32[0],512);REPORT_CYCLE_TIMER;COMMA;
0007c0  61a5              STR      r5,[r4,#0x18]
0007c2  6127              STR      r7,[r4,#0x10]
0007c4  494e              LDR      r1,|L1.2304|
0007c6  4652              MOV      r2,r10
0007c8  f5a14080          SUB      r0,r1,#0x4000
0007cc  f7fffffe          BL       arm_cmplx_mag_f32
0007d0  6126              STR      r6,[r4,#0x10]
0007d2  69a0              LDR      r0,[r4,#0x18]
0007d4  9901              LDR      r1,[sp,#4]
0007d6  f1c07080          RSB      r0,r0,#0x1000000
0007da  9000              STR      r0,[sp,#0]
0007dc  1a41              SUBS     r1,r0,r1
0007de  f2af3040          ADR      r0,|L1.1184|
0007e2  f7fffffe          BL       __2printf
0007e6  f2af3044          ADR      r0,|L1.1188|
0007ea  f7fffffe          BL       __2printf
;;;406    					START_CYCLE_TIMER;arm_cmplx_mag_f32(&InputData.f32[0],&OutputData.f32[0],1024);REPORT_CYCLE_TIMER;COMMA;
0007ee  61a5              STR      r5,[r4,#0x18]
0007f0  6127              STR      r7,[r4,#0x10]
0007f2  4943              LDR      r1,|L1.2304|
0007f4  465a              MOV      r2,r11
0007f6  f5a14080          SUB      r0,r1,#0x4000
0007fa  f7fffffe          BL       arm_cmplx_mag_f32
0007fe  6126              STR      r6,[r4,#0x10]
000800  69a0              LDR      r0,[r4,#0x18]
000802  f1c07080          RSB      r0,r0,#0x1000000
000806  4601              MOV      r1,r0
000808  9000              STR      r0,[sp,#0]
00080a  9801              LDR      r0,[sp,#4]
00080c  1a09              SUBS     r1,r1,r0
00080e  f2af3070          ADR      r0,|L1.1184|
000812  f7fffffe          BL       __2printf
000816  f2af3074          ADR      r0,|L1.1188|
00081a  f7fffffe          BL       __2printf
;;;407    					START_CYCLE_TIMER;arm_cmplx_mag_f32(&InputData.f32[0],&OutputData.f32[0],2048);REPORT_CYCLE_TIMER;COMMA;
00081e  61a5              STR      r5,[r4,#0x18]
000820  6127              STR      r7,[r4,#0x10]
000822  4937              LDR      r1,|L1.2304|
000824  f44f6200          MOV      r2,#0x800
000828  f5a14080          SUB      r0,r1,#0x4000
00082c  f7fffffe          BL       arm_cmplx_mag_f32
000830  6126              STR      r6,[r4,#0x10]
000832  69a0              LDR      r0,[r4,#0x18]
000834  9901              LDR      r1,[sp,#4]
000836  f1c07080          RSB      r0,r0,#0x1000000
00083a  9000              STR      r0,[sp,#0]
00083c  1a41              SUBS     r1,r0,r1
00083e  f2af30a0          ADR      r0,|L1.1184|
000842  f7fffffe          BL       __2printf
000846  f2af30a4          ADR      r0,|L1.1188|
00084a  f7fffffe          BL       __2printf
;;;408    					START_CYCLE_TIMER;arm_cmplx_mag_f32(&InputData.f32[0],&OutputData.f32[0],4096);REPORT_CYCLE_TIMER;COMMA;
00084e  61a5              STR      r5,[r4,#0x18]
000850  6127              STR      r7,[r4,#0x10]
000852  492b              LDR      r1,|L1.2304|
000854  4642              MOV      r2,r8
000856  f5a14080          SUB      r0,r1,#0x4000
00085a  f7fffffe          BL       arm_cmplx_mag_f32
00085e  6126              STR      r6,[r4,#0x10]
000860  69a0              LDR      r0,[r4,#0x18]
000862  9901              LDR      r1,[sp,#4]
000864  f1c07080          RSB      r0,r0,#0x1000000
000868  9000              STR      r0,[sp,#0]
00086a  1a41              SUBS     r1,r0,r1
00086c  f2af30d0          ADR      r0,|L1.1184|
000870  f7fffffe          BL       __2printf
000874  f2af30d4          ADR      r0,|L1.1188|
000878  f7fffffe          BL       __2printf
;;;409    			#endif
;;;410    
;;;411    			#ifdef COMPLEX_MAG_SQUARED
;;;412    					CM_PRINTF("\r\n");
00087c  f2af406c          ADR      r0,|L1.1044|
000880  f7fffffe          BL       __2printf
;;;413    					CM_PRINTF("ComplexMagSquared-f32,");
000884  a024              ADR      r0,|L1.2328|
000886  f7fffffe          BL       __2printf
;;;414    					START_CYCLE_TIMER;arm_cmplx_mag_squared_f32(&InputData.f32[0],&OutputData.f32[0],16);REPORT_CYCLE_TIMER;COMMA;
00088a  61a5              STR      r5,[r4,#0x18]
00088c  6127              STR      r7,[r4,#0x10]
00088e  491c              LDR      r1,|L1.2304|
000890  2210              MOVS     r2,#0x10
000892  f5a14080          SUB      r0,r1,#0x4000
000896  f7fffffe          BL       arm_cmplx_mag_squared_f32
00089a  6126              STR      r6,[r4,#0x10]
00089c  69a0              LDR      r0,[r4,#0x18]
00089e  9901              LDR      r1,[sp,#4]
0008a0  f1c07080          RSB      r0,r0,#0x1000000
0008a4  9000              STR      r0,[sp,#0]
0008a6  1a41              SUBS     r1,r0,r1
0008a8  f2af400c          ADR      r0,|L1.1184|
0008ac  f7fffffe          BL       __2printf
0008b0  f2af4010          ADR      r0,|L1.1188|
0008b4  f7fffffe          BL       __2printf
;;;415    					START_CYCLE_TIMER;arm_cmplx_mag_squared_f32(&InputData.f32[0],&OutputData.f32[0],32);REPORT_CYCLE_TIMER;COMMA;
0008b8  61a5              STR      r5,[r4,#0x18]
0008ba  6127              STR      r7,[r4,#0x10]
0008bc  4910              LDR      r1,|L1.2304|
0008be  2220              MOVS     r2,#0x20
0008c0  f5a14080          SUB      r0,r1,#0x4000
0008c4  f7fffffe          BL       arm_cmplx_mag_squared_f32
0008c8  6126              STR      r6,[r4,#0x10]
0008ca  69a0              LDR      r0,[r4,#0x18]
0008cc  f1c07080          RSB      r0,r0,#0x1000000
0008d0  4601              MOV      r1,r0
0008d2  9000              STR      r0,[sp,#0]
0008d4  9801              LDR      r0,[sp,#4]
0008d6  1a09              SUBS     r1,r1,r0
0008d8  f2af403c          ADR      r0,|L1.1184|
0008dc  f7fffffe          BL       __2printf
0008e0  f2af4040          ADR      r0,|L1.1188|
0008e4  f7fffffe          BL       __2printf
;;;416    					START_CYCLE_TIMER;arm_cmplx_mag_squared_f32(&InputData.f32[0],&OutputData.f32[0],64);REPORT_CYCLE_TIMER;COMMA;
0008e8  61a5              STR      r5,[r4,#0x18]
0008ea  6127              STR      r7,[r4,#0x10]
0008ec  4904              LDR      r1,|L1.2304|
0008ee  2240              MOVS     r2,#0x40
0008f0  f5a14080          SUB      r0,r1,#0x4000
0008f4  f7fffffe          BL       arm_cmplx_mag_squared_f32
0008f8  6126              STR      r6,[r4,#0x10]
0008fa  69a0              LDR      r0,[r4,#0x18]
0008fc  e018              B        |L1.2352|
0008fe  0000              DCW      0x0000
                  |L1.2304|
                          DCD      ||area_number.4||+0x4000
                  |L1.2308|
                          DCD      ||area_number.4||+0x8000
                  |L1.2312|
000908  436f6d70          DCB      "ComplexMag-f32,",0
00090c  6c65784d
000910  61672d66
000914  33322c00
                  |L1.2328|
000918  436f6d70          DCB      "ComplexMagSquared-f32,",0
00091c  6c65784d
000920  61675371
000924  75617265
000928  642d6633
00092c  322c00  
00092f  00                DCB      0
                  |L1.2352|
000930  f1c07080          RSB      r0,r0,#0x1000000
000934  9901              LDR      r1,[sp,#4]
000936  9000              STR      r0,[sp,#0]
000938  1a41              SUBS     r1,r0,r1
00093a  f2af409c          ADR      r0,|L1.1184|
00093e  f7fffffe          BL       __2printf
000942  f2af40a0          ADR      r0,|L1.1188|
000946  f7fffffe          BL       __2printf
;;;417    					START_CYCLE_TIMER;arm_cmplx_mag_squared_f32(&InputData.f32[0],&OutputData.f32[0],128);REPORT_CYCLE_TIMER;COMMA;
00094a  61a5              STR      r5,[r4,#0x18]
00094c  6127              STR      r7,[r4,#0x10]
00094e  4945              LDR      r1,|L1.2660|
000950  2280              MOVS     r2,#0x80
000952  f5a14080          SUB      r0,r1,#0x4000
000956  f7fffffe          BL       arm_cmplx_mag_squared_f32
00095a  6126              STR      r6,[r4,#0x10]
00095c  69a0              LDR      r0,[r4,#0x18]
00095e  9901              LDR      r1,[sp,#4]
000960  f1c07080          RSB      r0,r0,#0x1000000
000964  9000              STR      r0,[sp,#0]
000966  1a41              SUBS     r1,r0,r1
000968  f2af40cc          ADR      r0,|L1.1184|
00096c  f7fffffe          BL       __2printf
000970  f2af40d0          ADR      r0,|L1.1188|
000974  f7fffffe          BL       __2printf
;;;418    					START_CYCLE_TIMER;arm_cmplx_mag_squared_f32(&InputData.f32[0],&OutputData.f32[0],256);REPORT_CYCLE_TIMER;COMMA;
000978  61a5              STR      r5,[r4,#0x18]
00097a  6127              STR      r7,[r4,#0x10]
00097c  4939              LDR      r1,|L1.2660|
00097e  464a              MOV      r2,r9
000980  f5a14080          SUB      r0,r1,#0x4000
000984  f7fffffe          BL       arm_cmplx_mag_squared_f32
000988  6126              STR      r6,[r4,#0x10]
00098a  69a0              LDR      r0,[r4,#0x18]
00098c  9901              LDR      r1,[sp,#4]
00098e  f1c07080          RSB      r0,r0,#0x1000000
000992  9000              STR      r0,[sp,#0]
000994  1a41              SUBS     r1,r0,r1
000996  f2af40f8          ADR      r0,|L1.1184|
00099a  f7fffffe          BL       __2printf
00099e  f2af40fc          ADR      r0,|L1.1188|
0009a2  f7fffffe          BL       __2printf
;;;419    					START_CYCLE_TIMER;arm_cmplx_mag_squared_f32(&InputData.f32[0],&OutputData.f32[0],512);REPORT_CYCLE_TIMER;COMMA;
0009a6  61a5              STR      r5,[r4,#0x18]
0009a8  6127              STR      r7,[r4,#0x10]
0009aa  492e              LDR      r1,|L1.2660|
0009ac  4652              MOV      r2,r10
0009ae  f5a14080          SUB      r0,r1,#0x4000
0009b2  f7fffffe          BL       arm_cmplx_mag_squared_f32
0009b6  6126              STR      r6,[r4,#0x10]
0009b8  69a0              LDR      r0,[r4,#0x18]
0009ba  9901              LDR      r1,[sp,#4]
0009bc  f1c07080          RSB      r0,r0,#0x1000000
0009c0  9000              STR      r0,[sp,#0]
0009c2  1a41              SUBS     r1,r0,r1
0009c4  f2af5028          ADR      r0,|L1.1184|
0009c8  f7fffffe          BL       __2printf
0009cc  f2af502c          ADR      r0,|L1.1188|
0009d0  f7fffffe          BL       __2printf
;;;420    					START_CYCLE_TIMER;arm_cmplx_mag_squared_f32(&InputData.f32[0],&OutputData.f32[0],1024);REPORT_CYCLE_TIMER;COMMA;
0009d4  61a5              STR      r5,[r4,#0x18]
0009d6  6127              STR      r7,[r4,#0x10]
0009d8  4922              LDR      r1,|L1.2660|
0009da  465a              MOV      r2,r11
0009dc  f5a14080          SUB      r0,r1,#0x4000
0009e0  f7fffffe          BL       arm_cmplx_mag_squared_f32
0009e4  6126              STR      r6,[r4,#0x10]
0009e6  69a0              LDR      r0,[r4,#0x18]
0009e8  9901              LDR      r1,[sp,#4]
0009ea  f1c07080          RSB      r0,r0,#0x1000000
0009ee  9000              STR      r0,[sp,#0]
0009f0  1a41              SUBS     r1,r0,r1
0009f2  f2af5054          ADR      r0,|L1.1184|
0009f6  f7fffffe          BL       __2printf
0009fa  f2af5058          ADR      r0,|L1.1188|
0009fe  f7fffffe          BL       __2printf
;;;421    					START_CYCLE_TIMER;arm_cmplx_mag_squared_f32(&InputData.f32[0],&OutputData.f32[0],2048);REPORT_CYCLE_TIMER;COMMA;
000a02  61a5              STR      r5,[r4,#0x18]
000a04  6127              STR      r7,[r4,#0x10]
000a06  4917              LDR      r1,|L1.2660|
000a08  f44f6200          MOV      r2,#0x800
000a0c  f5a14080          SUB      r0,r1,#0x4000
000a10  f7fffffe          BL       arm_cmplx_mag_squared_f32
000a14  6126              STR      r6,[r4,#0x10]
000a16  69a0              LDR      r0,[r4,#0x18]
000a18  9901              LDR      r1,[sp,#4]
000a1a  f1c07080          RSB      r0,r0,#0x1000000
000a1e  9000              STR      r0,[sp,#0]
000a20  1a41              SUBS     r1,r0,r1
000a22  f2af5084          ADR      r0,|L1.1184|
000a26  f7fffffe          BL       __2printf
000a2a  f2af5088          ADR      r0,|L1.1188|
000a2e  f7fffffe          BL       __2printf
;;;422    					START_CYCLE_TIMER;arm_cmplx_mag_squared_f32(&InputData.f32[0],&OutputData.f32[0],4096);REPORT_CYCLE_TIMER;COMMA;
000a32  61a5              STR      r5,[r4,#0x18]
000a34  6127              STR      r7,[r4,#0x10]
000a36  490b              LDR      r1,|L1.2660|
000a38  4642              MOV      r2,r8
000a3a  f5a14080          SUB      r0,r1,#0x4000
000a3e  f7fffffe          BL       arm_cmplx_mag_squared_f32
000a42  6126              STR      r6,[r4,#0x10]
000a44  69a0              LDR      r0,[r4,#0x18]
000a46  9901              LDR      r1,[sp,#4]
000a48  f1c07080          RSB      r0,r0,#0x1000000
000a4c  9000              STR      r0,[sp,#0]
000a4e  1a41              SUBS     r1,r0,r1
000a50  f2af50b4          ADR      r0,|L1.1184|
000a54  f7fffffe          BL       __2printf
000a58  f2af50b8          ADR      r0,|L1.1188|
000a5c  f7fffffe          BL       __2printf
                  |L1.2656|
;;;423    			#endif
;;;424    
;;;425    			#ifdef ENABLE_GOERTZEL
;;;426    
;;;427    					CM_PRINTF("\r\n");
;;;428    					InitGoertzel_f32(&G,180000.0f,1000000.0f,32);
;;;429    					CM_PRINTF("Goertzel_f32,");
;;;430    
;;;431    					G.BlockSize = 16; START_CYCLE_TIMER;r=ProcessGoertzel_f32_Power(&G,&InputData.f32[0]);REPORT_CYCLE_TIMER;COMMA;r*=2;//To Get rid of the warning
;;;432    					G.BlockSize = 32; START_CYCLE_TIMER;r=ProcessGoertzel_f32_Power(&G,&InputData.f32[0]);REPORT_CYCLE_TIMER;COMMA;r*=2;//To Get rid of the warning
;;;433    					G.BlockSize = 64; START_CYCLE_TIMER;r=ProcessGoertzel_f32_Power(&G,&InputData.f32[0]);REPORT_CYCLE_TIMER;COMMA;r*=2;//To Get rid of the warning
;;;434    					G.BlockSize = 128; START_CYCLE_TIMER;r=ProcessGoertzel_f32_Power(&G,&InputData.f32[0]);REPORT_CYCLE_TIMER;COMMA;r*=2;//To Get rid of the warning
;;;435    					G.BlockSize = 256; START_CYCLE_TIMER;r=ProcessGoertzel_f32_Power(&G,&InputData.f32[0]);REPORT_CYCLE_TIMER;COMMA;r*=2;//To Get rid of the warning
;;;436    					G.BlockSize = 512; START_CYCLE_TIMER;r=ProcessGoertzel_f32_Power(&G,&InputData.f32[0]);REPORT_CYCLE_TIMER;COMMA;r*=2;//To Get rid of the warning
;;;437    					G.BlockSize = 1024; START_CYCLE_TIMER;r=ProcessGoertzel_f32_Power(&G,&InputData.f32[0]);REPORT_CYCLE_TIMER;COMMA;r*=2;//To Get rid of the warning
;;;438    					G.BlockSize = 2048; START_CYCLE_TIMER;r=ProcessGoertzel_f32_Power(&G,&InputData.f32[0]);REPORT_CYCLE_TIMER;COMMA;r*=2;//To Get rid of the warning
;;;439    					G.BlockSize = 4096; START_CYCLE_TIMER;r=ProcessGoertzel_f32_Power(&G,&InputData.f32[0]);REPORT_CYCLE_TIMER;COMMA;r*=2;//To Get rid of the warning
;;;440    			#endif
;;;441    
;;;442    			#ifdef ENABLE_BLOCK_IIR
;;;443    					CM_PRINTF("\r\n");
;;;444    					CM_PRINTF("IIR-f32_df1-1Stage,");
;;;445    
;;;446    					arm_biquad_cascade_df1_init_f32(&IIR_Inst.f32_df1,1,&IIR_Coef_f32[0],&IIR_State_f32[0]);
;;;447    
;;;448    					START_CYCLE_TIMER;arm_biquad_cascade_df1_f32(&IIR_Inst.f32_df1,&InputData.f32[0],&OutputData.f32[0],16);REPORT_CYCLE_TIMER;COMMA;
;;;449    					START_CYCLE_TIMER;arm_biquad_cascade_df1_f32(&IIR_Inst.f32_df1,&InputData.f32[0],&OutputData.f32[0],32);REPORT_CYCLE_TIMER;COMMA;
;;;450    					START_CYCLE_TIMER;arm_biquad_cascade_df1_f32(&IIR_Inst.f32_df1,&InputData.f32[0],&OutputData.f32[0],64);REPORT_CYCLE_TIMER;COMMA;
;;;451    					START_CYCLE_TIMER;arm_biquad_cascade_df1_f32(&IIR_Inst.f32_df1,&InputData.f32[0],&OutputData.f32[0],128);REPORT_CYCLE_TIMER;COMMA;
;;;452    					START_CYCLE_TIMER;arm_biquad_cascade_df1_f32(&IIR_Inst.f32_df1,&InputData.f32[0],&OutputData.f32[0],256);REPORT_CYCLE_TIMER;COMMA;
;;;453    					START_CYCLE_TIMER;arm_biquad_cascade_df1_f32(&IIR_Inst.f32_df1,&InputData.f32[0],&OutputData.f32[0],512);REPORT_CYCLE_TIMER;COMMA;
;;;454    					START_CYCLE_TIMER;arm_biquad_cascade_df1_f32(&IIR_Inst.f32_df1,&InputData.f32[0],&OutputData.f32[0],1024);REPORT_CYCLE_TIMER;COMMA;
;;;455    					START_CYCLE_TIMER;arm_biquad_cascade_df1_f32(&IIR_Inst.f32_df1,&InputData.f32[0],&OutputData.f32[0],2048);REPORT_CYCLE_TIMER;COMMA;
;;;456    					START_CYCLE_TIMER;arm_biquad_cascade_df1_f32(&IIR_Inst.f32_df1,&InputData.f32[0],&OutputData.f32[0],4096);REPORT_CYCLE_TIMER;COMMA;
;;;457    
;;;458    					CM_PRINTF("\r\n");
;;;459    					CM_PRINTF("IIR-f32_df2T-1Stage,");
;;;460    
;;;461    					arm_biquad_cascade_df2T_init_f32(&IIR_Inst.f32_df2T,1,&IIR_Coef_f32[0],&IIR_State_f32[0]);
;;;462    
;;;463    					START_CYCLE_TIMER;arm_biquad_cascade_df2T_f32(&IIR_Inst.f32_df2T,&InputData.f32[0],&OutputData.f32[0],16);REPORT_CYCLE_TIMER;COMMA;
;;;464    					START_CYCLE_TIMER;arm_biquad_cascade_df2T_f32(&IIR_Inst.f32_df2T,&InputData.f32[0],&OutputData.f32[0],32);REPORT_CYCLE_TIMER;COMMA;
;;;465    					START_CYCLE_TIMER;arm_biquad_cascade_df2T_f32(&IIR_Inst.f32_df2T,&InputData.f32[0],&OutputData.f32[0],64);REPORT_CYCLE_TIMER;COMMA;
;;;466    					START_CYCLE_TIMER;arm_biquad_cascade_df2T_f32(&IIR_Inst.f32_df2T,&InputData.f32[0],&OutputData.f32[0],128);REPORT_CYCLE_TIMER;COMMA;
;;;467    					START_CYCLE_TIMER;arm_biquad_cascade_df2T_f32(&IIR_Inst.f32_df2T,&InputData.f32[0],&OutputData.f32[0],256);REPORT_CYCLE_TIMER;COMMA;
;;;468    					START_CYCLE_TIMER;arm_biquad_cascade_df2T_f32(&IIR_Inst.f32_df2T,&InputData.f32[0],&OutputData.f32[0],512);REPORT_CYCLE_TIMER;COMMA;
;;;469    					START_CYCLE_TIMER;arm_biquad_cascade_df2T_f32(&IIR_Inst.f32_df2T,&InputData.f32[0],&OutputData.f32[0],1024);REPORT_CYCLE_TIMER;COMMA;
;;;470    					START_CYCLE_TIMER;arm_biquad_cascade_df2T_f32(&IIR_Inst.f32_df2T,&InputData.f32[0],&OutputData.f32[0],2048);REPORT_CYCLE_TIMER;COMMA;
;;;471    					START_CYCLE_TIMER;arm_biquad_cascade_df2T_f32(&IIR_Inst.f32_df2T,&InputData.f32[0],&OutputData.f32[0],4096);REPORT_CYCLE_TIMER;COMMA;
;;;472    				#endif
;;;473    
;;;474    				#ifdef ENABLE_BLOCK_FIR
;;;475    					CM_PRINTF("\r\n");
;;;476    					CM_PRINTF("FIR-f32_8tap,");
;;;477    					arm_fir_init_f32(&FIR_Inst.f32,8,&FIR_Coef_f32[0],&FIR_State.f32[0],2048);
;;;478    					START_CYCLE_TIMER;arm_fir_f32(&FIR_Inst.f32,&InputData.f32[0],&OutputData.f32[0],16);REPORT_CYCLE_TIMER;COMMA;
;;;479    					START_CYCLE_TIMER;arm_fir_f32(&FIR_Inst.f32,&InputData.f32[0],&OutputData.f32[0],32);REPORT_CYCLE_TIMER;COMMA;
;;;480    					START_CYCLE_TIMER;arm_fir_f32(&FIR_Inst.f32,&InputData.f32[0],&OutputData.f32[0],64);REPORT_CYCLE_TIMER;COMMA;
;;;481    					START_CYCLE_TIMER;arm_fir_f32(&FIR_Inst.f32,&InputData.f32[0],&OutputData.f32[0],128);REPORT_CYCLE_TIMER;COMMA;
;;;482    					START_CYCLE_TIMER;arm_fir_f32(&FIR_Inst.f32,&InputData.f32[0],&OutputData.f32[0],256);REPORT_CYCLE_TIMER;COMMA;
;;;483    					START_CYCLE_TIMER;arm_fir_f32(&FIR_Inst.f32,&InputData.f32[0],&OutputData.f32[0],512);REPORT_CYCLE_TIMER;COMMA;
;;;484    					START_CYCLE_TIMER;arm_fir_f32(&FIR_Inst.f32,&InputData.f32[0],&OutputData.f32[0],1024);REPORT_CYCLE_TIMER;COMMA;
;;;485    					START_CYCLE_TIMER;arm_fir_f32(&FIR_Inst.f32,&InputData.f32[0],&OutputData.f32[0],2048);REPORT_CYCLE_TIMER;COMMA;
;;;486    					CM_PRINTF("n/a"); // Not enough memory to do the 4096 case
;;;487    
;;;488    					CM_PRINTF("\r\n");
;;;489    					CM_PRINTF("FIR-f32_16tap,");
;;;490    
;;;491    					arm_fir_init_f32(&FIR_Inst.f32,16,&FIR_Coef_f32[0],&FIR_State.f32[0],2048);
;;;492    					START_CYCLE_TIMER;arm_fir_f32(&FIR_Inst.f32,&InputData.f32[0],&OutputData.f32[0],16);REPORT_CYCLE_TIMER;COMMA;
;;;493    					START_CYCLE_TIMER;arm_fir_f32(&FIR_Inst.f32,&InputData.f32[0],&OutputData.f32[0],32);REPORT_CYCLE_TIMER;COMMA;
;;;494    					START_CYCLE_TIMER;arm_fir_f32(&FIR_Inst.f32,&InputData.f32[0],&OutputData.f32[0],64);REPORT_CYCLE_TIMER;COMMA;
;;;495    					START_CYCLE_TIMER;arm_fir_f32(&FIR_Inst.f32,&InputData.f32[0],&OutputData.f32[0],128);REPORT_CYCLE_TIMER;COMMA;
;;;496    					START_CYCLE_TIMER;arm_fir_f32(&FIR_Inst.f32,&InputData.f32[0],&OutputData.f32[0],256);REPORT_CYCLE_TIMER;COMMA;
;;;497    					START_CYCLE_TIMER;arm_fir_f32(&FIR_Inst.f32,&InputData.f32[0],&OutputData.f32[0],512);REPORT_CYCLE_TIMER;COMMA;
;;;498    					START_CYCLE_TIMER;arm_fir_f32(&FIR_Inst.f32,&InputData.f32[0],&OutputData.f32[0],1024);REPORT_CYCLE_TIMER;COMMA;
;;;499    					START_CYCLE_TIMER;arm_fir_f32(&FIR_Inst.f32,&InputData.f32[0],&OutputData.f32[0],2048);REPORT_CYCLE_TIMER;COMMA;
;;;500    					CM_PRINTF("n/a"); // Not enough memory to do the 4096 case
;;;501    
;;;502    					CM_PRINTF("\r\n");
;;;503    					CM_PRINTF("FIR-f32_32tap,");
;;;504    
;;;505    					arm_fir_init_f32(&FIR_Inst.f32,32,&FIR_Coef_f32[0],&FIR_State.f32[0],2048);
;;;506    					START_CYCLE_TIMER;arm_fir_f32(&FIR_Inst.f32,&InputData.f32[0],&OutputData.f32[0],16);REPORT_CYCLE_TIMER;COMMA;
;;;507    					START_CYCLE_TIMER;arm_fir_f32(&FIR_Inst.f32,&InputData.f32[0],&OutputData.f32[0],32);REPORT_CYCLE_TIMER;COMMA;
;;;508    					START_CYCLE_TIMER;arm_fir_f32(&FIR_Inst.f32,&InputData.f32[0],&OutputData.f32[0],64);REPORT_CYCLE_TIMER;COMMA;
;;;509    					START_CYCLE_TIMER;arm_fir_f32(&FIR_Inst.f32,&InputData.f32[0],&OutputData.f32[0],128);REPORT_CYCLE_TIMER;COMMA;
;;;510    					START_CYCLE_TIMER;arm_fir_f32(&FIR_Inst.f32,&InputData.f32[0],&OutputData.f32[0],256);REPORT_CYCLE_TIMER;COMMA;
;;;511    					START_CYCLE_TIMER;arm_fir_f32(&FIR_Inst.f32,&InputData.f32[0],&OutputData.f32[0],512);REPORT_CYCLE_TIMER;COMMA;
;;;512    					START_CYCLE_TIMER;arm_fir_f32(&FIR_Inst.f32,&InputData.f32[0],&OutputData.f32[0],1024);REPORT_CYCLE_TIMER;COMMA;
;;;513    					START_CYCLE_TIMER;arm_fir_f32(&FIR_Inst.f32,&InputData.f32[0],&OutputData.f32[0],2048);REPORT_CYCLE_TIMER;COMMA;
;;;514    					CM_PRINTF("n/a"); // Not enough memory to do the 4096 case
;;;515    				#endif
;;;516    	#endif
;;;517    
;;;518        	/***
;;;519        	 *            ____  __
;;;520        	 *           |___ \/_ |
;;;521        	 *       __ _  __) || |
;;;522        	 *      / _` ||__ < | |
;;;523        	 *     | (_| |___) || |
;;;524        	 *      \__, |____/ |_|
;;;525        	 *         | |
;;;526        	 *         |_|
;;;527        	 */
;;;528    
;;;529    
;;;530    
;;;531    		#ifdef _q31
;;;532    
;;;533    			#ifdef ENABLE_CFFT_BR
;;;534    				CM_PRINTF("\r\n");
;;;535    				CM_PRINTF("CFFT-q31-BitReverse,");
;;;536    				START_CYCLE_TIMER;arm_cfft_q31(&arm_cfft_sR_q31_len16,   &InputData.q31[0], 0, 1);REPORT_CYCLE_TIMER;COMMA;
;;;537    				START_CYCLE_TIMER;arm_cfft_q31(&arm_cfft_sR_q31_len32,   &InputData.q31[0], 0, 1);REPORT_CYCLE_TIMER;COMMA;
;;;538    				START_CYCLE_TIMER;arm_cfft_q31(&arm_cfft_sR_q31_len64,   &InputData.q31[0], 0, 1);REPORT_CYCLE_TIMER;COMMA;
;;;539    				START_CYCLE_TIMER;arm_cfft_q31(&arm_cfft_sR_q31_len128,  &InputData.q31[0], 0, 1);REPORT_CYCLE_TIMER;COMMA;
;;;540    				START_CYCLE_TIMER;arm_cfft_q31(&arm_cfft_sR_q31_len256,  &InputData.q31[0], 0, 1);REPORT_CYCLE_TIMER;COMMA;
;;;541    				START_CYCLE_TIMER;arm_cfft_q31(&arm_cfft_sR_q31_len512,  &InputData.q31[0], 0, 1);REPORT_CYCLE_TIMER;COMMA;
;;;542    				START_CYCLE_TIMER;arm_cfft_q31(&arm_cfft_sR_q31_len1024, &InputData.q31[0], 0, 1);REPORT_CYCLE_TIMER;COMMA;
;;;543    				START_CYCLE_TIMER;arm_cfft_q31(&arm_cfft_sR_q31_len2048, &InputData.q31[0], 0, 1);REPORT_CYCLE_TIMER;COMMA;
;;;544    				START_CYCLE_TIMER;arm_cfft_q31(&arm_cfft_sR_q31_len4096, &InputData.q31[0], 0, 1);REPORT_CYCLE_TIMER;COMMA;
;;;545    			#endif
;;;546    
;;;547    			#ifdef ENABLE_CFFT_NBR
;;;548    				CM_PRINTF("\r\n");
;;;549    				CM_PRINTF("CFFT-q31-NoBitReverse,");
;;;550    				START_CYCLE_TIMER;arm_cfft_q31(&arm_cfft_sR_q31_len16,   &InputData.q31[0], 0, 0);REPORT_CYCLE_TIMER;COMMA;
;;;551    				START_CYCLE_TIMER;arm_cfft_q31(&arm_cfft_sR_q31_len32,   &InputData.q31[0], 0, 0);REPORT_CYCLE_TIMER;COMMA;
;;;552    				START_CYCLE_TIMER;arm_cfft_q31(&arm_cfft_sR_q31_len64,   &InputData.q31[0], 0, 0);REPORT_CYCLE_TIMER;COMMA;
;;;553    				START_CYCLE_TIMER;arm_cfft_q31(&arm_cfft_sR_q31_len128,  &InputData.q31[0], 0, 0);REPORT_CYCLE_TIMER;COMMA;
;;;554    				START_CYCLE_TIMER;arm_cfft_q31(&arm_cfft_sR_q31_len256,  &InputData.q31[0], 0, 0);REPORT_CYCLE_TIMER;COMMA;
;;;555    				START_CYCLE_TIMER;arm_cfft_q31(&arm_cfft_sR_q31_len512,  &InputData.q31[0], 0, 0);REPORT_CYCLE_TIMER;COMMA;
;;;556    				START_CYCLE_TIMER;arm_cfft_q31(&arm_cfft_sR_q31_len1024, &InputData.q31[0], 0, 0);REPORT_CYCLE_TIMER;COMMA;
;;;557    				START_CYCLE_TIMER;arm_cfft_q31(&arm_cfft_sR_q31_len2048, &InputData.q31[0], 0, 0);REPORT_CYCLE_TIMER;COMMA;
;;;558    				START_CYCLE_TIMER;arm_cfft_q31(&arm_cfft_sR_q31_len4096, &InputData.q31[0], 0, 0);REPORT_CYCLE_TIMER;COMMA;
;;;559    			#endif
;;;560    
;;;561    			#ifdef ENABLE_RFFT_BR
;;;562    				CM_PRINTF("\r\nRFFT-Q31-BitReverse,");
;;;563    				CM_PRINTF("n/a");COMMA;
;;;564    				arm_rfft_init_q31(&FFT_Inst.rfft_q31,32,0,1);START_CYCLE_TIMER;arm_rfft_q31(&FFT_Inst.rfft_q31,&InputData.q31[0], &OutputData.q31[0]);REPORT_CYCLE_TIMER;COMMA;
;;;565    				arm_rfft_init_q31(&FFT_Inst.rfft_q31,64,0,1);START_CYCLE_TIMER;arm_rfft_q31(&FFT_Inst.rfft_q31,&InputData.q31[0], &OutputData.q31[0]);REPORT_CYCLE_TIMER;COMMA;
;;;566    				arm_rfft_init_q31(&FFT_Inst.rfft_q31,128,0,1);START_CYCLE_TIMER;arm_rfft_q31(&FFT_Inst.rfft_q31,&InputData.q31[0], &OutputData.q31[0]);REPORT_CYCLE_TIMER;COMMA;
;;;567    				arm_rfft_init_q31(&FFT_Inst.rfft_q31,256,0,1);START_CYCLE_TIMER;arm_rfft_q31(&FFT_Inst.rfft_q31,&InputData.q31[0], &OutputData.q31[0]);REPORT_CYCLE_TIMER;COMMA;
;;;568    				arm_rfft_init_q31(&FFT_Inst.rfft_q31,512,0,1);START_CYCLE_TIMER;arm_rfft_q31(&FFT_Inst.rfft_q31,&InputData.q31[0], &OutputData.q31[0]);REPORT_CYCLE_TIMER;COMMA;
;;;569    				arm_rfft_init_q31(&FFT_Inst.rfft_q31,1024,0,1);START_CYCLE_TIMER;arm_rfft_q31(&FFT_Inst.rfft_q31,&InputData.q31[0], &OutputData.q31[0]);REPORT_CYCLE_TIMER;COMMA;
;;;570    				arm_rfft_init_q31(&FFT_Inst.rfft_q31,2048,0,1);START_CYCLE_TIMER;arm_rfft_q31(&FFT_Inst.rfft_q31,&InputData.q31[0], &OutputData.q31[0]);REPORT_CYCLE_TIMER;COMMA;
;;;571    				arm_rfft_init_q31(&FFT_Inst.rfft_q31,4096,0,1);START_CYCLE_TIMER;arm_rfft_q31(&FFT_Inst.rfft_q31,&InputData.q31[0], &OutputData.q31[0]);REPORT_CYCLE_TIMER;COMMA;
;;;572    			#endif
;;;573    
;;;574    			#ifdef ENABLE_RFFT_NBR
;;;575    				CM_PRINTF("\r\nRFFT-Q31-NoBitReverse,");
;;;576    				CM_PRINTF("n/a");COMMA;
;;;577    				arm_rfft_init_q31(&FFT_Inst.rfft_q31,32,0,0);START_CYCLE_TIMER;arm_rfft_q31(&FFT_Inst.rfft_q31,&InputData.q31[0], &OutputData.q31[0]);REPORT_CYCLE_TIMER;COMMA;
;;;578    				arm_rfft_init_q31(&FFT_Inst.rfft_q31,64,0,0);START_CYCLE_TIMER;arm_rfft_q31(&FFT_Inst.rfft_q31,&InputData.q31[0], &OutputData.q31[0]);REPORT_CYCLE_TIMER;COMMA;
;;;579    				arm_rfft_init_q31(&FFT_Inst.rfft_q31,128,0,0);START_CYCLE_TIMER;arm_rfft_q31(&FFT_Inst.rfft_q31,&InputData.q31[0], &OutputData.q31[0]);REPORT_CYCLE_TIMER;COMMA;
;;;580    				arm_rfft_init_q31(&FFT_Inst.rfft_q31,256,0,0);START_CYCLE_TIMER;arm_rfft_q31(&FFT_Inst.rfft_q31,&InputData.q31[0], &OutputData.q31[0]);REPORT_CYCLE_TIMER;COMMA;
;;;581    				arm_rfft_init_q31(&FFT_Inst.rfft_q31,512,0,0);START_CYCLE_TIMER;arm_rfft_q31(&FFT_Inst.rfft_q31,&InputData.q31[0], &OutputData.q31[0]);REPORT_CYCLE_TIMER;COMMA;
;;;582    				arm_rfft_init_q31(&FFT_Inst.rfft_q31,1024,0,0);START_CYCLE_TIMER;arm_rfft_q31(&FFT_Inst.rfft_q31,&InputData.q31[0], &OutputData.q31[0]);REPORT_CYCLE_TIMER;COMMA;
;;;583    				arm_rfft_init_q31(&FFT_Inst.rfft_q31,2048,0,0);START_CYCLE_TIMER;arm_rfft_q31(&FFT_Inst.rfft_q31,&InputData.q31[0], &OutputData.q31[0]);REPORT_CYCLE_TIMER;COMMA;
;;;584    				arm_rfft_init_q31(&FFT_Inst.rfft_q31,4096,0,0);START_CYCLE_TIMER;arm_rfft_q31(&FFT_Inst.rfft_q31,&InputData.q31[0], &OutputData.q31[0]);REPORT_CYCLE_TIMER;COMMA;
;;;585    			#endif
;;;586    
;;;587    			#ifdef COMPLEX_MAG_SQUARED
;;;588    				CM_PRINTF("\r\n");
;;;589    				CM_PRINTF("ComplexMag-q31,");
;;;590    				START_CYCLE_TIMER;arm_cmplx_mag_q31(&InputData.q31[0],&OutputData.q31[0],16);REPORT_CYCLE_TIMER;COMMA;
;;;591    				START_CYCLE_TIMER;arm_cmplx_mag_q31(&InputData.q31[0],&OutputData.q31[0],32);REPORT_CYCLE_TIMER;COMMA;
;;;592    				START_CYCLE_TIMER;arm_cmplx_mag_q31(&InputData.q31[0],&OutputData.q31[0],64);REPORT_CYCLE_TIMER;COMMA;
;;;593    				START_CYCLE_TIMER;arm_cmplx_mag_q31(&InputData.q31[0],&OutputData.q31[0],128);REPORT_CYCLE_TIMER;COMMA;
;;;594    				START_CYCLE_TIMER;arm_cmplx_mag_q31(&InputData.q31[0],&OutputData.q31[0],256);REPORT_CYCLE_TIMER;COMMA;
;;;595    				START_CYCLE_TIMER;arm_cmplx_mag_q31(&InputData.q31[0],&OutputData.q31[0],512);REPORT_CYCLE_TIMER;COMMA;
;;;596    				START_CYCLE_TIMER;arm_cmplx_mag_q31(&InputData.q31[0],&OutputData.q31[0],1024);REPORT_CYCLE_TIMER;COMMA;
;;;597    				START_CYCLE_TIMER;arm_cmplx_mag_q31(&InputData.q31[0],&OutputData.q31[0],2048);REPORT_CYCLE_TIMER;COMMA;
;;;598    				START_CYCLE_TIMER;arm_cmplx_mag_q31(&InputData.q31[0],&OutputData.q31[0],4096);REPORT_CYCLE_TIMER;COMMA;
;;;599    			#endif
;;;600    
;;;601    			#ifdef COMPLEX_MAG_SQUARED
;;;602    				CM_PRINTF("\r\n");
;;;603    				CM_PRINTF("ComplexMagSquared-q31,");
;;;604    				START_CYCLE_TIMER;arm_cmplx_mag_squared_q31(&InputData.q31[0],&OutputData.q31[0],16);REPORT_CYCLE_TIMER;COMMA;
;;;605    				START_CYCLE_TIMER;arm_cmplx_mag_squared_q31(&InputData.q31[0],&OutputData.q31[0],32);REPORT_CYCLE_TIMER;COMMA;
;;;606    				START_CYCLE_TIMER;arm_cmplx_mag_squared_q31(&InputData.q31[0],&OutputData.q31[0],64);REPORT_CYCLE_TIMER;COMMA;
;;;607    				START_CYCLE_TIMER;arm_cmplx_mag_squared_q31(&InputData.q31[0],&OutputData.q31[0],128);REPORT_CYCLE_TIMER;COMMA;
;;;608    				START_CYCLE_TIMER;arm_cmplx_mag_squared_q31(&InputData.q31[0],&OutputData.q31[0],256);REPORT_CYCLE_TIMER;COMMA;
;;;609    				START_CYCLE_TIMER;arm_cmplx_mag_squared_q31(&InputData.q31[0],&OutputData.q31[0],512);REPORT_CYCLE_TIMER;COMMA;
;;;610    				START_CYCLE_TIMER;arm_cmplx_mag_squared_q31(&InputData.q31[0],&OutputData.q31[0],1024);REPORT_CYCLE_TIMER;COMMA;
;;;611    				START_CYCLE_TIMER;arm_cmplx_mag_squared_q31(&InputData.q31[0],&OutputData.q31[0],2048);REPORT_CYCLE_TIMER;COMMA;
;;;612    				START_CYCLE_TIMER;arm_cmplx_mag_squared_q31(&InputData.q31[0],&OutputData.q31[0],4096);REPORT_CYCLE_TIMER;COMMA;
;;;613                #endif
;;;614    
;;;615    			#ifdef ENABLE_BLOCK_IIR
;;;616    				CM_PRINTF("\r\n");
;;;617    				CM_PRINTF("IIR-q31_df1-1Stage,");
;;;618    
;;;619    				arm_biquad_cascade_df1_init_q31(&IIR_Inst.q31_df1,1,&IIR_Coef_q31[0],&IIR_State_q31[0],1);
;;;620    
;;;621    				START_CYCLE_TIMER;arm_biquad_cascade_df1_q31(&IIR_Inst.q31_df1,&InputData.q31[0],&OutputData.q31[0],16);REPORT_CYCLE_TIMER;COMMA;
;;;622    				START_CYCLE_TIMER;arm_biquad_cascade_df1_q31(&IIR_Inst.q31_df1,&InputData.q31[0],&OutputData.q31[0],32);REPORT_CYCLE_TIMER;COMMA;
;;;623    				START_CYCLE_TIMER;arm_biquad_cascade_df1_q31(&IIR_Inst.q31_df1,&InputData.q31[0],&OutputData.q31[0],64);REPORT_CYCLE_TIMER;COMMA;
;;;624    				START_CYCLE_TIMER;arm_biquad_cascade_df1_q31(&IIR_Inst.q31_df1,&InputData.q31[0],&OutputData.q31[0],128);REPORT_CYCLE_TIMER;COMMA;
;;;625    				START_CYCLE_TIMER;arm_biquad_cascade_df1_q31(&IIR_Inst.q31_df1,&InputData.q31[0],&OutputData.q31[0],256);REPORT_CYCLE_TIMER;COMMA;
;;;626    				START_CYCLE_TIMER;arm_biquad_cascade_df1_q31(&IIR_Inst.q31_df1,&InputData.q31[0],&OutputData.q31[0],512);REPORT_CYCLE_TIMER;COMMA;
;;;627    				START_CYCLE_TIMER;arm_biquad_cascade_df1_q31(&IIR_Inst.q31_df1,&InputData.q31[0],&OutputData.q31[0],1024);REPORT_CYCLE_TIMER;COMMA;
;;;628    				START_CYCLE_TIMER;arm_biquad_cascade_df1_q31(&IIR_Inst.q31_df1,&InputData.q31[0],&OutputData.q31[0],2048);REPORT_CYCLE_TIMER;COMMA;
;;;629    				START_CYCLE_TIMER;arm_biquad_cascade_df1_q31(&IIR_Inst.q31_df1,&InputData.q31[0],&OutputData.q31[0],4096);REPORT_CYCLE_TIMER;COMMA;
;;;630    
;;;631    				CM_PRINTF("\r\n");
;;;632    				CM_PRINTF("IIR-q31_df1-1Stage-fast,");
;;;633    
;;;634    				arm_biquad_cascade_df1_init_q31(&IIR_Inst.q31_df1,1,&IIR_Coef_q31[0],&IIR_State_q31[0],1);
;;;635    
;;;636    				START_CYCLE_TIMER;arm_biquad_cascade_df1_fast_q31(&IIR_Inst.q31_df1,&InputData.q31[0],&OutputData.q31[0],16);REPORT_CYCLE_TIMER;COMMA;
;;;637    				START_CYCLE_TIMER;arm_biquad_cascade_df1_fast_q31(&IIR_Inst.q31_df1,&InputData.q31[0],&OutputData.q31[0],32);REPORT_CYCLE_TIMER;COMMA;
;;;638    				START_CYCLE_TIMER;arm_biquad_cascade_df1_fast_q31(&IIR_Inst.q31_df1,&InputData.q31[0],&OutputData.q31[0],64);REPORT_CYCLE_TIMER;COMMA;
;;;639    				START_CYCLE_TIMER;arm_biquad_cascade_df1_fast_q31(&IIR_Inst.q31_df1,&InputData.q31[0],&OutputData.q31[0],128);REPORT_CYCLE_TIMER;COMMA;
;;;640    				START_CYCLE_TIMER;arm_biquad_cascade_df1_fast_q31(&IIR_Inst.q31_df1,&InputData.q31[0],&OutputData.q31[0],256);REPORT_CYCLE_TIMER;COMMA;
;;;641    				START_CYCLE_TIMER;arm_biquad_cascade_df1_fast_q31(&IIR_Inst.q31_df1,&InputData.q31[0],&OutputData.q31[0],512);REPORT_CYCLE_TIMER;COMMA;
;;;642    				START_CYCLE_TIMER;arm_biquad_cascade_df1_fast_q31(&IIR_Inst.q31_df1,&InputData.q31[0],&OutputData.q31[0],1024);REPORT_CYCLE_TIMER;COMMA;
;;;643    				START_CYCLE_TIMER;arm_biquad_cascade_df1_fast_q31(&IIR_Inst.q31_df1,&InputData.q31[0],&OutputData.q31[0],2048);REPORT_CYCLE_TIMER;COMMA;
;;;644    				START_CYCLE_TIMER;arm_biquad_cascade_df1_fast_q31(&IIR_Inst.q31_df1,&InputData.q31[0],&OutputData.q31[0],4096);REPORT_CYCLE_TIMER;COMMA;
;;;645    
;;;646    				CM_PRINTF("\r\n");
;;;647    				CM_PRINTF("IIR-q31_64_df1-1Staget,");
;;;648    				arm_biquad_cas_df1_32x64_init_q31(&IIR_Inst.q31_64_df1,1,&IIR_Coef_q31[0],&IIR_State_q63[0],1);
;;;649    				START_CYCLE_TIMER;arm_biquad_cas_df1_32x64_q31(&IIR_Inst.q31_64_df1,&InputData.q31[0],&OutputData.q31[0],16);REPORT_CYCLE_TIMER;COMMA;
;;;650    
;;;651    				START_CYCLE_TIMER;arm_biquad_cas_df1_32x64_q31(&IIR_Inst.q31_64_df1,&InputData.q31[0],&OutputData.q31[0],32);REPORT_CYCLE_TIMER;COMMA;
;;;652    				START_CYCLE_TIMER;arm_biquad_cas_df1_32x64_q31(&IIR_Inst.q31_64_df1,&InputData.q31[0],&OutputData.q31[0],64);REPORT_CYCLE_TIMER;COMMA;
;;;653    				START_CYCLE_TIMER;arm_biquad_cas_df1_32x64_q31(&IIR_Inst.q31_64_df1,&InputData.q31[0],&OutputData.q31[0],128);REPORT_CYCLE_TIMER;COMMA;
;;;654    				START_CYCLE_TIMER;arm_biquad_cas_df1_32x64_q31(&IIR_Inst.q31_64_df1,&InputData.q31[0],&OutputData.q31[0],256);REPORT_CYCLE_TIMER;COMMA;
;;;655    				START_CYCLE_TIMER;arm_biquad_cas_df1_32x64_q31(&IIR_Inst.q31_64_df1,&InputData.q31[0],&OutputData.q31[0],512);REPORT_CYCLE_TIMER;COMMA;
;;;656    				START_CYCLE_TIMER;arm_biquad_cas_df1_32x64_q31(&IIR_Inst.q31_64_df1,&InputData.q31[0],&OutputData.q31[0],1024);REPORT_CYCLE_TIMER;COMMA;
;;;657    				START_CYCLE_TIMER;arm_biquad_cas_df1_32x64_q31(&IIR_Inst.q31_64_df1,&InputData.q31[0],&OutputData.q31[0],2048);REPORT_CYCLE_TIMER;COMMA;
;;;658    				START_CYCLE_TIMER;arm_biquad_cas_df1_32x64_q31(&IIR_Inst.q31_64_df1,&InputData.q31[0],&OutputData.q31[0],4096);REPORT_CYCLE_TIMER;COMMA;
;;;659    	     	#endif
;;;660    
;;;661    			#ifdef ENABLE_BLOCK_FIR
;;;662    				CM_PRINTF("\r\n");
;;;663    				CM_PRINTF("FIR-q31_8tap,");
;;;664    				arm_fir_init_q31(&FIR_Inst.q31,8,&FIR_Coef_q31[0],&FIR_State.q31[0],2048);
;;;665    				START_CYCLE_TIMER;arm_fir_q31(&FIR_Inst.q31,&InputData.q31[0],&OutputData.q31[0],16);REPORT_CYCLE_TIMER;COMMA;
;;;666    				START_CYCLE_TIMER;arm_fir_q31(&FIR_Inst.q31,&InputData.q31[0],&OutputData.q31[0],32);REPORT_CYCLE_TIMER;COMMA;
;;;667    				START_CYCLE_TIMER;arm_fir_q31(&FIR_Inst.q31,&InputData.q31[0],&OutputData.q31[0],64);REPORT_CYCLE_TIMER;COMMA;
;;;668    				START_CYCLE_TIMER;arm_fir_q31(&FIR_Inst.q31,&InputData.q31[0],&OutputData.q31[0],128);REPORT_CYCLE_TIMER;COMMA;
;;;669    				START_CYCLE_TIMER;arm_fir_q31(&FIR_Inst.q31,&InputData.q31[0],&OutputData.q31[0],256);REPORT_CYCLE_TIMER;COMMA;
;;;670    				START_CYCLE_TIMER;arm_fir_q31(&FIR_Inst.q31,&InputData.q31[0],&OutputData.q31[0],512);REPORT_CYCLE_TIMER;COMMA;
;;;671    				START_CYCLE_TIMER;arm_fir_q31(&FIR_Inst.q31,&InputData.q31[0],&OutputData.q31[0],1024);REPORT_CYCLE_TIMER;COMMA;
;;;672    				START_CYCLE_TIMER;arm_fir_q31(&FIR_Inst.q31,&InputData.q31[0],&OutputData.q31[0],2048);REPORT_CYCLE_TIMER;COMMA;
;;;673    				CM_PRINTF("n/a"); // Not enough memory to do the 4096 case
;;;674    
;;;675    				CM_PRINTF("\r\n");
;;;676    				CM_PRINTF("FIR-q31_16tap,");
;;;677    
;;;678    				arm_fir_init_q31(&FIR_Inst.q31,16,&FIR_Coef_q31[0],&FIR_State.q31[0],2048);
;;;679    				START_CYCLE_TIMER;arm_fir_q31(&FIR_Inst.q31,&InputData.q31[0],&OutputData.q31[0],16);REPORT_CYCLE_TIMER;COMMA;
;;;680    				START_CYCLE_TIMER;arm_fir_q31(&FIR_Inst.q31,&InputData.q31[0],&OutputData.q31[0],32);REPORT_CYCLE_TIMER;COMMA;
;;;681    				START_CYCLE_TIMER;arm_fir_q31(&FIR_Inst.q31,&InputData.q31[0],&OutputData.q31[0],64);REPORT_CYCLE_TIMER;COMMA;
;;;682    				START_CYCLE_TIMER;arm_fir_q31(&FIR_Inst.q31,&InputData.q31[0],&OutputData.q31[0],128);REPORT_CYCLE_TIMER;COMMA;
;;;683    				START_CYCLE_TIMER;arm_fir_q31(&FIR_Inst.q31,&InputData.q31[0],&OutputData.q31[0],256);REPORT_CYCLE_TIMER;COMMA;
;;;684    				START_CYCLE_TIMER;arm_fir_q31(&FIR_Inst.q31,&InputData.q31[0],&OutputData.q31[0],512);REPORT_CYCLE_TIMER;COMMA;
;;;685    				START_CYCLE_TIMER;arm_fir_q31(&FIR_Inst.q31,&InputData.q31[0],&OutputData.q31[0],1024);REPORT_CYCLE_TIMER;COMMA;
;;;686    				START_CYCLE_TIMER;arm_fir_q31(&FIR_Inst.q31,&InputData.q31[0],&OutputData.q31[0],2048);REPORT_CYCLE_TIMER;COMMA;
;;;687    				CM_PRINTF("n/a"); // Not enough memory to do the 4096 case
;;;688    
;;;689    				CM_PRINTF("\r\n");
;;;690    				CM_PRINTF("FIR-q31_32tap,");
;;;691    
;;;692    				arm_fir_init_q31(&FIR_Inst.q31,32,&FIR_Coef_q31[0],&FIR_State.q31[0],2048);
;;;693    				START_CYCLE_TIMER;arm_fir_q31(&FIR_Inst.q31,&InputData.q31[0],&OutputData.q31[0],16);REPORT_CYCLE_TIMER;COMMA;
;;;694    				START_CYCLE_TIMER;arm_fir_q31(&FIR_Inst.q31,&InputData.q31[0],&OutputData.q31[0],32);REPORT_CYCLE_TIMER;COMMA;
;;;695    				START_CYCLE_TIMER;arm_fir_q31(&FIR_Inst.q31,&InputData.q31[0],&OutputData.q31[0],64);REPORT_CYCLE_TIMER;COMMA;
;;;696    				START_CYCLE_TIMER;arm_fir_q31(&FIR_Inst.q31,&InputData.q31[0],&OutputData.q31[0],128);REPORT_CYCLE_TIMER;COMMA;
;;;697    				START_CYCLE_TIMER;arm_fir_q31(&FIR_Inst.q31,&InputData.q31[0],&OutputData.q31[0],256);REPORT_CYCLE_TIMER;COMMA;
;;;698    				START_CYCLE_TIMER;arm_fir_q31(&FIR_Inst.q31,&InputData.q31[0],&OutputData.q31[0],512);REPORT_CYCLE_TIMER;COMMA;
;;;699    				START_CYCLE_TIMER;arm_fir_q31(&FIR_Inst.q31,&InputData.q31[0],&OutputData.q31[0],1024);REPORT_CYCLE_TIMER;COMMA;
;;;700    				START_CYCLE_TIMER;arm_fir_q31(&FIR_Inst.q31,&InputData.q31[0],&OutputData.q31[0],2048);REPORT_CYCLE_TIMER;COMMA;
;;;701    				CM_PRINTF("n/a"); // Not enough memory to do the 4096 case
;;;702    			#endif
;;;703    
;;;704    	#endif
;;;705    
;;;706        	/***
;;;707        	 *           __ _____
;;;708        	 *          /_ | ____|
;;;709        	 *       __ _| | |__
;;;710        	 *      / _` | |___ \
;;;711        	 *     | (_| | |___) |
;;;712        	 *      \__, |_|____/
;;;713        	 *         | |
;;;714        	 *         |_|
;;;715        	 */
;;;716    
;;;717    		#ifdef _q15
;;;718    				#ifdef ENABLE_CFFT_BR
;;;719    
;;;720    				CM_PRINTF("\r\n");
;;;721    				CM_PRINTF("CFFT-q15-BitReverse,");
;;;722    				START_CYCLE_TIMER;arm_cfft_q15(&arm_cfft_sR_q15_len16,   &InputData.q15[0], 0, 1);REPORT_CYCLE_TIMER;COMMA;
;;;723    				START_CYCLE_TIMER;arm_cfft_q15(&arm_cfft_sR_q15_len32,   &InputData.q15[0], 0, 1);REPORT_CYCLE_TIMER;COMMA;
;;;724    				START_CYCLE_TIMER;arm_cfft_q15(&arm_cfft_sR_q15_len64,   &InputData.q15[0], 0, 1);REPORT_CYCLE_TIMER;COMMA;
;;;725    				START_CYCLE_TIMER;arm_cfft_q15(&arm_cfft_sR_q15_len128,  &InputData.q15[0], 0, 1);REPORT_CYCLE_TIMER;COMMA;
;;;726    				START_CYCLE_TIMER;arm_cfft_q15(&arm_cfft_sR_q15_len256,  &InputData.q15[0], 0, 1);REPORT_CYCLE_TIMER;COMMA;
;;;727    				START_CYCLE_TIMER;arm_cfft_q15(&arm_cfft_sR_q15_len512,  &InputData.q15[0], 0, 1);REPORT_CYCLE_TIMER;COMMA;
;;;728    				START_CYCLE_TIMER;arm_cfft_q15(&arm_cfft_sR_q15_len1024, &InputData.q15[0], 0, 1);REPORT_CYCLE_TIMER;COMMA;
;;;729    				START_CYCLE_TIMER;arm_cfft_q15(&arm_cfft_sR_q15_len2048, &InputData.q15[0], 0, 1);REPORT_CYCLE_TIMER;COMMA;
;;;730    				START_CYCLE_TIMER;arm_cfft_q31(&arm_cfft_sR_q31_len4096, &InputData.q31[0], 0, 1);REPORT_CYCLE_TIMER;COMMA;
;;;731    				#endif
;;;732    
;;;733    				#ifdef ENABLE_CFFT_NBR
;;;734    				CM_PRINTF("\r\n");
;;;735    				CM_PRINTF("CFFT-q15-NoBitReverse,");
;;;736    				START_CYCLE_TIMER;arm_cfft_q15(&arm_cfft_sR_q15_len16,   &InputData.q15[0], 0, 0);REPORT_CYCLE_TIMER;COMMA;
;;;737    				START_CYCLE_TIMER;arm_cfft_q15(&arm_cfft_sR_q15_len32,   &InputData.q15[0], 0, 0);REPORT_CYCLE_TIMER;COMMA;
;;;738    				START_CYCLE_TIMER;arm_cfft_q15(&arm_cfft_sR_q15_len64,   &InputData.q15[0], 0, 0);REPORT_CYCLE_TIMER;COMMA;
;;;739    				START_CYCLE_TIMER;arm_cfft_q15(&arm_cfft_sR_q15_len128,  &InputData.q15[0], 0, 0);REPORT_CYCLE_TIMER;COMMA;
;;;740    				START_CYCLE_TIMER;arm_cfft_q15(&arm_cfft_sR_q15_len256,  &InputData.q15[0], 0, 0);REPORT_CYCLE_TIMER;COMMA;
;;;741    				START_CYCLE_TIMER;arm_cfft_q15(&arm_cfft_sR_q15_len512,  &InputData.q15[0], 0, 0);REPORT_CYCLE_TIMER;COMMA;
;;;742    				START_CYCLE_TIMER;arm_cfft_q15(&arm_cfft_sR_q15_len1024, &InputData.q15[0], 0, 0);REPORT_CYCLE_TIMER;COMMA;
;;;743    				START_CYCLE_TIMER;arm_cfft_q15(&arm_cfft_sR_q15_len2048, &InputData.q15[0], 0, 0);REPORT_CYCLE_TIMER;COMMA;
;;;744    				START_CYCLE_TIMER;arm_cfft_q31(&arm_cfft_sR_q31_len4096, &InputData.q31[0], 0, 0);REPORT_CYCLE_TIMER;COMMA;
;;;745    				#endif
;;;746    
;;;747    				#ifdef ENABLE_RFFT_BR
;;;748    				CM_PRINTF("\r\nRFFT-Q15-BitReverse,");
;;;749    				CM_PRINTF("n/a");COMMA;
;;;750    				arm_rfft_init_q15(&FFT_Inst.rfft_q15,32,0,1);START_CYCLE_TIMER  ;arm_rfft_q15(&FFT_Inst.rfft_q15,&InputData.q15[0], &OutputData.q15[0]);REPORT_CYCLE_TIMER;COMMA;
;;;751    				arm_rfft_init_q15(&FFT_Inst.rfft_q15,64,0,1);START_CYCLE_TIMER  ;arm_rfft_q15(&FFT_Inst.rfft_q15,&InputData.q15[0], &OutputData.q15[0]);REPORT_CYCLE_TIMER;COMMA;
;;;752    				arm_rfft_init_q15(&FFT_Inst.rfft_q15,128,0,1);START_CYCLE_TIMER ;arm_rfft_q15(&FFT_Inst.rfft_q15,&InputData.q15[0], &OutputData.q15[0]);REPORT_CYCLE_TIMER;COMMA;
;;;753    				arm_rfft_init_q15(&FFT_Inst.rfft_q15,256,0,1);START_CYCLE_TIMER ;arm_rfft_q15(&FFT_Inst.rfft_q15,&InputData.q15[0], &OutputData.q15[0]);REPORT_CYCLE_TIMER;COMMA;
;;;754    				arm_rfft_init_q15(&FFT_Inst.rfft_q15,512,0,1);START_CYCLE_TIMER ;arm_rfft_q15(&FFT_Inst.rfft_q15,&InputData.q15[0], &OutputData.q15[0]);REPORT_CYCLE_TIMER;COMMA;
;;;755    				arm_rfft_init_q15(&FFT_Inst.rfft_q15,1024,0,1);START_CYCLE_TIMER;arm_rfft_q15(&FFT_Inst.rfft_q15,&InputData.q15[0], &OutputData.q15[0]);REPORT_CYCLE_TIMER;COMMA;
;;;756    				arm_rfft_init_q15(&FFT_Inst.rfft_q15,2048,0,1);START_CYCLE_TIMER;arm_rfft_q15(&FFT_Inst.rfft_q15,&InputData.q15[0], &OutputData.q15[0]);REPORT_CYCLE_TIMER;COMMA;
;;;757    				arm_rfft_init_q15(&FFT_Inst.rfft_q15,4096,0,1);START_CYCLE_TIMER;arm_rfft_q15(&FFT_Inst.rfft_q15,&InputData.q15[0], &OutputData.q15[0]);REPORT_CYCLE_TIMER;COMMA;
;;;758    				#endif
;;;759    
;;;760    				#ifdef ENABLE_RFFT_NBR
;;;761    				CM_PRINTF("\r\nRFFT-Q15-NoBitReverse,");
;;;762    				CM_PRINTF("n/a");COMMA;
;;;763    				arm_rfft_init_q15(&FFT_Inst.rfft_q15,32,0,0);START_CYCLE_TIMER  ;arm_rfft_q15(&FFT_Inst.rfft_q15,&InputData.q15[0], &OutputData.q15[0]);REPORT_CYCLE_TIMER;COMMA;
;;;764    				arm_rfft_init_q15(&FFT_Inst.rfft_q15,64,0,0);START_CYCLE_TIMER  ;arm_rfft_q15(&FFT_Inst.rfft_q15,&InputData.q15[0], &OutputData.q15[0]);REPORT_CYCLE_TIMER;COMMA;
;;;765    				arm_rfft_init_q15(&FFT_Inst.rfft_q15,128,0,0);START_CYCLE_TIMER ;arm_rfft_q15(&FFT_Inst.rfft_q15,&InputData.q15[0], &OutputData.q15[0]);REPORT_CYCLE_TIMER;COMMA;
;;;766    				arm_rfft_init_q15(&FFT_Inst.rfft_q15,256,0,0);START_CYCLE_TIMER ;arm_rfft_q15(&FFT_Inst.rfft_q15,&InputData.q15[0], &OutputData.q15[0]);REPORT_CYCLE_TIMER;COMMA;
;;;767    				arm_rfft_init_q15(&FFT_Inst.rfft_q15,512,0,0);START_CYCLE_TIMER ;arm_rfft_q15(&FFT_Inst.rfft_q15,&InputData.q15[0], &OutputData.q15[0]);REPORT_CYCLE_TIMER;COMMA;
;;;768    				arm_rfft_init_q15(&FFT_Inst.rfft_q15,1024,0,0);START_CYCLE_TIMER;arm_rfft_q15(&FFT_Inst.rfft_q15,&InputData.q15[0], &OutputData.q15[0]);REPORT_CYCLE_TIMER;COMMA;
;;;769    				arm_rfft_init_q15(&FFT_Inst.rfft_q15,2048,0,0);START_CYCLE_TIMER;arm_rfft_q15(&FFT_Inst.rfft_q15,&InputData.q15[0], &OutputData.q15[0]);REPORT_CYCLE_TIMER;COMMA;
;;;770    				arm_rfft_init_q15(&FFT_Inst.rfft_q15,4096,0,0);START_CYCLE_TIMER;arm_rfft_q15(&FFT_Inst.rfft_q15,&InputData.q15[0], &OutputData.q15[0]);REPORT_CYCLE_TIMER;COMMA;
;;;771    				#endif
;;;772    
;;;773    				#ifdef COMPLEX_MAG
;;;774    				CM_PRINTF("\r\n");
;;;775    				CM_PRINTF("ComplexMag-q15,");
;;;776    				START_CYCLE_TIMER;arm_cmplx_mag_q15(&InputData.q15[0],&OutputData.q15[0],16);REPORT_CYCLE_TIMER;COMMA;
;;;777    				START_CYCLE_TIMER;arm_cmplx_mag_q15(&InputData.q15[0],&OutputData.q15[0],32);REPORT_CYCLE_TIMER;COMMA;
;;;778    				START_CYCLE_TIMER;arm_cmplx_mag_q15(&InputData.q15[0],&OutputData.q15[0],64);REPORT_CYCLE_TIMER;COMMA;
;;;779    				START_CYCLE_TIMER;arm_cmplx_mag_q15(&InputData.q15[0],&OutputData.q15[0],128);REPORT_CYCLE_TIMER;COMMA;
;;;780    				START_CYCLE_TIMER;arm_cmplx_mag_q15(&InputData.q15[0],&OutputData.q15[0],256);REPORT_CYCLE_TIMER;COMMA;
;;;781    				START_CYCLE_TIMER;arm_cmplx_mag_q15(&InputData.q15[0],&OutputData.q15[0],512);REPORT_CYCLE_TIMER;COMMA;
;;;782    				START_CYCLE_TIMER;arm_cmplx_mag_q15(&InputData.q15[0],&OutputData.q15[0],1024);REPORT_CYCLE_TIMER;COMMA;
;;;783    				START_CYCLE_TIMER;arm_cmplx_mag_q15(&InputData.q15[0],&OutputData.q15[0],2048);REPORT_CYCLE_TIMER;COMMA;
;;;784    				START_CYCLE_TIMER;arm_cmplx_mag_q15(&InputData.q15[0],&OutputData.q15[0],4096);REPORT_CYCLE_TIMER;COMMA;
;;;785    				#endif
;;;786    
;;;787    				#ifdef COMPLEX_MAG_SQUARED
;;;788    				CM_PRINTF("\r\n");
;;;789    				CM_PRINTF("ComplexMagSquared-q15,");
;;;790    				START_CYCLE_TIMER;arm_cmplx_mag_squared_q15(&InputData.q15[0],&OutputData.q15[0],16);REPORT_CYCLE_TIMER;COMMA;
;;;791    				START_CYCLE_TIMER;arm_cmplx_mag_squared_q15(&InputData.q15[0],&OutputData.q15[0],32);REPORT_CYCLE_TIMER;COMMA;
;;;792    				START_CYCLE_TIMER;arm_cmplx_mag_squared_q15(&InputData.q15[0],&OutputData.q15[0],64);REPORT_CYCLE_TIMER;COMMA;
;;;793    				START_CYCLE_TIMER;arm_cmplx_mag_squared_q15(&InputData.q15[0],&OutputData.q15[0],128);REPORT_CYCLE_TIMER;COMMA;
;;;794    				START_CYCLE_TIMER;arm_cmplx_mag_squared_q15(&InputData.q15[0],&OutputData.q15[0],256);REPORT_CYCLE_TIMER;COMMA;
;;;795    				START_CYCLE_TIMER;arm_cmplx_mag_squared_q15(&InputData.q15[0],&OutputData.q15[0],512);REPORT_CYCLE_TIMER;COMMA;
;;;796    				START_CYCLE_TIMER;arm_cmplx_mag_squared_q15(&InputData.q15[0],&OutputData.q15[0],1024);REPORT_CYCLE_TIMER;COMMA;
;;;797    				START_CYCLE_TIMER;arm_cmplx_mag_squared_q15(&InputData.q15[0],&OutputData.q15[0],2048);REPORT_CYCLE_TIMER;COMMA;
;;;798    				START_CYCLE_TIMER;arm_cmplx_mag_squared_q15(&InputData.q15[0],&OutputData.q15[0],4096);REPORT_CYCLE_TIMER;COMMA;
;;;799    				#endif
;;;800    
;;;801    			#ifdef ENABLE_BLOCK_IIR
;;;802    				CM_PRINTF("\r\n");
;;;803    				CM_PRINTF("IIR-q15_df1-1Stage,");
;;;804    
;;;805    				arm_biquad_cascade_df1_init_q15(&IIR_Inst.q15_df1,1,&IIR_Coef_q15[0],&IIR_State_q15[0],1);
;;;806    
;;;807    				START_CYCLE_TIMER;arm_biquad_cascade_df1_q15(&IIR_Inst.q15_df1,&InputData.q15[0],&OutputData.q15[0],16);REPORT_CYCLE_TIMER;COMMA;
;;;808    				START_CYCLE_TIMER;arm_biquad_cascade_df1_q15(&IIR_Inst.q15_df1,&InputData.q15[0],&OutputData.q15[0],32);REPORT_CYCLE_TIMER;COMMA;
;;;809    				START_CYCLE_TIMER;arm_biquad_cascade_df1_q15(&IIR_Inst.q15_df1,&InputData.q15[0],&OutputData.q15[0],64);REPORT_CYCLE_TIMER;COMMA;
;;;810    				START_CYCLE_TIMER;arm_biquad_cascade_df1_q15(&IIR_Inst.q15_df1,&InputData.q15[0],&OutputData.q15[0],128);REPORT_CYCLE_TIMER;COMMA;
;;;811    				START_CYCLE_TIMER;arm_biquad_cascade_df1_q15(&IIR_Inst.q15_df1,&InputData.q15[0],&OutputData.q15[0],256);REPORT_CYCLE_TIMER;COMMA;
;;;812    				START_CYCLE_TIMER;arm_biquad_cascade_df1_q15(&IIR_Inst.q15_df1,&InputData.q15[0],&OutputData.q15[0],512);REPORT_CYCLE_TIMER;COMMA;
;;;813    				START_CYCLE_TIMER;arm_biquad_cascade_df1_q15(&IIR_Inst.q15_df1,&InputData.q15[0],&OutputData.q15[0],1024);REPORT_CYCLE_TIMER;COMMA;
;;;814    				START_CYCLE_TIMER;arm_biquad_cascade_df1_q15(&IIR_Inst.q15_df1,&InputData.q15[0],&OutputData.q15[0],2048);REPORT_CYCLE_TIMER;COMMA;
;;;815    				START_CYCLE_TIMER;arm_biquad_cascade_df1_q15(&IIR_Inst.q15_df1,&InputData.q15[0],&OutputData.q15[0],4096);REPORT_CYCLE_TIMER;COMMA;
;;;816    
;;;817    
;;;818    				CM_PRINTF("\r\n");
;;;819    				CM_PRINTF("IIR-q15_df1-1Stage-fast,");
;;;820    
;;;821    				arm_biquad_cascade_df1_init_q15(&IIR_Inst.q15_df1,1,&IIR_Coef_q15[0],&IIR_State_q15[0],1);
;;;822    
;;;823    				START_CYCLE_TIMER;arm_biquad_cascade_df1_fast_q15(&IIR_Inst.q15_df1,&InputData.q15[0],&OutputData.q15[0],16);REPORT_CYCLE_TIMER;COMMA;
;;;824    				START_CYCLE_TIMER;arm_biquad_cascade_df1_fast_q15(&IIR_Inst.q15_df1,&InputData.q15[0],&OutputData.q15[0],32);REPORT_CYCLE_TIMER;COMMA;
;;;825    				START_CYCLE_TIMER;arm_biquad_cascade_df1_fast_q15(&IIR_Inst.q15_df1,&InputData.q15[0],&OutputData.q15[0],64);REPORT_CYCLE_TIMER;COMMA;
;;;826    				START_CYCLE_TIMER;arm_biquad_cascade_df1_fast_q15(&IIR_Inst.q15_df1,&InputData.q15[0],&OutputData.q15[0],128);REPORT_CYCLE_TIMER;COMMA;
;;;827    				START_CYCLE_TIMER;arm_biquad_cascade_df1_fast_q15(&IIR_Inst.q15_df1,&InputData.q15[0],&OutputData.q15[0],256);REPORT_CYCLE_TIMER;COMMA;
;;;828    				START_CYCLE_TIMER;arm_biquad_cascade_df1_fast_q15(&IIR_Inst.q15_df1,&InputData.q15[0],&OutputData.q15[0],512);REPORT_CYCLE_TIMER;COMMA;
;;;829    				START_CYCLE_TIMER;arm_biquad_cascade_df1_fast_q15(&IIR_Inst.q15_df1,&InputData.q15[0],&OutputData.q15[0],1024);REPORT_CYCLE_TIMER;COMMA;
;;;830    				START_CYCLE_TIMER;arm_biquad_cascade_df1_fast_q15(&IIR_Inst.q15_df1,&InputData.q15[0],&OutputData.q15[0],2048);REPORT_CYCLE_TIMER;COMMA;
;;;831    				START_CYCLE_TIMER;arm_biquad_cascade_df1_fast_q15(&IIR_Inst.q15_df1,&InputData.q15[0],&OutputData.q15[0],4096);REPORT_CYCLE_TIMER;COMMA;
;;;832    
;;;833    			#endif
;;;834    
;;;835    			#ifdef ENABLE_BLOCK_FIR
;;;836    				CM_PRINTF("\r\n");
;;;837    				CM_PRINTF("FIR-q15_8tap,");
;;;838    				arm_fir_init_q15(&FIR_Inst.q15,8,&FIR_Coef_q15[0],&FIR_State.q15[0],2048);
;;;839    				START_CYCLE_TIMER;arm_fir_q15(&FIR_Inst.q15,&InputData.q15[0],&OutputData.q15[0],16);REPORT_CYCLE_TIMER;COMMA;
;;;840    				START_CYCLE_TIMER;arm_fir_q15(&FIR_Inst.q15,&InputData.q15[0],&OutputData.q15[0],32);REPORT_CYCLE_TIMER;COMMA;
;;;841    				START_CYCLE_TIMER;arm_fir_q15(&FIR_Inst.q15,&InputData.q15[0],&OutputData.q15[0],64);REPORT_CYCLE_TIMER;COMMA;
;;;842    				START_CYCLE_TIMER;arm_fir_q15(&FIR_Inst.q15,&InputData.q15[0],&OutputData.q15[0],128);REPORT_CYCLE_TIMER;COMMA;
;;;843    				START_CYCLE_TIMER;arm_fir_q15(&FIR_Inst.q15,&InputData.q15[0],&OutputData.q15[0],256);REPORT_CYCLE_TIMER;COMMA;
;;;844    				START_CYCLE_TIMER;arm_fir_q15(&FIR_Inst.q15,&InputData.q15[0],&OutputData.q15[0],512);REPORT_CYCLE_TIMER;COMMA;
;;;845    				START_CYCLE_TIMER;arm_fir_q15(&FIR_Inst.q15,&InputData.q15[0],&OutputData.q15[0],1024);REPORT_CYCLE_TIMER;COMMA;
;;;846    				START_CYCLE_TIMER;arm_fir_q15(&FIR_Inst.q15,&InputData.q15[0],&OutputData.q15[0],2048);REPORT_CYCLE_TIMER;COMMA;
;;;847    				CM_PRINTF("n/a"); // Not enough memory to do the 4096 case
;;;848    
;;;849    				CM_PRINTF("\r\n");
;;;850    				CM_PRINTF("FIR-q15_16tap,");
;;;851    
;;;852    				arm_fir_init_q15(&FIR_Inst.q15,16,&FIR_Coef_q15[0],&FIR_State.q15[0],2048);
;;;853    				START_CYCLE_TIMER;arm_fir_q15(&FIR_Inst.q15,&InputData.q15[0],&OutputData.q15[0],16);REPORT_CYCLE_TIMER;COMMA;
;;;854    				START_CYCLE_TIMER;arm_fir_q15(&FIR_Inst.q15,&InputData.q15[0],&OutputData.q15[0],32);REPORT_CYCLE_TIMER;COMMA;
;;;855    				START_CYCLE_TIMER;arm_fir_q15(&FIR_Inst.q15,&InputData.q15[0],&OutputData.q15[0],64);REPORT_CYCLE_TIMER;COMMA;
;;;856    				START_CYCLE_TIMER;arm_fir_q15(&FIR_Inst.q15,&InputData.q15[0],&OutputData.q15[0],128);REPORT_CYCLE_TIMER;COMMA;
;;;857    				START_CYCLE_TIMER;arm_fir_q15(&FIR_Inst.q15,&InputData.q15[0],&OutputData.q15[0],256);REPORT_CYCLE_TIMER;COMMA;
;;;858    				START_CYCLE_TIMER;arm_fir_q15(&FIR_Inst.q15,&InputData.q15[0],&OutputData.q15[0],512);REPORT_CYCLE_TIMER;COMMA;
;;;859    				START_CYCLE_TIMER;arm_fir_q15(&FIR_Inst.q15,&InputData.q15[0],&OutputData.q15[0],1024);REPORT_CYCLE_TIMER;COMMA;
;;;860    				START_CYCLE_TIMER;arm_fir_q15(&FIR_Inst.q15,&InputData.q15[0],&OutputData.q15[0],2048);REPORT_CYCLE_TIMER;COMMA;
;;;861    				CM_PRINTF("n/a"); // Not enough memory to do the 4096 case
;;;862    
;;;863    				CM_PRINTF("\r\n");
;;;864    				CM_PRINTF("FIR-q15_32tap,");
;;;865    
;;;866    				arm_fir_init_q15(&FIR_Inst.q15,32,&FIR_Coef_q15[0],&FIR_State.q15[0],2048);
;;;867    				START_CYCLE_TIMER;arm_fir_q15(&FIR_Inst.q15,&InputData.q15[0],&OutputData.q15[0],16);REPORT_CYCLE_TIMER;COMMA;
;;;868    				START_CYCLE_TIMER;arm_fir_q15(&FIR_Inst.q15,&InputData.q15[0],&OutputData.q15[0],32);REPORT_CYCLE_TIMER;COMMA;
;;;869    				START_CYCLE_TIMER;arm_fir_q15(&FIR_Inst.q15,&InputData.q15[0],&OutputData.q15[0],64);REPORT_CYCLE_TIMER;COMMA;
;;;870    				START_CYCLE_TIMER;arm_fir_q15(&FIR_Inst.q15,&InputData.q15[0],&OutputData.q15[0],128);REPORT_CYCLE_TIMER;COMMA;
;;;871    				START_CYCLE_TIMER;arm_fir_q15(&FIR_Inst.q15,&InputData.q15[0],&OutputData.q15[0],256);REPORT_CYCLE_TIMER;COMMA;
;;;872    				START_CYCLE_TIMER;arm_fir_q15(&FIR_Inst.q15,&InputData.q15[0],&OutputData.q15[0],512);REPORT_CYCLE_TIMER;COMMA;
;;;873    				START_CYCLE_TIMER;arm_fir_q15(&FIR_Inst.q15,&InputData.q15[0],&OutputData.q15[0],1024);REPORT_CYCLE_TIMER;COMMA;
;;;874    				START_CYCLE_TIMER;arm_fir_q15(&FIR_Inst.q15,&InputData.q15[0],&OutputData.q15[0],2048);REPORT_CYCLE_TIMER;COMMA;
;;;875    				CM_PRINTF("n/a"); // Not enough memory to do the 4096 case
;;;876    		#endif
;;;877    
;;;878    	#endif
;;;879    
;;;880    #endif
;;;881    
;;;882    
;;;883    #ifdef  ENABLE_PER_SAMPLE
;;;884    
;;;885            	/***
;;;886            	 *      _____  ______ _____     _____         __  __ _____  _      ______
;;;887            	 *     |  __ \|  ____|  __ \   / ____|  /\   |  \/  |  __ \| |    |  ____|
;;;888            	 *     | |__) | |__  | |__) | | (___   /  \  | \  / | |__) | |    | |__
;;;889            	 *     |  ___/|  __| |  _  /   \___ \ / /\ \ | |\/| |  ___/| |    |  __|
;;;890            	 *     | |    | |____| | \ \   ____) / ____ \| |  | | |    | |____| |____
;;;891            	 *     |_|    |______|_|  \_\ |_____/_/    \_\_|  |_|_|    |______|______|
;;;892            	 *
;;;893            	 *
;;;894            	 */
;;;895    
;;;896          	CM_PRINTF("\r\n\r\n\r\nSample by Sample Tests");
;;;897          	CM_PRINTF("\r\n---------------------------------------------------------------\r\n");
;;;898            CM_PRINTF("\r\nIteration,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15\r\n");
;;;899    
;;;900    		#ifdef _f32
;;;901    
;;;902    			CM_PRINTF("\r\n");
;;;903    			CM_PRINTF("PID-f32,");
;;;904    
;;;905    			PID_Inst.f32.Kp = 0.5;
;;;906    			PID_Inst.f32.Ki = 0.1;
;;;907    			PID_Inst.f32.Kd = 0.05;
;;;908    			arm_pid_init_f32(&PID_Inst.f32,1);
;;;909    
;;;910    			for(i=0;i<16;i++)
;;;911    			{
;;;912    				START_CYCLE_TIMER;r=arm_pid_f32(&PID_Inst.f32,InputData.f32[i]);REPORT_CYCLE_TIMER;COMMA;
;;;913    			}
;;;914    
;;;915    			CM_PRINTF("\r\n");
;;;916    			CM_PRINTF("IIR-f31_64_df1-1Stage,");
;;;917    			arm_biquad_cascade_df1_init_f32(&IIR_Inst.f32_df1,1,(float_t *)&IIR_Coef_f32[0],(float_t *)&IIR_State_f32[0]);
;;;918    
;;;919    			for(i=0;i<15;i++)
;;;920    			{
;;;921    				START_CYCLE_TIMER;arm_biquad_cascade_df1_f32(&IIR_Inst.f32_df1,&InputData.f32[0],&OutputData.f32[0],1);REPORT_CYCLE_TIMER;COMMA;
;;;922    			}
;;;923    
;;;924    			CM_PRINTF("\r\nE-IIR-f32_df1-1Stage,");
;;;925    
;;;926    			E_IIRf.Coef.a[0] = -0.4;
;;;927    			E_IIRf.Coef.a[1] = -0.4;
;;;928    			E_IIRf.Coef.b[0] = -0.1;
;;;929    			E_IIRf.Coef.b[1] = -0.2;
;;;930    			E_IIRf.Coef.b[2] = -0.3;
;;;931    
;;;932    			Init_f32_IIR(&E_IIRf);
;;;933    
;;;934    			for(i=0;i<16;i++)
;;;935    			{
;;;936    				START_CYCLE_TIMER;Compute_f32_IIR(&E_IIRf,InputData.f32[0],&OutputData.f32[0]);REPORT_CYCLE_TIMER;COMMA;
;;;937    			}
;;;938    
;;;939    		#endif
;;;940    
;;;941    
;;;942    
;;;943    
;;;944    		#ifdef _q31
;;;945    
;;;946    			CM_PRINTF("\r\n");
;;;947    			CM_PRINTF("PID-q31,");
;;;948    
;;;949    			PID_Inst.q31.Kp = (q31_t)(0.5 * 0x7fffffff);
;;;950    			PID_Inst.q31.Ki = (q31_t)(0.1 * 0x7fffffff);
;;;951    			PID_Inst.q31.Kd = (q31_t)(0.05 * 0x7fffffff);
;;;952    			arm_pid_init_q31(&PID_Inst.q31,1);
;;;953    
;;;954    			for(i=0;i<15;i++)
;;;955    			{
;;;956    				START_CYCLE_TIMER;r=arm_pid_q31(&PID_Inst.q31,InputData.q31[i]);REPORT_CYCLE_TIMER;COMMA;
;;;957    				r*=2;//To Get rid of the warning
;;;958    			}
;;;959    
;;;960    			CM_PRINTF("\r\n");
;;;961    			CM_PRINTF("IIR-q32_64_df1-1Stage,");
;;;962    			arm_biquad_cas_df1_32x64_init_q31(&IIR_Inst.q31_64_df1,1,&IIR_Coef_q31[0],&IIR_State_q63[0],1);
;;;963    
;;;964    			for(i=0;i<15;i++)
;;;965    			{
;;;966    				START_CYCLE_TIMER;arm_biquad_cas_df1_32x64_q31(&IIR_Inst.q31_64_df1,&InputData.q31[0],&OutputData.q31[0],1);REPORT_CYCLE_TIMER;COMMA;
;;;967    			}
;;;968    
;;;969    			CM_PRINTF("\r\n");
;;;970    			CM_PRINTF("E-IIR-q31_64_df1-1Stage,");
;;;971    
;;;972    			E_IIR.Coef.PostShift = 1;
;;;973    			E_IIR.Coef.a[0] = -0.4;
;;;974    			E_IIR.Coef.a[1] = -0.4;
;;;975    			E_IIR.Coef.b[0] = -0.1;
;;;976    			E_IIR.Coef.b[1] = -0.2;
;;;977    			E_IIR.Coef.b[2] = -0.3;
;;;978    			Init_q31_t_IIR(&E_IIR);
;;;979    
;;;980    			for(i=0;i<15;i++)
;;;981    			{
;;;982    				START_CYCLE_TIMER;Compute_q31_t_IIR(&E_IIR,InputData.q31[0],&OutputData.q31[0]);REPORT_CYCLE_TIMER;COMMA;
;;;983    			}
;;;984    
;;;985    		#endif
;;;986    
;;;987    
;;;988    		#ifdef _q15
;;;989    
;;;990    			CM_PRINTF("\r\n");
;;;991    			CM_PRINTF("PID-q15,");
;;;992    
;;;993    			PID_Inst.q15.Kp = (q31_t)(0.5 * 0x7fff);
;;;994    			PID_Inst.q15.Ki = (q31_t)(0.1 * 0x7fff);
;;;995    			PID_Inst.q15.Kd = (q31_t)(0.05 * 0x7fff);
;;;996    			arm_pid_init_q15(&PID_Inst.q15,1);
;;;997    
;;;998    			for(i=0;i<15;i++)
;;;999    			{
;;;1000   				START_CYCLE_TIMER;r=arm_pid_q15(&PID_Inst.q15,InputData.q15[i]);REPORT_CYCLE_TIMER;COMMA;
;;;1001   			}
;;;1002   
;;;1003   			#endif
;;;1004   
;;;1005   	CM_PRINTF("\r\n");
;;;1006   #endif
;;;1007   
;;;1008   
;;;1009       while(1)
000a60  e7fe              B        |L1.2656|
;;;1010       {
;;;1011   
;;;1012       }
;;;1013   }
                          ENDP

000a62  0000              DCW      0x0000
                  |L1.2660|
                          DCD      ||area_number.4||+0x4000

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  IIR_State_f32
                          %        16

                          AREA ||area_number.4||, DATA, NOINIT, ALIGN=2

                          EXPORTAS ||area_number.4||, ||.bss||
                  InputData
                          %        16384
                  OutputData
                          %        16384
                  FFT_Inst
                          %        24

                          AREA ||area_number.5||, DATA, NOINIT, ALIGN=2

                          EXPORTAS ||area_number.5||, ||.bss||
                  IIR_Inst
                          %        16

                          AREA ||.data||, DATA, ALIGN=2

                  IIR_Coef_f32
000000  3dcccccd          DCFS     0x3dcccccd ; 0.10000000149011612
000004  3e4ccccd          DCFS     0x3e4ccccd ; 0.20000000298023224
000008  3e99999a          DCFS     0x3e99999a ; 0.30000001192092896
00000c  becccccd          DCFS     0xbecccccd ; -0.40000000596046448
000010  becccccd          DCFS     0xbecccccd ; -0.40000000596046448

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\..\\..\\..\\COMMON\\SRC\\TEST\\CM_TEST.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___9_CM_TEST_c_1c3fcd66____REV16|
#line 129 "..\\..\\..\\chip_5411x\\inc\\core_cmInstr.h"
|__asm___9_CM_TEST_c_1c3fcd66____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___9_CM_TEST_c_1c3fcd66____REVSH|
#line 144
|__asm___9_CM_TEST_c_1c3fcd66____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

                  __ARM_use_no_argv EQU 0
