; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\objects\arm_sin_f32.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\arm_sin_f32.d --cpu=Cortex-M4.fp --apcs=interwork -O3 --diag_suppress=9931 -I..\..\SRC\CMSIS_DSP_4_5\inc -IC:\Users\emh203\Documents\GitHub\ESC-M4\CM4_TEST\COMMON\LIB\KEIL\RTE\_CMSIS_DSP_4_5_O3 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.0\Device\ARM\ARMCM4\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=522 -DARMCM4_FP -D__FPU_PRESENT=1 -DARM_MATH_CM4 -D__CC_ARM --omf_browse=.\objects\arm_sin_f32.crf ..\..\SRC\CMSIS_DSP_4_5\src\FastMathFunctions\arm_sin_f32.c]
                          THUMB

                          AREA ||i.arm_sin_f32||, CODE, READONLY, ALIGN=2

                  arm_sin_f32 PROC
;;;83     
;;;84     float32_t arm_sin_f32(
000000  eddf0a1d          VLDR     s1,|L1.120|
;;;85       float32_t x)
;;;86     {
;;;87       float32_t sinVal, fract, in;                           /* Temporary variables for input, output */
;;;88       uint16_t index;                                        /* Index variable */
;;;89       float32_t a, b;                                        /* Two nearest output values */
;;;90       int32_t n;
;;;91       float32_t findex;
;;;92     
;;;93       /* input x is in radians */
;;;94       /* Scale the input to [0 1] range from [0 2*PI] , divide input by 2*pi */
;;;95       in = x * 0.159154943092f;
;;;96     
;;;97       /* Calculation of floor value of input */
;;;98       n = (int32_t) in;
;;;99     
;;;100      /* Make negative values towards -infinity */
;;;101      if(x < 0.0f)
000004  eeb50ac0          VCMPE.F32 s0,#0.0
000008  ee600a20          VMUL.F32 s1,s0,s1              ;95
00000c  eebd1ae0          VCVT.S32.F32 s2,s1                 ;98
000010  ee110a10          VMOV     r0,s2                 ;98
000014  eef1fa10          VMRS     APSR_nzcv,FPSCR
000018  d200              BCS      |L1.28|
00001a  1e40              SUBS     r0,r0,#1              ;86
                  |L1.28|
;;;102      {
;;;103        n--;
;;;104      }
;;;105    
;;;106      /* Map input value to [0 1] */
;;;107      in = in - (float32_t) n;
00001c  ee000a10          VMOV     s0,r0
000020  eeb80ac0          VCVT.F32.S32 s0,s0
000024  ee300ac0          VSUB.F32 s0,s1,s0
;;;108    
;;;109      /* Calculation of index of the table */
;;;110      findex = (float32_t) FAST_MATH_TABLE_SIZE * in;
000028  eddf0a14          VLDR     s1,|L1.124|
00002c  ee200a20          VMUL.F32 s0,s0,s1
;;;111      if (findex >= 512.0f) {
000030  ee100a10          VMOV     r0,s0
000034  f1b04f88          CMP      r0,#0x44000000
000038  db01              BLT      |L1.62|
;;;112        findex -= 512.0f;
00003a  ee300a60          VSUB.F32 s0,s0,s1
                  |L1.62|
;;;113      }
;;;114    
;;;115      index = ((uint16_t)findex) & 0x1ff;
;;;116    
;;;117      /* fractional value calculation */
;;;118      fract = findex - (float32_t) index;
;;;119    
;;;120      /* Read two nearest values of input value from the sin table */
;;;121      a = sinTable_f32[index];
00003e  4910              LDR      r1,|L1.128|
;;;122      b = sinTable_f32[index+1];
;;;123    
;;;124      /* Linear interpolation process */
;;;125      sinVal = (1.0f-fract)*a + fract*b;
000040  eef71a00          VMOV.F32 s3,#1.00000000
000044  eefc0ac0          VCVT.U32.F32 s1,s0                 ;115
000048  ee100a90          VMOV     r0,s1                 ;115
00004c  f3c00008          UBFX     r0,r0,#0,#9           ;115
000050  ee000a90          VMOV     s1,r0                 ;118
000054  eb010080          ADD      r0,r1,r0,LSL #2       ;121
000058  eef80a60          VCVT.F32.U32 s1,s1                 ;118
00005c  ed901a01          VLDR     s2,[r0,#4]            ;122
000060  ee700a60          VSUB.F32 s1,s0,s1              ;118
000064  ed900a00          VLDR     s0,[r0,#0]            ;121
000068  ee711ae0          VSUB.F32 s3,s3,s1
00006c  ee210a80          VMUL.F32 s0,s3,s0
000070  ee000a81          VMLA.F32 s0,s1,s2
;;;126    
;;;127      /* Return the output value */
;;;128      return (sinVal);
;;;129    }
000074  4770              BX       lr
;;;130    
                          ENDP

000076  0000              DCW      0x0000
                  |L1.120|
000078  3e22f983          DCFS     0x3e22f983 ; 0.15915493667125702
                  |L1.124|
00007c  44000000          DCFS     0x44000000 ; 512
                  |L1.128|
                          DCD      sinTable_f32

;*** Start embedded assembler ***

#line 1 "..\\..\\SRC\\CMSIS_DSP_4_5\\src\\FastMathFunctions\\arm_sin_f32.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___13_arm_sin_f32_c_1ebaebf6____REV16|
#line 129 "..\\..\\SRC\\CMSIS_DSP_4_5\\inc\\core_cmInstr.h"
|__asm___13_arm_sin_f32_c_1ebaebf6____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___13_arm_sin_f32_c_1ebaebf6____REVSH|
#line 144
|__asm___13_arm_sin_f32_c_1ebaebf6____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___13_arm_sin_f32_c_1ebaebf6____RRX|
#line 300
|__asm___13_arm_sin_f32_c_1ebaebf6____RRX| PROC
#line 301

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
