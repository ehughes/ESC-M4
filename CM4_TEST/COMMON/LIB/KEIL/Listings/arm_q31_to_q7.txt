; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\objects\arm_q31_to_q7.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\arm_q31_to_q7.d --cpu=Cortex-M4.fp --apcs=interwork -O3 --diag_suppress=9931 -I..\..\SRC\CMSIS_DSP_4_5\inc -IC:\Users\emh203\Documents\GitHub\ESC-M4\CM4_TEST\COMMON\LIB\KEIL\RTE\_CMSIS_DSP_4_5_O3 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.0\Device\ARM\ARMCM4\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=522 -DARMCM4_FP -D__FPU_PRESENT=1 -DARM_MATH_CM4 -D__CC_ARM --omf_browse=.\objects\arm_q31_to_q7.crf ..\..\SRC\CMSIS_DSP_4_5\src\SupportFunctions\arm_q31_to_q7.c]
                          THUMB

                          AREA ||i.arm_q31_to_q7||, CODE, READONLY, ALIGN=1

                  arm_q31_to_q7 PROC
;;;69     
;;;70     void arm_q31_to_q7(
000000  b5f0              PUSH     {r4-r7,lr}
;;;71       q31_t * pSrc,
;;;72       q7_t * pDst,
;;;73       uint32_t blockSize)
;;;74     {
;;;75       q31_t *pIn = pSrc;                             /* Src pointer */
;;;76       uint32_t blkCnt;                               /* loop counter */
;;;77     
;;;78     #ifndef ARM_MATH_CM0_FAMILY
;;;79     
;;;80       /* Run the below code for Cortex-M4 and Cortex-M3 */
;;;81       q31_t in1, in2, in3, in4;
;;;82       q7_t out1, out2, out3, out4;
;;;83     
;;;84       /*loop Unrolling */
;;;85       blkCnt = blockSize >> 2u;
000002  0893              LSRS     r3,r2,#2
000004  e010              B        |L1.40|
                  |L1.6|
000006  c8f0              LDM      r0!,{r4-r7}           ;74
;;;86     
;;;87       /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.    
;;;88        ** a second loop below computes the remaining 1 to 3 samples. */
;;;89       while(blkCnt > 0u)
;;;90       {
;;;91         /* C = (q7_t) A >> 24 */
;;;92         /* convert from q31 to q7 and then store the results in the destination buffer */
;;;93         in1 = *pIn++;
;;;94         in2 = *pIn++;
;;;95         in3 = *pIn++;
;;;96         in4 = *pIn++;
;;;97     
;;;98         out1 = (q7_t) (in1 >> 24);
;;;99         out2 = (q7_t) (in2 >> 24);
000008  162d              ASRS     r5,r5,#24
;;;100        out3 = (q7_t) (in3 >> 24);
;;;101        out4 = (q7_t) (in4 >> 24);
;;;102    
;;;103        *__SIMD32(pDst)++ = __PACKq7(out1, out2, out3, out4);
00000a  f64f7cff          MOV      r12,#0xffff
00000e  ea0c2505          AND      r5,r12,r5,LSL #8
000012  ea456414          ORR      r4,r5,r4,LSR #24
000016  0e35              LSRS     r5,r6,#24
000018  163f              ASRS     r7,r7,#24             ;101
00001a  ea444405          ORR      r4,r4,r5,LSL #16
00001e  ea446407          ORR      r4,r4,r7,LSL #24
000022  f8414b04          STR      r4,[r1],#4
000026  1e5b              SUBS     r3,r3,#1
                  |L1.40|
000028  2b00              CMP      r3,#0                 ;89
00002a  d1ec              BNE      |L1.6|
;;;104    
;;;105        /* Decrement the loop counter */
;;;106        blkCnt--;
;;;107      }
;;;108    
;;;109      /* If the blockSize is not a multiple of 4, compute any remaining output samples here.    
;;;110       ** No loop unrolling is used. */
;;;111      blkCnt = blockSize % 0x4u;
00002c  f0020203          AND      r2,r2,#3
;;;112    
;;;113    #else
;;;114    
;;;115      /* Run the below code for Cortex-M0 */
;;;116    
;;;117      /* Loop over blockSize number of values */
;;;118      blkCnt = blockSize;
;;;119    
;;;120    #endif /* #ifndef ARM_MATH_CM0_FAMILY */
;;;121    
;;;122      while(blkCnt > 0u)
000030  e004              B        |L1.60|
                  |L1.50|
;;;123      {
;;;124        /* C = (q7_t) A >> 24 */
;;;125        /* convert from q31 to q7 and then store the results in the destination buffer */
;;;126        *pDst++ = (q7_t) (*pIn++ >> 24);
000032  c808              LDM      r0!,{r3}
000034  161b              ASRS     r3,r3,#24
000036  f8013b01          STRB     r3,[r1],#1
00003a  1e52              SUBS     r2,r2,#1
                  |L1.60|
00003c  2a00              CMP      r2,#0                 ;122
00003e  d1f8              BNE      |L1.50|
;;;127    
;;;128        /* Decrement the loop counter */
;;;129        blkCnt--;
;;;130      }
;;;131    
;;;132    }
000040  bdf0              POP      {r4-r7,pc}
;;;133    
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\..\\SRC\\CMSIS_DSP_4_5\\src\\SupportFunctions\\arm_q31_to_q7.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___15_arm_q31_to_q7_c_5e07ee6b____REV16|
#line 129 "..\\..\\SRC\\CMSIS_DSP_4_5\\inc\\core_cmInstr.h"
|__asm___15_arm_q31_to_q7_c_5e07ee6b____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___15_arm_q31_to_q7_c_5e07ee6b____REVSH|
#line 144
|__asm___15_arm_q31_to_q7_c_5e07ee6b____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___15_arm_q31_to_q7_c_5e07ee6b____RRX|
#line 300
|__asm___15_arm_q31_to_q7_c_5e07ee6b____RRX| PROC
#line 301

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
