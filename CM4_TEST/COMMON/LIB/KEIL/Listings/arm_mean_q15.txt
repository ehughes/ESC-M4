; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\objects\arm_mean_q15.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\arm_mean_q15.d --cpu=Cortex-M4.fp --apcs=interwork -O3 --diag_suppress=9931 -I..\..\SRC\CMSIS_DSP_4_5\inc -IC:\Users\emh203\Documents\GitHub\ESC-M4\CM4_TEST\COMMON\LIB\KEIL\RTE\_CMSIS_DSP_4_5_O3 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.0\Device\ARM\ARMCM4\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=522 -DARMCM4_FP -D__FPU_PRESENT=1 -DARM_MATH_CM4 -D__CC_ARM --omf_browse=.\objects\arm_mean_q15.crf ..\..\SRC\CMSIS_DSP_4_5\src\StatisticsFunctions\arm_mean_q15.c]
                          THUMB

                          AREA ||i.arm_mean_q15||, CODE, READONLY, ALIGN=1

                  arm_mean_q15 PROC
;;;71     
;;;72     void arm_mean_q15(
000000  b530              PUSH     {r4,r5,lr}
;;;73       q15_t * pSrc,
;;;74       uint32_t blockSize,
;;;75       q15_t * pResult)
;;;76     {
;;;77       q31_t sum = 0;                                 /* Temporary result storage */
000002  2300              MOVS     r3,#0
;;;78       uint32_t blkCnt;                               /* loop counter */
;;;79     
;;;80     #ifndef ARM_MATH_CM0_FAMILY
;;;81     
;;;82       /* Run the below code for Cortex-M4 and Cortex-M3 */
;;;83       q31_t in;
;;;84     
;;;85       /*loop Unrolling */
;;;86       blkCnt = blockSize >> 2u;
000004  088c              LSRS     r4,r1,#2
000006  e00c              B        |L1.34|
                  |L1.8|
;;;87     
;;;88       /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.    
;;;89        ** a second loop below computes the remaining 1 to 3 samples. */
;;;90       while(blkCnt > 0u)
;;;91       {
;;;92         /* C = (A[0] + A[1] + A[2] + ... + A[blockSize-1]) */
;;;93         in = *__SIMD32(pSrc)++;
000008  f8505b04          LDR      r5,[r0],#4
;;;94         sum += ((in << 16) >> 16);
00000c  fa03f385          SXTAH    r3,r3,r5
;;;95         sum += (in >> 16);
000010  eb034525          ADD      r5,r3,r5,ASR #16
;;;96         in = *__SIMD32(pSrc)++;
000014  f8503b04          LDR      r3,[r0],#4
;;;97         sum += ((in << 16) >> 16);
000018  fa05f583          SXTAH    r5,r5,r3
;;;98         sum += (in >> 16);
00001c  eb054323          ADD      r3,r5,r3,ASR #16
000020  1e64              SUBS     r4,r4,#1
                  |L1.34|
000022  2c00              CMP      r4,#0                 ;90
000024  d1f0              BNE      |L1.8|
;;;99     
;;;100        /* Decrement the loop counter */
;;;101        blkCnt--;
;;;102      }
;;;103    
;;;104      /* If the blockSize is not a multiple of 4, compute any remaining output samples here.    
;;;105       ** No loop unrolling is used. */
;;;106      blkCnt = blockSize % 0x4u;
000026  f0010403          AND      r4,r1,#3
;;;107    
;;;108    #else
;;;109    
;;;110      /* Run the below code for Cortex-M0 */
;;;111    
;;;112      /* Loop over blockSize number of values */
;;;113      blkCnt = blockSize;
;;;114    
;;;115    #endif /* #ifndef ARM_MATH_CM0_FAMILY */
;;;116    
;;;117      while(blkCnt > 0u)
00002a  e003              B        |L1.52|
                  |L1.44|
;;;118      {
;;;119        /* C = (A[0] + A[1] + A[2] + ... + A[blockSize-1]) */
;;;120        sum += *pSrc++;
00002c  f9305b02          LDRSH    r5,[r0],#2
000030  1e64              SUBS     r4,r4,#1
000032  442b              ADD      r3,r3,r5
                  |L1.52|
000034  2c00              CMP      r4,#0                 ;117
000036  d1f9              BNE      |L1.44|
;;;121    
;;;122        /* Decrement the loop counter */
;;;123        blkCnt--;
;;;124      }
;;;125    
;;;126      /* C = (A[0] + A[1] + A[2] + ... + A[blockSize-1]) / blockSize  */
;;;127      /* Store the result to the destination */
;;;128      *pResult = (q15_t) (sum / (q31_t)blockSize);
000038  fb93f0f1          SDIV     r0,r3,r1
00003c  8010              STRH     r0,[r2,#0]
;;;129    }
00003e  bd30              POP      {r4,r5,pc}
;;;130    
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\..\\SRC\\CMSIS_DSP_4_5\\src\\StatisticsFunctions\\arm_mean_q15.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___14_arm_mean_q15_c_c6e711a4____REV16|
#line 129 "..\\..\\SRC\\CMSIS_DSP_4_5\\inc\\core_cmInstr.h"
|__asm___14_arm_mean_q15_c_c6e711a4____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___14_arm_mean_q15_c_c6e711a4____REVSH|
#line 144
|__asm___14_arm_mean_q15_c_c6e711a4____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___14_arm_mean_q15_c_c6e711a4____RRX|
#line 300
|__asm___14_arm_mean_q15_c_c6e711a4____RRX| PROC
#line 301

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
