; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\objects\arm_fill_f32.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\arm_fill_f32.d --cpu=Cortex-M4.fp --apcs=interwork -O3 --diag_suppress=9931 -I..\..\SRC\CMSIS_DSP_4_5\inc -IC:\Users\emh203\Documents\GitHub\ESC-M4\CM4_TEST\COMMON\LIB\KEIL\RTE\_CMSIS_DSP_4_5_O3 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.0\Device\ARM\ARMCM4\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=522 -DARMCM4_FP -D__FPU_PRESENT=1 -DARM_MATH_CM4 -D__CC_ARM --omf_browse=.\objects\arm_fill_f32.crf ..\..\SRC\CMSIS_DSP_4_5\src\SupportFunctions\arm_fill_f32.c]
                          THUMB

                          AREA ||i.arm_fill_f32||, CODE, READONLY, ALIGN=2

                  arm_fill_f32 PROC
;;;73     
;;;74     void arm_fill_f32(
000000  088a              LSRS     r2,r1,#2
;;;75       float32_t value,
;;;76       float32_t * pDst,
;;;77       uint32_t blockSize)
;;;78     {
000002  e00b              B        |L1.28|
                  |L1.4|
;;;79       uint32_t blkCnt;                               /* loop counter */
;;;80     
;;;81     #ifndef ARM_MATH_CM0_FAMILY
;;;82     
;;;83       /* Run the below code for Cortex-M4 and Cortex-M3 */
;;;84       float32_t in1 = value;
;;;85       float32_t in2 = value;
;;;86       float32_t in3 = value;
;;;87       float32_t in4 = value;
;;;88     
;;;89       /*loop Unrolling */
;;;90       blkCnt = blockSize >> 2u;
;;;91     
;;;92       /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.    
;;;93        ** a second loop below computes the remaining 1 to 3 samples. */
;;;94       while(blkCnt > 0u)
;;;95       {
;;;96         /* C = value */
;;;97         /* Fill the value in the destination buffer */
;;;98         *pDst++ = in1;
000004  eef00a40          VMOV.F32 s1,s0
000008  edc00a00          VSTR     s1,[r0,#0]
;;;99         *pDst++ = in2;
00000c  edc00a01          VSTR     s1,[r0,#4]
;;;100        *pDst++ = in3;
000010  edc00a02          VSTR     s1,[r0,#8]
;;;101        *pDst++ = in4;
000014  edc00a03          VSTR     s1,[r0,#0xc]
000018  3010              ADDS     r0,r0,#0x10
00001a  1e52              SUBS     r2,r2,#1
                  |L1.28|
00001c  2a00              CMP      r2,#0                 ;94
00001e  d1f1              BNE      |L1.4|
;;;102    
;;;103        /* Decrement the loop counter */
;;;104        blkCnt--;
;;;105      }
;;;106    
;;;107      /* If the blockSize is not a multiple of 4, compute any remaining output samples here.    
;;;108       ** No loop unrolling is used. */
;;;109      blkCnt = blockSize % 0x4u;
000020  f0010103          AND      r1,r1,#3
;;;110    
;;;111    #else
;;;112    
;;;113      /* Run the below code for Cortex-M0 */
;;;114    
;;;115      /* Loop over blockSize number of values */
;;;116      blkCnt = blockSize;
;;;117    
;;;118    #endif /* #ifndef ARM_MATH_CM0_FAMILY */
;;;119    
;;;120    
;;;121      while(blkCnt > 0u)
000024  e003              B        |L1.46|
;;;122      {
;;;123        /* C = value */
;;;124        /* Fill the value in the destination buffer */
;;;125        *pDst++ = value;
000026  bf00              NOP      
                  |L1.40|
000028  eca00a01          VSTM     r0!,{s0}
00002c  1e49              SUBS     r1,r1,#1
                  |L1.46|
00002e  2900              CMP      r1,#0                 ;121
000030  d1fa              BNE      |L1.40|
;;;126    
;;;127        /* Decrement the loop counter */
;;;128        blkCnt--;
;;;129      }
;;;130    }
000032  4770              BX       lr
;;;131    
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\..\\SRC\\CMSIS_DSP_4_5\\src\\SupportFunctions\\arm_fill_f32.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___14_arm_fill_f32_c_2f4865ec____REV16|
#line 129 "..\\..\\SRC\\CMSIS_DSP_4_5\\inc\\core_cmInstr.h"
|__asm___14_arm_fill_f32_c_2f4865ec____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___14_arm_fill_f32_c_2f4865ec____REVSH|
#line 144
|__asm___14_arm_fill_f32_c_2f4865ec____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___14_arm_fill_f32_c_2f4865ec____RRX|
#line 300
|__asm___14_arm_fill_f32_c_2f4865ec____RRX| PROC
#line 301

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
