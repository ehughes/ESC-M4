; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\objects\arm_copy_q15.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\arm_copy_q15.d --cpu=Cortex-M4.fp --apcs=interwork -O3 --diag_suppress=9931 -I..\..\SRC\CMSIS_DSP_4_5\inc -IC:\Users\emh203\Documents\GitHub\ESC-M4\CM4_TEST\COMMON\LIB\KEIL\RTE\_CMSIS_DSP_4_5_O3 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.0\Device\ARM\ARMCM4\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=522 -DARMCM4_FP -D__FPU_PRESENT=1 -DARM_MATH_CM4 -D__CC_ARM --omf_browse=.\objects\arm_copy_q15.crf ..\..\SRC\CMSIS_DSP_4_5\src\SupportFunctions\arm_copy_q15.c]
                          THUMB

                          AREA ||i.arm_copy_q15||, CODE, READONLY, ALIGN=2

                  arm_copy_q15 PROC
;;;59     
;;;60     void arm_copy_q15(
000000  b510              PUSH     {r4,lr}
;;;61       q15_t * pSrc,
;;;62       q15_t * pDst,
;;;63       uint32_t blockSize)
;;;64     {
;;;65       uint32_t blkCnt;                               /* loop counter */
;;;66     
;;;67     #ifndef ARM_MATH_CM0_FAMILY
;;;68     
;;;69       /* Run the below code for Cortex-M4 and Cortex-M3 */
;;;70     
;;;71       /*loop Unrolling */
;;;72       blkCnt = blockSize >> 2u;
000002  0893              LSRS     r3,r2,#2
000004  e009              B        |L1.26|
;;;73     
;;;74       /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.    
;;;75        ** a second loop below computes the remaining 1 to 3 samples. */
;;;76       while(blkCnt > 0u)
;;;77       {
;;;78         /* C = A */
;;;79         /* Read two inputs */
;;;80         *__SIMD32(pDst)++ = *__SIMD32(pSrc)++;
000006  bf00              NOP      
                  |L1.8|
000008  f8504b04          LDR      r4,[r0],#4
00000c  f8414b04          STR      r4,[r1],#4
;;;81         *__SIMD32(pDst)++ = *__SIMD32(pSrc)++;
000010  f8504b04          LDR      r4,[r0],#4
000014  f8414b04          STR      r4,[r1],#4
000018  1e5b              SUBS     r3,r3,#1
                  |L1.26|
00001a  2b00              CMP      r3,#0                 ;76
00001c  d1f4              BNE      |L1.8|
;;;82     
;;;83         /* Decrement the loop counter */
;;;84         blkCnt--;
;;;85       }
;;;86     
;;;87       /* If the blockSize is not a multiple of 4, compute any remaining output samples here.    
;;;88        ** No loop unrolling is used. */
;;;89       blkCnt = blockSize % 0x4u;
00001e  f0020203          AND      r2,r2,#3
;;;90     
;;;91     
;;;92     #else
;;;93     
;;;94       /* Run the below code for Cortex-M0 */
;;;95     
;;;96       /* Loop over blockSize number of values */
;;;97       blkCnt = blockSize;
;;;98     
;;;99     #endif /* #ifndef ARM_MATH_CM0_FAMILY */
;;;100    
;;;101      while(blkCnt > 0u)
000022  e004              B        |L1.46|
                  |L1.36|
;;;102      {
;;;103        /* C = A */
;;;104        /* Copy and then store the value in the destination buffer */
;;;105        *pDst++ = *pSrc++;
000024  f8303b02          LDRH     r3,[r0],#2
000028  f8213b02          STRH     r3,[r1],#2
00002c  1e52              SUBS     r2,r2,#1
                  |L1.46|
00002e  2a00              CMP      r2,#0                 ;101
000030  d1f8              BNE      |L1.36|
;;;106    
;;;107        /* Decrement the loop counter */
;;;108        blkCnt--;
;;;109      }
;;;110    }
000032  bd10              POP      {r4,pc}
;;;111    
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\..\\SRC\\CMSIS_DSP_4_5\\src\\SupportFunctions\\arm_copy_q15.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___14_arm_copy_q15_c_6d57c674____REV16|
#line 129 "..\\..\\SRC\\CMSIS_DSP_4_5\\inc\\core_cmInstr.h"
|__asm___14_arm_copy_q15_c_6d57c674____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___14_arm_copy_q15_c_6d57c674____REVSH|
#line 144
|__asm___14_arm_copy_q15_c_6d57c674____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___14_arm_copy_q15_c_6d57c674____RRX|
#line 300
|__asm___14_arm_copy_q15_c_6d57c674____RRX| PROC
#line 301

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
