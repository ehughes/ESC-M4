; generated by Component: ARM Compiler 5.06 update 3 (build 300) Tool: ArmCC [4d35f0]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\objects\arm_cfft_radix8_f32.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\arm_cfft_radix8_f32.d --cpu=Cortex-M4.fp --apcs=interwork -O1 --diag_suppress=9931 -I..\..\SRC\CMSIS_DSP_4_5\inc -IC:\Users\emh203\Documents\GitHub\ESC-M4\CM4_TEST\COMMON\LIB\KEIL\RTE -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.5.0\Device\ARM\ARMCM4\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=521 -DARMCM4_FP -D__FPU_PRESENT=1 -DARM_MATH_CM4 --omf_browse=.\objects\arm_cfft_radix8_f32.crf ..\..\SRC\CMSIS_DSP_4_5\src\TransformFunctions\arm_cfft_radix8_f32.c]
                          THUMB

                          AREA ||i.arm_radix8_butterfly_f32||, CODE, READONLY, ALIGN=2

                  arm_radix8_butterfly_f32 PROC
;;;139    
;;;140    void arm_radix8_butterfly_f32(
000000  e92d4fff          PUSH     {r0-r11,lr}
;;;141    float32_t * pSrc,
;;;142    uint16_t fftLen,
;;;143    const float32_t * pCoef,
;;;144    uint16_t twidCoefModifier)
;;;145    {
000004  ed2d8b10          VPUSH    {d8-d15}
000008  b090              SUB      sp,sp,#0x40
;;;146       uint32_t ia1, ia2, ia3, ia4, ia5, ia6, ia7;
;;;147       uint32_t i1, i2, i3, i4, i5, i6, i7, i8;
;;;148       uint32_t id;
;;;149       uint32_t n1, n2, j;
;;;150       
;;;151       float32_t r1, r2, r3, r4, r5, r6, r7, r8;
;;;152       float32_t t1, t2;
;;;153       float32_t s1, s2, s3, s4, s5, s6, s7, s8;
;;;154       float32_t p1, p2, p3, p4;
;;;155       float32_t co2, co3, co4, co5, co6, co7, co8;
;;;156       float32_t si2, si3, si4, si5, si6, si7, si8;
;;;157       const float32_t C81 = 0.70710678118f;
00000a  ed9ffafe          VLDR     s30,|L1.1028|
;;;158    
;;;159       n2 = fftLen;
00000e  9921              LDR      r1,[sp,#0x84]
                  |L1.16|
;;;160       
;;;161       do 
;;;162       {
;;;163          n1 = n2;
000010  9100              STR      r1,[sp,#0]
;;;164          n2 = n2 >> 3;
000012  08c9              LSRS     r1,r1,#3
;;;165          i1 = 0;
000014  2300              MOVS     r3,#0
                  |L1.22|
;;;166          
;;;167          do
;;;168          {
;;;169             i2 = i1 + n2;
000016  185c              ADDS     r4,r3,r1
;;;170             i3 = i2 + n2;
000018  1865              ADDS     r5,r4,r1
;;;171             i4 = i3 + n2;
00001a  186e              ADDS     r6,r5,r1
;;;172             i5 = i4 + n2;
00001c  1877              ADDS     r7,r6,r1
;;;173             i6 = i5 + n2;
00001e  eb070c01          ADD      r12,r7,r1
;;;174             i7 = i6 + n2;
000022  eb0c0801          ADD      r8,r12,r1
;;;175             i8 = i7 + n2;
000026  eb080901          ADD      r9,r8,r1
;;;176             r1 = pSrc[2 * i1] + pSrc[2 * i5];
00002a  eb000bc3          ADD      r11,r0,r3,LSL #3
00002e  eb000ec7          ADD      lr,r0,r7,LSL #3
000032  eddb0a00          VLDR     s1,[r11,#0]
000036  ed9e1a00          VLDR     s2,[lr,#0]
00003a  ee300a81          VADD.F32 s0,s1,s2
;;;177             r5 = pSrc[2 * i1] - pSrc[2 * i5];
00003e  ee701ac1          VSUB.F32 s3,s1,s2
;;;178             r2 = pSrc[2 * i2] + pSrc[2 * i6];
000042  eb000ac4          ADD      r10,r0,r4,LSL #3
000046  f8cda03c          STR      r10,[sp,#0x3c]
00004a  ed9a1a00          VLDR     s2,[r10,#0]
00004e  eb000acc          ADD      r10,r0,r12,LSL #3
000052  f8cda038          STR      r10,[sp,#0x38]
000056  ed9a2a00          VLDR     s4,[r10,#0]
00005a  ee710a02          VADD.F32 s1,s2,s4
;;;179             r6 = pSrc[2 * i2] - pSrc[2 * i6];
00005e  ee313a42          VSUB.F32 s6,s2,s4
;;;180             r3 = pSrc[2 * i3] + pSrc[2 * i7];
000062  eb000ac5          ADD      r10,r0,r5,LSL #3
000066  f8cda034          STR      r10,[sp,#0x34]
00006a  ed9a2a00          VLDR     s4,[r10,#0]
00006e  eb000ac8          ADD      r10,r0,r8,LSL #3
000072  f8cda030          STR      r10,[sp,#0x30]
000076  edda2a00          VLDR     s5,[r10,#0]
00007a  ee321a22          VADD.F32 s2,s4,s5
;;;181             r7 = pSrc[2 * i3] - pSrc[2 * i7];
00007e  ee723a62          VSUB.F32 s7,s4,s5
;;;182             r4 = pSrc[2 * i4] + pSrc[2 * i8];
000082  eb000ac6          ADD      r10,r0,r6,LSL #3
000086  f8cda02c          STR      r10,[sp,#0x2c]
00008a  edda2a00          VLDR     s5,[r10,#0]
00008e  eb000ac9          ADD      r10,r0,r9,LSL #3
000092  f8cda028          STR      r10,[sp,#0x28]
000096  ed9a4a00          VLDR     s8,[r10,#0]
00009a  ee322a84          VADD.F32 s4,s5,s8
;;;183             r8 = pSrc[2 * i4] - pSrc[2 * i8];
00009e  ee324ac4          VSUB.F32 s8,s5,s8
;;;184             t1 = r1 - r3;
0000a2  ee704a41          VSUB.F32 s9,s0,s2
;;;185             r1 = r1 + r3;
0000a6  ee300a01          VADD.F32 s0,s0,s2
;;;186             r3 = r2 - r4;
0000aa  ee301ac2          VSUB.F32 s2,s1,s4
;;;187             r2 = r2 + r4;
0000ae  ee700a82          VADD.F32 s1,s1,s4
;;;188             pSrc[2 * i1] = r1 + r2;   
0000b2  ee302a20          VADD.F32 s4,s0,s1
0000b6  ed8b2a00          VSTR     s4,[r11,#0]
;;;189             pSrc[2 * i5] = r1 - r2;
0000ba  ee300a60          VSUB.F32 s0,s0,s1
0000be  ed8e0a00          VSTR     s0,[lr,#0]
;;;190             r1 = pSrc[2 * i1 + 1] + pSrc[2 * i5 + 1];
0000c2  f04f0e01          MOV      lr,#1
0000c6  eb0e0a43          ADD      r10,lr,r3,LSL #1
0000ca  eb0e0747          ADD      r7,lr,r7,LSL #1
0000ce  eb000a8a          ADD      r10,r0,r10,LSL #2
0000d2  eb000787          ADD      r7,r0,r7,LSL #2
0000d6  ed9a0a00          VLDR     s0,[r10,#0]
0000da  edd70a00          VLDR     s1,[r7,#0]
0000de  ee706a20          VADD.F32 s13,s0,s1
;;;191             s5 = pSrc[2 * i1 + 1] - pSrc[2 * i5 + 1];
0000e2  ee306a60          VSUB.F32 s12,s0,s1
;;;192             r2 = pSrc[2 * i2 + 1] + pSrc[2 * i6 + 1];
0000e6  eb0e0444          ADD      r4,lr,r4,LSL #1
0000ea  eb0e0c4c          ADD      r12,lr,r12,LSL #1
0000ee  eb000484          ADD      r4,r0,r4,LSL #2
0000f2  eb000c8c          ADD      r12,r0,r12,LSL #2
0000f6  edd40a00          VLDR     s1,[r4,#0]
0000fa  ed9c2a00          VLDR     s4,[r12,#0]
0000fe  ee300a82          VADD.F32 s0,s1,s4
;;;193             s6 = pSrc[2 * i2 + 1] - pSrc[2 * i6 + 1];
000102  ee305ac2          VSUB.F32 s10,s1,s4
;;;194             s3 = pSrc[2 * i3 + 1] + pSrc[2 * i7 + 1];
000106  eb0e0545          ADD      r5,lr,r5,LSL #1
00010a  eb0e0848          ADD      r8,lr,r8,LSL #1
00010e  eb000585          ADD      r5,r0,r5,LSL #2
000112  eb000888          ADD      r8,r0,r8,LSL #2
000116  edd50a00          VLDR     s1,[r5,#0]
00011a  ed982a00          VLDR     s4,[r8,#0]
00011e  ee307a82          VADD.F32 s14,s1,s4
;;;195             s7 = pSrc[2 * i3 + 1] - pSrc[2 * i7 + 1];
000122  ee302ac2          VSUB.F32 s4,s1,s4
;;;196             r4 = pSrc[2 * i4 + 1] + pSrc[2 * i8 + 1];
000126  eb0e0646          ADD      r6,lr,r6,LSL #1
00012a  eb0e0949          ADD      r9,lr,r9,LSL #1
00012e  eb000686          ADD      r6,r0,r6,LSL #2
000132  eb000989          ADD      r9,r0,r9,LSL #2
000136  edd60a00          VLDR     s1,[r6,#0]
00013a  edd95a00          VLDR     s11,[r9,#0]
00013e  ee702aa5          VADD.F32 s5,s1,s11
;;;197             s8 = pSrc[2 * i4 + 1] - pSrc[2 * i8 + 1];
000142  ee700ae5          VSUB.F32 s1,s1,s11
;;;198             t2 = r1 - s3;
000146  ee765ac7          VSUB.F32 s11,s13,s14
;;;199             r1 = r1 + s3;
00014a  ee766a87          VADD.F32 s13,s13,s14
;;;200             s3 = r2 - r4;
00014e  ee307a62          VSUB.F32 s14,s0,s5
;;;201             r2 = r2 + r4;
000152  ee300a22          VADD.F32 s0,s0,s5
;;;202             pSrc[2 * i1 + 1] = r1 + r2;
000156  ee762a80          VADD.F32 s5,s13,s0
00015a  edca2a00          VSTR     s5,[r10,#0]
;;;203             pSrc[2 * i5 + 1] = r1 - r2;
00015e  ee360ac0          VSUB.F32 s0,s13,s0
000162  ed870a00          VSTR     s0,[r7,#0]
;;;204             pSrc[2 * i3]     = t1 + s3;
000166  ee340a87          VADD.F32 s0,s9,s14
00016a  f8dda034          LDR      r10,[sp,#0x34]
00016e  ed8a0a00          VSTR     s0,[r10,#0]
;;;205             pSrc[2 * i7]     = t1 - s3;
000172  ee340ac7          VSUB.F32 s0,s9,s14
000176  f8dda030          LDR      r10,[sp,#0x30]
00017a  ed8a0a00          VSTR     s0,[r10,#0]
;;;206             pSrc[2 * i3 + 1] = t2 - r3;
00017e  ee350ac1          VSUB.F32 s0,s11,s2
000182  ed850a00          VSTR     s0,[r5,#0]
;;;207             pSrc[2 * i7 + 1] = t2 + r3;
000186  ee350a81          VADD.F32 s0,s11,s2
00018a  ed880a00          VSTR     s0,[r8,#0]
;;;208             r1 = (r6 - r8) * C81;
00018e  ee330a44          VSUB.F32 s0,s6,s8
000192  ee201a0f          VMUL.F32 s2,s0,s30
;;;209             r6 = (r6 + r8) * C81;
000196  ee330a04          VADD.F32 s0,s6,s8
00019a  ee602a0f          VMUL.F32 s5,s0,s30
;;;210             r2 = (s6 - s8) * C81;
00019e  ee350a60          VSUB.F32 s0,s10,s1
0001a2  ee200a0f          VMUL.F32 s0,s0,s30
;;;211             s6 = (s6 + s8) * C81;
0001a6  ee750a20          VADD.F32 s1,s10,s1
0001aa  ee203a8f          VMUL.F32 s6,s1,s30
;;;212             t1 = r5 - r1;
0001ae  ee710ac1          VSUB.F32 s1,s3,s2
;;;213             r5 = r5 + r1;
0001b2  ee311a81          VADD.F32 s2,s3,s2
;;;214             r8 = r7 - r6;
0001b6  ee731ae2          VSUB.F32 s3,s7,s5
;;;215             r7 = r7 + r6;
0001ba  ee732aa2          VADD.F32 s5,s7,s5
;;;216             t2 = s5 - r2;
0001be  ee763a40          VSUB.F32 s7,s12,s0
;;;217             s5 = s5 + r2;
0001c2  ee360a00          VADD.F32 s0,s12,s0
;;;218             s8 = s7 - s6;
0001c6  ee324a43          VSUB.F32 s8,s4,s6
;;;219             s7 = s7 + s6;
0001ca  ee322a03          VADD.F32 s4,s4,s6
;;;220             pSrc[2 * i2]     = r5 + s7;
0001ce  f8dda03c          LDR      r10,[sp,#0x3c]
0001d2  ee313a02          VADD.F32 s6,s2,s4
0001d6  ed8a3a00          VSTR     s6,[r10,#0]
;;;221             pSrc[2 * i8]     = r5 - s7;
0001da  ee311a42          VSUB.F32 s2,s2,s4
0001de  f8dda028          LDR      r10,[sp,#0x28]
0001e2  ed8a1a00          VSTR     s2,[r10,#0]
;;;222             pSrc[2 * i6]     = t1 + s8;
0001e6  ee301a84          VADD.F32 s2,s1,s8
0001ea  f8dda038          LDR      r10,[sp,#0x38]
0001ee  ed8a1a00          VSTR     s2,[r10,#0]
;;;223             pSrc[2 * i4]     = t1 - s8;
0001f2  ee700ac4          VSUB.F32 s1,s1,s8
0001f6  f8dda02c          LDR      r10,[sp,#0x2c]
0001fa  edca0a00          VSTR     s1,[r10,#0]
;;;224             pSrc[2 * i2 + 1] = s5 - r7;
0001fe  ee700a62          VSUB.F32 s1,s0,s5
000202  edc40a00          VSTR     s1,[r4,#0]
;;;225             pSrc[2 * i8 + 1] = s5 + r7;
000206  ee300a22          VADD.F32 s0,s0,s5
00020a  ed890a00          VSTR     s0,[r9,#0]
;;;226             pSrc[2 * i6 + 1] = t2 - r8;
00020e  ee330ae1          VSUB.F32 s0,s7,s3
000212  ed8c0a00          VSTR     s0,[r12,#0]
;;;227             pSrc[2 * i4 + 1] = t2 + r8;
000216  ee330aa1          VADD.F32 s0,s7,s3
00021a  ed860a00          VSTR     s0,[r6,#0]
;;;228             
;;;229             i1 += n1;
00021e  9c00              LDR      r4,[sp,#0]
000220  4423              ADD      r3,r3,r4
;;;230          } while(i1 < fftLen);
000222  9c21              LDR      r4,[sp,#0x84]
000224  42a3              CMP      r3,r4
000226  f4ffaef6          BCC      |L1.22|
;;;231          
;;;232          if(n2 < 8)
00022a  2908              CMP      r1,#8
00022c  d37d              BCC      |L1.810|
;;;233             break;
;;;234          
;;;235          ia1 = 0;
00022e  2500              MOVS     r5,#0
;;;236          j = 1;
000230  f04f0b01          MOV      r11,#1
                  |L1.564|
;;;237          
;;;238          do
;;;239          {      
;;;240             /*  index calculation for the coefficients */
;;;241             id  = ia1 + twidCoefModifier;
000234  9b23              LDR      r3,[sp,#0x8c]
000236  442b              ADD      r3,r3,r5
;;;242             ia1 = id;
000238  461d              MOV      r5,r3
;;;243             ia2 = ia1 + id;
00023a  18ee              ADDS     r6,r5,r3
;;;244             ia3 = ia2 + id;
00023c  18f7              ADDS     r7,r6,r3
;;;245             ia4 = ia3 + id;
00023e  eb070c03          ADD      r12,r7,r3
;;;246             ia5 = ia4 + id;
000242  eb0c0803          ADD      r8,r12,r3
;;;247             ia6 = ia5 + id;
000246  eb080903          ADD      r9,r8,r3
;;;248             ia7 = ia6 + id;
00024a  444b              ADD      r3,r3,r9
;;;249                      
;;;250             co2 = pCoef[2 * ia1];
00024c  eb0204c5          ADD      r4,r2,r5,LSL #3
000250  ed947a00          VLDR     s14,[r4,#0]
;;;251             co3 = pCoef[2 * ia2];
000254  eb0204c6          ADD      r4,r2,r6,LSL #3
000258  edd47a00          VLDR     s15,[r4,#0]
;;;252             co4 = pCoef[2 * ia3];
00025c  eb0204c7          ADD      r4,r2,r7,LSL #3
000260  ed948a00          VLDR     s16,[r4,#0]
;;;253             co5 = pCoef[2 * ia4];
000264  eb0204cc          ADD      r4,r2,r12,LSL #3
000268  edd48a00          VLDR     s17,[r4,#0]
;;;254             co6 = pCoef[2 * ia5];
00026c  eb0204c8          ADD      r4,r2,r8,LSL #3
000270  ed949a00          VLDR     s18,[r4,#0]
;;;255             co7 = pCoef[2 * ia6];
000274  eb0204c9          ADD      r4,r2,r9,LSL #3
000278  edd49a00          VLDR     s19,[r4,#0]
;;;256             co8 = pCoef[2 * ia7];
00027c  eb0204c3          ADD      r4,r2,r3,LSL #3
000280  ed94aa00          VLDR     s20,[r4,#0]
;;;257             si2 = pCoef[2 * ia1 + 1];
000284  2401              MOVS     r4,#1
000286  eb040a45          ADD      r10,r4,r5,LSL #1
00028a  eb020a8a          ADD      r10,r2,r10,LSL #2
00028e  eddaaa00          VLDR     s21,[r10,#0]
;;;258             si3 = pCoef[2 * ia2 + 1];
000292  eb040646          ADD      r6,r4,r6,LSL #1
000296  eb020686          ADD      r6,r2,r6,LSL #2
00029a  ed96ba00          VLDR     s22,[r6,#0]
;;;259             si4 = pCoef[2 * ia3 + 1];
00029e  eb040647          ADD      r6,r4,r7,LSL #1
0002a2  eb020686          ADD      r6,r2,r6,LSL #2
0002a6  edd6ba00          VLDR     s23,[r6,#0]
;;;260             si5 = pCoef[2 * ia4 + 1];
0002aa  eb04064c          ADD      r6,r4,r12,LSL #1
0002ae  eb020686          ADD      r6,r2,r6,LSL #2
0002b2  ed96ca00          VLDR     s24,[r6,#0]
;;;261             si6 = pCoef[2 * ia5 + 1];
0002b6  eb040648          ADD      r6,r4,r8,LSL #1
0002ba  eb020686          ADD      r6,r2,r6,LSL #2
0002be  edd6ca00          VLDR     s25,[r6,#0]
;;;262             si7 = pCoef[2 * ia6 + 1];
0002c2  eb040649          ADD      r6,r4,r9,LSL #1
0002c6  eb020686          ADD      r6,r2,r6,LSL #2
0002ca  ed96da00          VLDR     s26,[r6,#0]
;;;263             si8 = pCoef[2 * ia7 + 1];         
0002ce  eb040343          ADD      r3,r4,r3,LSL #1
0002d2  eb020383          ADD      r3,r2,r3,LSL #2
0002d6  edd3da00          VLDR     s27,[r3,#0]
;;;264             
;;;265             i1 = j;
0002da  465b              MOV      r3,r11
                  |L1.732|
;;;266             
;;;267             do
;;;268             {
;;;269                /*  index calculation for the input */
;;;270                i2 = i1 + n2;
0002dc  185e              ADDS     r6,r3,r1
;;;271                i3 = i2 + n2;
0002de  1877              ADDS     r7,r6,r1
;;;272                i4 = i3 + n2;
0002e0  eb070c01          ADD      r12,r7,r1
;;;273                i5 = i4 + n2;
0002e4  eb0c0801          ADD      r8,r12,r1
;;;274                i6 = i5 + n2;
0002e8  eb080901          ADD      r9,r8,r1
;;;275                i7 = i6 + n2;
0002ec  eb090a01          ADD      r10,r9,r1
;;;276                i8 = i7 + n2;
0002f0  eb0a0401          ADD      r4,r10,r1
0002f4  9401              STR      r4,[sp,#4]
;;;277                r1 = pSrc[2 * i1] + pSrc[2 * i5];
0002f6  eb000ec3          ADD      lr,r0,r3,LSL #3
0002fa  eb0004c8          ADD      r4,r0,r8,LSL #3
0002fe  ed9e0a00          VLDR     s0,[lr,#0]
000302  9409              STR      r4,[sp,#0x24]
000304  edd40a00          VLDR     s1,[r4,#0]
000308  ee703a20          VADD.F32 s7,s0,s1
;;;278                r5 = pSrc[2 * i1] - pSrc[2 * i5];
00030c  ee301a60          VSUB.F32 s2,s0,s1
;;;279                r2 = pSrc[2 * i2] + pSrc[2 * i6];
000310  eb0004c6          ADD      r4,r0,r6,LSL #3
000314  9408              STR      r4,[sp,#0x20]
000316  edd40a00          VLDR     s1,[r4,#0]
00031a  eb0004c9          ADD      r4,r0,r9,LSL #3
00031e  9407              STR      r4,[sp,#0x1c]
000320  edd41a00          VLDR     s3,[r4,#0]
000324  ee300aa1          VADD.F32 s0,s1,s3
;;;280                r6 = pSrc[2 * i2] - pSrc[2 * i6];
000328  e000              B        |L1.812|
                  |L1.810|
00032a  e147              B        |L1.1468|
                  |L1.812|
00032c  ee701ae1          VSUB.F32 s3,s1,s3
;;;281                r3 = pSrc[2 * i3] + pSrc[2 * i7];
000330  eb0004c7          ADD      r4,r0,r7,LSL #3
000334  9406              STR      r4,[sp,#0x18]
000336  edd40a00          VLDR     s1,[r4,#0]
00033a  eb0004ca          ADD      r4,r0,r10,LSL #3
00033e  9405              STR      r4,[sp,#0x14]
000340  ed942a00          VLDR     s4,[r4,#0]
000344  ee304a82          VADD.F32 s8,s1,s4
;;;282                r7 = pSrc[2 * i3] - pSrc[2 * i7];
000348  ee302ac2          VSUB.F32 s4,s1,s4
;;;283                r4 = pSrc[2 * i4] + pSrc[2 * i8];
00034c  eb0004cc          ADD      r4,r0,r12,LSL #3
000350  9404              STR      r4,[sp,#0x10]
000352  edd42a00          VLDR     s5,[r4,#0]
000356  9c01              LDR      r4,[sp,#4]
000358  eb0004c4          ADD      r4,r0,r4,LSL #3
00035c  9403              STR      r4,[sp,#0xc]
00035e  ed943a00          VLDR     s6,[r4,#0]
000362  ee720a83          VADD.F32 s1,s5,s6
;;;284                r8 = pSrc[2 * i4] - pSrc[2 * i8];
000366  ee722ac3          VSUB.F32 s5,s5,s6
;;;285                t1 = r1 - r3;
00036a  ee333ac4          VSUB.F32 s6,s7,s8
;;;286                r1 = r1 + r3;
00036e  ee334a84          VADD.F32 s8,s7,s8
;;;287                r3 = r2 - r4;
000372  ee703a60          VSUB.F32 s7,s0,s1
;;;288                r2 = r2 + r4;
000376  ee300a20          VADD.F32 s0,s0,s1
;;;289                pSrc[2 * i1] = r1 + r2;
00037a  ee740a00          VADD.F32 s1,s8,s0
00037e  edce0a00          VSTR     s1,[lr,#0]
;;;290                r2 = r1 - r2;
000382  ee740a40          VSUB.F32 s1,s8,s0
;;;291                s1 = pSrc[2 * i1 + 1] + pSrc[2 * i5 + 1];
000386  2401              MOVS     r4,#1
000388  eb040e43          ADD      lr,r4,r3,LSL #1
00038c  eb000e8e          ADD      lr,r0,lr,LSL #2
000390  eb040848          ADD      r8,r4,r8,LSL #1
000394  f8cde008          STR      lr,[sp,#8]
000398  eb000888          ADD      r8,r0,r8,LSL #2
00039c  ed9e0a00          VLDR     s0,[lr,#0]
0003a0  edd84a00          VLDR     s9,[r8,#0]
0003a4  ee304a24          VADD.F32 s8,s0,s9
;;;292                s5 = pSrc[2 * i1 + 1] - pSrc[2 * i5 + 1];
0003a8  ee305a64          VSUB.F32 s10,s0,s9
;;;293                s2 = pSrc[2 * i2 + 1] + pSrc[2 * i6 + 1];
0003ac  eb040646          ADD      r6,r4,r6,LSL #1
0003b0  eb000e86          ADD      lr,r0,r6,LSL #2
0003b4  eb040649          ADD      r6,r4,r9,LSL #1
0003b8  eb000686          ADD      r6,r0,r6,LSL #2
0003bc  ed9e0a00          VLDR     s0,[lr,#0]
0003c0  edd65a00          VLDR     s11,[r6,#0]
0003c4  ee704a25          VADD.F32 s9,s0,s11
;;;294                s6 = pSrc[2 * i2 + 1] - pSrc[2 * i6 + 1];
0003c8  ee705a65          VSUB.F32 s11,s0,s11
;;;295                s3 = pSrc[2 * i3 + 1] + pSrc[2 * i7 + 1];
0003cc  eb040747          ADD      r7,r4,r7,LSL #1
0003d0  eb000987          ADD      r9,r0,r7,LSL #2
0003d4  eb04074a          ADD      r7,r4,r10,LSL #1
0003d8  eb000a87          ADD      r10,r0,r7,LSL #2
0003dc  ed990a00          VLDR     s0,[r9,#0]
0003e0  ed9a6a00          VLDR     s12,[r10,#0]
0003e4  ee70ea06          VADD.F32 s29,s0,s12
;;;296                s7 = pSrc[2 * i3 + 1] - pSrc[2 * i7 + 1];
0003e8  ee306a46          VSUB.F32 s12,s0,s12
;;;297                s4 = pSrc[2 * i4 + 1] + pSrc[2 * i8 + 1];
0003ec  eb04074c          ADD      r7,r4,r12,LSL #1
0003f0  eb000787          ADD      r7,r0,r7,LSL #2
0003f4  f8ddc004          LDR      r12,[sp,#4]
0003f8  edd76a00          VLDR     s13,[r7,#0]
0003fc  eb04044c          ADD      r4,r4,r12,LSL #1
000400  e002              B        |L1.1032|
000402  0000              DCW      0x0000
                  |L1.1028|
000404  3f3504f3          DCFS     0x3f3504f3 ; 0.70710676908493042
                  |L1.1032|
000408  eb000c84          ADD      r12,r0,r4,LSL #2
00040c  ed9cea00          VLDR     s28,[r12,#0]
000410  ee360a8e          VADD.F32 s0,s13,s28
;;;298                s8 = pSrc[2 * i4 + 1] - pSrc[2 * i8 + 1];
000414  ee766ace          VSUB.F32 s13,s13,s28
;;;299                t2 = s1 - s3;
000418  ee34ea6e          VSUB.F32 s28,s8,s29
;;;300                s1 = s1 + s3;
00041c  ee344a2e          VADD.F32 s8,s8,s29
;;;301                s3 = s2 - s4;
000420  ee74eac0          VSUB.F32 s29,s9,s0
;;;302                s2 = s2 + s4;
000424  ee744a80          VADD.F32 s9,s9,s0
;;;303                r1 = t1 + s3;
000428  ee330a2e          VADD.F32 s0,s6,s29
;;;304                t1 = t1 - s3;
00042c  ee333a6e          VSUB.F32 s6,s6,s29
;;;305                pSrc[2 * i1 + 1] = s1 + s2;
000430  ee74ea24          VADD.F32 s29,s8,s9
000434  9c02              LDR      r4,[sp,#8]
000436  edc4ea00          VSTR     s29,[r4,#0]
;;;306                s2 = s1 - s2;
00043a  ee744a64          VSUB.F32 s9,s8,s9
;;;307                s1 = t2 - r3;
00043e  ee3e4a63          VSUB.F32 s8,s28,s7
;;;308                t2 = t2 + r3;
000442  ee7e3a23          VADD.F32 s7,s28,s7
;;;309                p1 = co5 * r2;
000446  ee28eaa0          VMUL.F32 s28,s17,s1
;;;310                p2 = si5 * s2;
00044a  ee6cea24          VMUL.F32 s29,s24,s9
;;;311                p3 = co5 * s2;
00044e  ee684aa4          VMUL.F32 s9,s17,s9
;;;312                p4 = si5 * r2;
000452  ee6c0a20          VMUL.F32 s1,s24,s1
;;;313                pSrc[2 * i5]     = p1 + p2;
000456  9c09              LDR      r4,[sp,#0x24]
000458  ee3eea2e          VADD.F32 s28,s28,s29
00045c  ed84ea00          VSTR     s28,[r4,#0]
;;;314                pSrc[2 * i5 + 1] = p3 - p4;
000460  ee740ae0          VSUB.F32 s1,s9,s1
000464  edc80a00          VSTR     s1,[r8,#0]
;;;315                p1 = co3 * r1;
000468  ee670a80          VMUL.F32 s1,s15,s0
;;;316                p2 = si3 * s1;
00046c  ee6b4a04          VMUL.F32 s9,s22,s8
;;;317                p3 = co3 * s1;
000470  ee274a84          VMUL.F32 s8,s15,s8
;;;318                p4 = si3 * r1;
000474  ee2b0a00          VMUL.F32 s0,s22,s0
;;;319                pSrc[2 * i3]     = p1 + p2;
000478  9c06              LDR      r4,[sp,#0x18]
00047a  ee700aa4          VADD.F32 s1,s1,s9
00047e  edc40a00          VSTR     s1,[r4,#0]
;;;320                pSrc[2 * i3 + 1] = p3 - p4;
000482  ee340a40          VSUB.F32 s0,s8,s0
000486  ed890a00          VSTR     s0,[r9,#0]
;;;321                p1 = co7 * t1;
00048a  ee290a83          VMUL.F32 s0,s19,s6
;;;322                p2 = si7 * t2;
00048e  ee6d0a23          VMUL.F32 s1,s26,s7
;;;323                p3 = co7 * t2;
000492  ee693aa3          VMUL.F32 s7,s19,s7
;;;324                p4 = si7 * t1;
000496  ee2d3a03          VMUL.F32 s6,s26,s6
;;;325                pSrc[2 * i7]     = p1 + p2;
00049a  9c05              LDR      r4,[sp,#0x14]
00049c  ee300a20          VADD.F32 s0,s0,s1
0004a0  ed840a00          VSTR     s0,[r4,#0]
;;;326                pSrc[2 * i7 + 1] = p3 - p4;
0004a4  ee330ac3          VSUB.F32 s0,s7,s6
0004a8  ed8a0a00          VSTR     s0,[r10,#0]
;;;327                r1 = (r6 - r8) * C81;
0004ac  ee310ae2          VSUB.F32 s0,s3,s5
0004b0  ee200a0f          VMUL.F32 s0,s0,s30
;;;328                r6 = (r6 + r8) * C81;
0004b4  ee710aa2          VADD.F32 s1,s3,s5
0004b8  ee600a8f          VMUL.F32 s1,s1,s30
;;;329                s1 = (s6 - s8) * C81;
0004bc  ee751ae6          VSUB.F32 s3,s11,s13
0004c0  ee611a8f          VMUL.F32 s3,s3,s30
;;;330                s6 = (s6 + s8) * C81;
0004c4  ee752aa6          VADD.F32 s5,s11,s13
0004c8  ee223a8f          VMUL.F32 s6,s5,s30
;;;331                t1 = r5 - r1;
0004cc  ee712a40          VSUB.F32 s5,s2,s0
;;;332                r5 = r5 + r1;
0004d0  ee310a00          VADD.F32 s0,s2,s0
;;;333                r8 = r7 - r6;
0004d4  ee321a60          VSUB.F32 s2,s4,s1
;;;334                r7 = r7 + r6;
0004d8  ee720a20          VADD.F32 s1,s4,s1
;;;335                t2 = s5 - s1;
0004dc  ee352a61          VSUB.F32 s4,s10,s3
;;;336                s5 = s5 + s1;
0004e0  ee751a21          VADD.F32 s3,s10,s3
;;;337                s8 = s7 - s6;
0004e4  ee763a43          VSUB.F32 s7,s12,s6
;;;338                s7 = s7 + s6;
0004e8  ee364a03          VADD.F32 s8,s12,s6
;;;339                r1 = r5 + s7;
0004ec  ee303a04          VADD.F32 s6,s0,s8
;;;340                r5 = r5 - s7;
0004f0  ee300a44          VSUB.F32 s0,s0,s8
;;;341                r6 = t1 + s8;
0004f4  ee324aa3          VADD.F32 s8,s5,s7
;;;342                t1 = t1 - s8;
0004f8  ee722ae3          VSUB.F32 s5,s5,s7
;;;343                s1 = s5 - r7;
0004fc  ee713ae0          VSUB.F32 s7,s3,s1
;;;344                s5 = s5 + r7;
000500  ee711aa0          VADD.F32 s3,s3,s1
;;;345                s6 = t2 - r8;
000504  ee720a41          VSUB.F32 s1,s4,s2
;;;346                t2 = t2 + r8;
000508  ee321a01          VADD.F32 s2,s4,s2
;;;347                p1 = co2 * r1;
00050c  ee272a03          VMUL.F32 s4,s14,s6
;;;348                p2 = si2 * s1;
000510  ee6a4aa3          VMUL.F32 s9,s21,s7
;;;349                p3 = co2 * s1;
000514  ee673a23          VMUL.F32 s7,s14,s7
;;;350                p4 = si2 * r1;
000518  ee2a3a83          VMUL.F32 s6,s21,s6
;;;351                pSrc[2 * i2]     = p1 + p2;
00051c  9c08              LDR      r4,[sp,#0x20]
00051e  ee322a24          VADD.F32 s4,s4,s9
000522  ed842a00          VSTR     s4,[r4,#0]
;;;352                pSrc[2 * i2 + 1] = p3 - p4;
000526  ee332ac3          VSUB.F32 s4,s7,s6
00052a  ed8e2a00          VSTR     s4,[lr,#0]
;;;353                p1 = co8 * r5;
00052e  ee2a3a00          VMUL.F32 s6,s20,s0
;;;354                p2 = si8 * s5;
000532  ee2d2aa1          VMUL.F32 s4,s27,s3
;;;355                p3 = co8 * s5;
000536  ee6a1a21          VMUL.F32 s3,s20,s3
;;;356                p4 = si8 * r5;
00053a  ee2d0a80          VMUL.F32 s0,s27,s0
;;;357                pSrc[2 * i8]     = p1 + p2;
00053e  9c03              LDR      r4,[sp,#0xc]
000540  ee332a02          VADD.F32 s4,s6,s4
000544  ed842a00          VSTR     s4,[r4,#0]
;;;358                pSrc[2 * i8 + 1] = p3 - p4;
000548  ee310ac0          VSUB.F32 s0,s3,s0
00054c  ed8c0a00          VSTR     s0,[r12,#0]
;;;359                p1 = co6 * r6;
000550  ee290a04          VMUL.F32 s0,s18,s8
;;;360                p2 = si6 * s6;
000554  ee6c1aa0          VMUL.F32 s3,s25,s1
;;;361                p3 = co6 * s6;
000558  ee690a20          VMUL.F32 s1,s18,s1
;;;362                p4 = si6 * r6;
00055c  ee2c2a84          VMUL.F32 s4,s25,s8
;;;363                pSrc[2 * i6]     = p1 + p2;
000560  9c07              LDR      r4,[sp,#0x1c]
000562  ee300a21          VADD.F32 s0,s0,s3
000566  ed840a00          VSTR     s0,[r4,#0]
;;;364                pSrc[2 * i6 + 1] = p3 - p4;
00056a  ee300ac2          VSUB.F32 s0,s1,s4
00056e  ed860a00          VSTR     s0,[r6,#0]
;;;365                p1 = co4 * t1;
000572  ee680a22          VMUL.F32 s1,s16,s5
;;;366                p2 = si4 * t2;
000576  ee2b0a81          VMUL.F32 s0,s23,s2
;;;367                p3 = co4 * t2;
00057a  ee281a01          VMUL.F32 s2,s16,s2
;;;368                p4 = si4 * t1;
00057e  ee6b1aa2          VMUL.F32 s3,s23,s5
;;;369                pSrc[2 * i4]     = p1 + p2;
000582  9c04              LDR      r4,[sp,#0x10]
000584  ee300a80          VADD.F32 s0,s1,s0
000588  ed840a00          VSTR     s0,[r4,#0]
;;;370                pSrc[2 * i4 + 1] = p3 - p4;
00058c  ee310a61          VSUB.F32 s0,s2,s3
000590  ed870a00          VSTR     s0,[r7,#0]
;;;371                
;;;372                i1 += n1;
000594  9c00              LDR      r4,[sp,#0]
000596  4423              ADD      r3,r3,r4
;;;373             } while(i1 < fftLen);
000598  9c21              LDR      r4,[sp,#0x84]
00059a  42a3              CMP      r3,r4
00059c  f4ffae9e          BCC      |L1.732|
;;;374             
;;;375             j++;
0005a0  f10b0b01          ADD      r11,r11,#1
;;;376          } while(j < n2);
0005a4  458b              CMP      r11,r1
0005a6  f4ffae45          BCC      |L1.564|
;;;377          
;;;378          twidCoefModifier <<= 3;
0005aa  9b23              LDR      r3,[sp,#0x8c]
0005ac  f64f74ff          MOV      r4,#0xffff
0005b0  ea0403c3          AND      r3,r4,r3,LSL #3
0005b4  9323              STR      r3,[sp,#0x8c]
;;;379       } while(n2 > 7);   
0005b6  2907              CMP      r1,#7
0005b8  f63fad2a          BHI      |L1.16|
                  |L1.1468|
;;;380    }
0005bc  b010              ADD      sp,sp,#0x40
0005be  ecbd8b10          VPOP     {d8-d15}
0005c2  e8bd8fff          POP      {r0-r11,pc}
;;;381    
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\..\\SRC\\CMSIS_DSP_4_5\\src\\TransformFunctions\\arm_cfft_radix8_f32.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___21_arm_cfft_radix8_f32_c_d03cf9fe____REV16|
#line 129 "..\\..\\SRC\\CMSIS_DSP_4_5\\inc\\core_cmInstr.h"
|__asm___21_arm_cfft_radix8_f32_c_d03cf9fe____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___21_arm_cfft_radix8_f32_c_d03cf9fe____REVSH|
#line 144
|__asm___21_arm_cfft_radix8_f32_c_d03cf9fe____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___21_arm_cfft_radix8_f32_c_d03cf9fe____RRX|
#line 300
|__asm___21_arm_cfft_radix8_f32_c_d03cf9fe____RRX| PROC
#line 301

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
