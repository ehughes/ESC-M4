; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\objects\arm_q31_to_float.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\arm_q31_to_float.d --cpu=Cortex-M4.fp --apcs=interwork -O3 --diag_suppress=9931 -I..\..\SRC\CMSIS_DSP_4_5\inc -IC:\Users\emh203\Documents\GitHub\ESC-M4\CM4_TEST\COMMON\LIB\KEIL\RTE\_CMSIS_DSP_4_5_O3 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.0\Device\ARM\ARMCM4\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=522 -DARMCM4_FP -D__FPU_PRESENT=1 -DARM_MATH_CM4 -D__CC_ARM --omf_browse=.\objects\arm_q31_to_float.crf ..\..\SRC\CMSIS_DSP_4_5\src\SupportFunctions\arm_q31_to_float.c]
                          THUMB

                          AREA ||i.arm_q31_to_float||, CODE, READONLY, ALIGN=2

                  arm_q31_to_float PROC
;;;73     
;;;74     void arm_q31_to_float(
000000  0893              LSRS     r3,r2,#2
;;;75       q31_t * pSrc,
;;;76       float32_t * pDst,
;;;77       uint32_t blockSize)
;;;78     {
;;;79       q31_t *pIn = pSrc;                             /* Src pointer */
;;;80       uint32_t blkCnt;                               /* loop counter */
;;;81     
;;;82     
;;;83     #ifndef ARM_MATH_CM0_FAMILY
;;;84     
;;;85       /* Run the below code for Cortex-M4 and Cortex-M3 */
;;;86     
;;;87       /*loop Unrolling */
;;;88       blkCnt = blockSize >> 2u;
;;;89     
;;;90       /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.    
;;;91        ** a second loop below computes the remaining 1 to 3 samples. */
;;;92       while(blkCnt > 0u)
;;;93       {
;;;94         /* C = (float32_t) A / 2147483648 */
;;;95         /* convert from q31 to float and then store the results in the destination buffer */
;;;96         *pDst++ = ((float32_t) * pIn++ / 2147483648.0f);
000002  ed9f0a1b          VLDR     s0,|L1.112|
000006  e022              B        |L1.78|
                  |L1.8|
000008  edd00a00          VLDR     s1,[r0,#0]
00000c  eef80ae0          VCVT.F32.S32 s1,s1
000010  ee600a80          VMUL.F32 s1,s1,s0
000014  edc10a00          VSTR     s1,[r1,#0]
;;;97         *pDst++ = ((float32_t) * pIn++ / 2147483648.0f);
000018  edd00a01          VLDR     s1,[r0,#4]
00001c  eef80ae0          VCVT.F32.S32 s1,s1
000020  ee600a80          VMUL.F32 s1,s1,s0
000024  edc10a01          VSTR     s1,[r1,#4]
;;;98         *pDst++ = ((float32_t) * pIn++ / 2147483648.0f);
000028  edd00a02          VLDR     s1,[r0,#8]
00002c  eef80ae0          VCVT.F32.S32 s1,s1
000030  ee600a80          VMUL.F32 s1,s1,s0
000034  edc10a02          VSTR     s1,[r1,#8]
;;;99         *pDst++ = ((float32_t) * pIn++ / 2147483648.0f);
000038  edd00a03          VLDR     s1,[r0,#0xc]
00003c  3010              ADDS     r0,r0,#0x10
00003e  eef80ae0          VCVT.F32.S32 s1,s1
000042  ee600a80          VMUL.F32 s1,s1,s0
000046  edc10a03          VSTR     s1,[r1,#0xc]
00004a  3110              ADDS     r1,r1,#0x10
00004c  1e5b              SUBS     r3,r3,#1
                  |L1.78|
00004e  2b00              CMP      r3,#0                 ;92
000050  d1da              BNE      |L1.8|
;;;100    
;;;101        /* Decrement the loop counter */
;;;102        blkCnt--;
;;;103      }
;;;104    
;;;105      /* If the blockSize is not a multiple of 4, compute any remaining output samples here.    
;;;106       ** No loop unrolling is used. */
;;;107      blkCnt = blockSize % 0x4u;
000052  f0020203          AND      r2,r2,#3
;;;108    
;;;109    #else
;;;110    
;;;111      /* Run the below code for Cortex-M0 */
;;;112    
;;;113      /* Loop over blockSize number of values */
;;;114      blkCnt = blockSize;
;;;115    
;;;116    #endif /* #ifndef ARM_MATH_CM0_FAMILY */
;;;117    
;;;118      while(blkCnt > 0u)
000056  e008              B        |L1.106|
                  |L1.88|
;;;119      {
;;;120        /* C = (float32_t) A / 2147483648 */
;;;121        /* convert from q31 to float and then store the results in the destination buffer */
;;;122        *pDst++ = ((float32_t) * pIn++ / 2147483648.0f);
000058  ecf00a01          VLDM     r0!,{s1}
00005c  1e52              SUBS     r2,r2,#1
00005e  eef80ae0          VCVT.F32.S32 s1,s1
000062  ee600a80          VMUL.F32 s1,s1,s0
000066  ece10a01          VSTM     r1!,{s1}
                  |L1.106|
00006a  2a00              CMP      r2,#0                 ;118
00006c  d1f4              BNE      |L1.88|
;;;123    
;;;124        /* Decrement the loop counter */
;;;125        blkCnt--;
;;;126      }
;;;127    }
00006e  4770              BX       lr
;;;128    
                          ENDP

                  |L1.112|
000070  30000000          DCFS     0x30000000 ; 4.6566128730773926e-10

;*** Start embedded assembler ***

#line 1 "..\\..\\SRC\\CMSIS_DSP_4_5\\src\\SupportFunctions\\arm_q31_to_float.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___18_arm_q31_to_float_c_439316a3____REV16|
#line 129 "..\\..\\SRC\\CMSIS_DSP_4_5\\inc\\core_cmInstr.h"
|__asm___18_arm_q31_to_float_c_439316a3____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___18_arm_q31_to_float_c_439316a3____REVSH|
#line 144
|__asm___18_arm_q31_to_float_c_439316a3____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___18_arm_q31_to_float_c_439316a3____RRX|
#line 300
|__asm___18_arm_q31_to_float_c_439316a3____RRX| PROC
#line 301

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
