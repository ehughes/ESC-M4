; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\objects\arm_fill_q15.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\arm_fill_q15.d --cpu=Cortex-M4.fp --apcs=interwork -O3 --diag_suppress=9931 -I..\..\SRC\CMSIS_DSP_4_5\inc -IC:\Users\emh203\Documents\GitHub\ESC-M4\CM4_TEST\COMMON\LIB\KEIL\RTE\_CMSIS_DSP_4_5_O3 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.0\Device\ARM\ARMCM4\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=522 -DARMCM4_FP -D__FPU_PRESENT=1 -DARM_MATH_CM4 -D__CC_ARM --omf_browse=.\objects\arm_fill_q15.crf ..\..\SRC\CMSIS_DSP_4_5\src\SupportFunctions\arm_fill_q15.c]
                          THUMB

                          AREA ||i.arm_fill_q15||, CODE, READONLY, ALIGN=2

                  arm_fill_q15 PROC
;;;60     
;;;61     void arm_fill_q15(
000000  b510              PUSH     {r4,lr}
;;;62       q15_t value,
;;;63       q15_t * pDst,
;;;64       uint32_t blockSize)
;;;65     {
;;;66       uint32_t blkCnt;                               /* loop counter */
;;;67     
;;;68     #ifndef ARM_MATH_CM0_FAMILY
;;;69     
;;;70       /* Run the below code for Cortex-M4 and Cortex-M3 */
;;;71     
;;;72       q31_t packedValue;                             /* value packed to 32 bits */
;;;73     
;;;74     
;;;75       /*loop Unrolling */
;;;76       blkCnt = blockSize >> 2u;
000002  0893              LSRS     r3,r2,#2
;;;77     
;;;78       /* Packing two 16 bit values to 32 bit value in order to use SIMD */
;;;79       packedValue = __PKHBT(value, value, 16u);
000004  eac04400          PKHBT    r4,r0,r0,LSL #16
000008  e005              B        |L1.22|
;;;80     
;;;81       /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.    
;;;82        ** a second loop below computes the remaining 1 to 3 samples. */
;;;83       while(blkCnt > 0u)
;;;84       {
;;;85         /* C = value */
;;;86         /* Fill the value in the destination buffer */
;;;87         *__SIMD32(pDst)++ = packedValue;
00000a  bf00              NOP      
                  |L1.12|
00000c  f8414b04          STR      r4,[r1],#4
;;;88         *__SIMD32(pDst)++ = packedValue;
000010  1e5b              SUBS     r3,r3,#1
000012  f8414b04          STR      r4,[r1],#4
                  |L1.22|
000016  2b00              CMP      r3,#0                 ;83
000018  d1f8              BNE      |L1.12|
;;;89     
;;;90         /* Decrement the loop counter */
;;;91         blkCnt--;
;;;92       }
;;;93     
;;;94       /* If the blockSize is not a multiple of 4, compute any remaining output samples here.    
;;;95        ** No loop unrolling is used. */
;;;96       blkCnt = blockSize % 0x4u;
00001a  f0020203          AND      r2,r2,#3
;;;97     
;;;98     #else
;;;99     
;;;100      /* Run the below code for Cortex-M0 */
;;;101    
;;;102      /* Loop over blockSize number of values */
;;;103      blkCnt = blockSize;
;;;104    
;;;105    #endif /* #ifndef ARM_MATH_CM0_FAMILY */
;;;106    
;;;107      while(blkCnt > 0u)
00001e  e002              B        |L1.38|
                  |L1.32|
;;;108      {
;;;109        /* C = value */
;;;110        /* Fill the value in the destination buffer */
;;;111        *pDst++ = value;
000020  f8210b02          STRH     r0,[r1],#2
000024  1e52              SUBS     r2,r2,#1
                  |L1.38|
000026  2a00              CMP      r2,#0                 ;107
000028  d1fa              BNE      |L1.32|
;;;112    
;;;113        /* Decrement the loop counter */
;;;114        blkCnt--;
;;;115      }
;;;116    }
00002a  bd10              POP      {r4,pc}
;;;117    
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\..\\SRC\\CMSIS_DSP_4_5\\src\\SupportFunctions\\arm_fill_q15.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___14_arm_fill_q15_c_9a732738____REV16|
#line 129 "..\\..\\SRC\\CMSIS_DSP_4_5\\inc\\core_cmInstr.h"
|__asm___14_arm_fill_q15_c_9a732738____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___14_arm_fill_q15_c_9a732738____REVSH|
#line 144
|__asm___14_arm_fill_q15_c_9a732738____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___14_arm_fill_q15_c_9a732738____RRX|
#line 300
|__asm___14_arm_fill_q15_c_9a732738____RRX| PROC
#line 301

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
