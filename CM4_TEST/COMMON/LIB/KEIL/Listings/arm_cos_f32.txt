; generated by Component: ARM Compiler 5.06 update 3 (build 300) Tool: ArmCC [4d35f0]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\objects\arm_cos_f32.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\arm_cos_f32.d --cpu=Cortex-M4.fp --apcs=interwork -O1 --diag_suppress=9931 -I..\..\SRC\CMSIS_DSP_4_5\inc -IC:\Users\emh203\Documents\GitHub\ESC-M4\CM4_TEST\COMMON\LIB\KEIL\RTE -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.5.0\Device\ARM\ARMCM4\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=521 -DARMCM4_FP -D__FPU_PRESENT=1 -DARM_MATH_CM4 --omf_browse=.\objects\arm_cos_f32.crf ..\..\SRC\CMSIS_DSP_4_5\src\FastMathFunctions\arm_cos_f32.c]
                          THUMB

                          AREA ||i.arm_cos_f32||, CODE, READONLY, ALIGN=2

                  arm_cos_f32 PROC
;;;81     
;;;82     float32_t arm_cos_f32(
000000  ed9f1a1c          VLDR     s2,|L1.116|
;;;83       float32_t x)
;;;84     {
;;;85       float32_t cosVal, fract, in;                   /* Temporary variables for input, output */
;;;86       uint16_t index;                                /* Index variable */
;;;87       float32_t a, b;                                /* Two nearest output values */
;;;88       int32_t n;
;;;89       float32_t findex;
;;;90     
;;;91       /* input x is in radians */
;;;92       /* Scale the input to [0 1] range from [0 2*PI] , divide input by 2*pi, add 0.25 (pi/2) to read sine table */
;;;93       in = x * 0.159154943092f + 0.25f;
000004  eef50a00          VMOV.F32 s1,#0.25000000
000008  ee400a01          VMLA.F32 s1,s0,s2
;;;94     
;;;95       /* Calculation of floor value of input */
;;;96       n = (int32_t) in;
00000c  eebd0ae0          VCVT.S32.F32 s0,s1
000010  ee100a10          VMOV     r0,s0
;;;97     
;;;98       /* Make negative values towards -infinity */
;;;99       if(in < 0.0f)
000014  eef50ac0          VCMPE.F32 s1,#0.0
000018  eef1fa10          VMRS     APSR_nzcv,FPSCR
00001c  d200              BCS      |L1.32|
;;;100      {
;;;101        n--;
00001e  1e40              SUBS     r0,r0,#1
                  |L1.32|
;;;102      }
;;;103    
;;;104      /* Map input value to [0 1] */
;;;105      in = in - (float32_t) n;
000020  ee000a10          VMOV     s0,r0
000024  eeb80ac0          VCVT.F32.S32 s0,s0
000028  ee300ac0          VSUB.F32 s0,s1,s0
;;;106    
;;;107      /* Calculation of index of the table */
;;;108      findex = (float32_t) FAST_MATH_TABLE_SIZE * in;
00002c  eddf0a12          VLDR     s1,|L1.120|
000030  ee200a20          VMUL.F32 s0,s0,s1
;;;109      index = ((uint16_t)findex) & 0x1ff;
000034  eefc0ac0          VCVT.U32.F32 s1,s0
000038  ee100a90          VMOV     r0,s1
00003c  f3c00008          UBFX     r0,r0,#0,#9
;;;110    
;;;111      /* fractional value calculation */
;;;112      fract = findex - (float32_t) index;
000040  ee000a90          VMOV     s1,r0
000044  eef80a60          VCVT.F32.U32 s1,s1
000048  ee700a60          VSUB.F32 s1,s0,s1
;;;113    
;;;114      /* Read two nearest values of input value from the cos table */
;;;115      a = sinTable_f32[index];
00004c  490b              LDR      r1,|L1.124|
00004e  eb010280          ADD      r2,r1,r0,LSL #2
000052  ed920a00          VLDR     s0,[r2,#0]
;;;116      b = sinTable_f32[index+1];
000056  1c40              ADDS     r0,r0,#1
000058  eb010080          ADD      r0,r1,r0,LSL #2
00005c  ed901a00          VLDR     s2,[r0,#0]
;;;117    
;;;118      /* Linear interpolation process */
;;;119      cosVal = (1.0f-fract)*a + fract*b;
000060  eef71a00          VMOV.F32 s3,#1.00000000
000064  ee711ae0          VSUB.F32 s3,s3,s1
000068  ee210a80          VMUL.F32 s0,s3,s0
00006c  ee000a81          VMLA.F32 s0,s1,s2
;;;120    
;;;121      /* Return the output value */
;;;122      return (cosVal);
;;;123    }
000070  4770              BX       lr
;;;124    
                          ENDP

000072  0000              DCW      0x0000
                  |L1.116|
000074  3e22f983          DCFS     0x3e22f983 ; 0.15915493667125702
                  |L1.120|
000078  44000000          DCFS     0x44000000 ; 512
                  |L1.124|
                          DCD      sinTable_f32

;*** Start embedded assembler ***

#line 1 "..\\..\\SRC\\CMSIS_DSP_4_5\\src\\FastMathFunctions\\arm_cos_f32.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___13_arm_cos_f32_c_374dc716____REV16|
#line 129 "..\\..\\SRC\\CMSIS_DSP_4_5\\inc\\core_cmInstr.h"
|__asm___13_arm_cos_f32_c_374dc716____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___13_arm_cos_f32_c_374dc716____REVSH|
#line 144
|__asm___13_arm_cos_f32_c_374dc716____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___13_arm_cos_f32_c_374dc716____RRX|
#line 300
|__asm___13_arm_cos_f32_c_374dc716____RRX| PROC
#line 301

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
