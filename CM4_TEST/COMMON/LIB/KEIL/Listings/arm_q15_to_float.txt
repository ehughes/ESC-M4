; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\objects\arm_q15_to_float.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\arm_q15_to_float.d --cpu=Cortex-M4.fp --apcs=interwork -O3 --diag_suppress=9931 -I..\..\SRC\CMSIS_DSP_4_5\inc -IC:\Users\emh203\Documents\GitHub\ESC-M4\CM4_TEST\COMMON\LIB\KEIL\RTE\_CMSIS_DSP_4_5_O3 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.0\Device\ARM\ARMCM4\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=522 -DARMCM4_FP -D__FPU_PRESENT=1 -DARM_MATH_CM4 -D__CC_ARM --omf_browse=.\objects\arm_q15_to_float.crf ..\..\SRC\CMSIS_DSP_4_5\src\SupportFunctions\arm_q15_to_float.c]
                          THUMB

                          AREA ||i.arm_q15_to_float||, CODE, READONLY, ALIGN=2

                  arm_q15_to_float PROC
;;;76     
;;;77     void arm_q15_to_float(
000000  b510              PUSH     {r4,lr}
;;;78       q15_t * pSrc,
;;;79       float32_t * pDst,
;;;80       uint32_t blockSize)
;;;81     {
;;;82       q15_t *pIn = pSrc;                             /* Src pointer */
;;;83       uint32_t blkCnt;                               /* loop counter */
;;;84     
;;;85     
;;;86     #ifndef ARM_MATH_CM0_FAMILY
;;;87     
;;;88       /* Run the below code for Cortex-M4 and Cortex-M3 */
;;;89     
;;;90       /*loop Unrolling */
;;;91       blkCnt = blockSize >> 2u;
000002  0893              LSRS     r3,r2,#2
;;;92     
;;;93       /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.    
;;;94        ** a second loop below computes the remaining 1 to 3 samples. */
;;;95       while(blkCnt > 0u)
;;;96       {
;;;97         /* C = (float32_t) A / 32768 */
;;;98         /* convert from q15 to float and then store the results in the destination buffer */
;;;99         *pDst++ = ((float32_t) * pIn++ / 32768.0f);
000004  ed9f0a20          VLDR     s0,|L1.136|
000008  e02a              B        |L1.96|
00000a  bf00              NOP      
                  |L1.12|
00000c  f9304b02          LDRSH    r4,[r0],#2
000010  ee004a90          VMOV     s1,r4
000014  eef80ae0          VCVT.F32.S32 s1,s1
000018  ee600a80          VMUL.F32 s1,s1,s0
00001c  edc10a00          VSTR     s1,[r1,#0]
;;;100        *pDst++ = ((float32_t) * pIn++ / 32768.0f);
000020  f9304b02          LDRSH    r4,[r0],#2
000024  ee004a90          VMOV     s1,r4
000028  eef80ae0          VCVT.F32.S32 s1,s1
00002c  ee600a80          VMUL.F32 s1,s1,s0
000030  edc10a01          VSTR     s1,[r1,#4]
;;;101        *pDst++ = ((float32_t) * pIn++ / 32768.0f);
000034  f9304b04          LDRSH    r4,[r0],#4
000038  ee004a90          VMOV     s1,r4
00003c  eef80ae0          VCVT.F32.S32 s1,s1
000040  ee600a80          VMUL.F32 s1,s1,s0
000044  edc10a02          VSTR     s1,[r1,#8]
;;;102        *pDst++ = ((float32_t) * pIn++ / 32768.0f);
000048  f9304c02          LDRSH    r4,[r0,#-2]
00004c  ee004a90          VMOV     s1,r4
000050  eef80ae0          VCVT.F32.S32 s1,s1
000054  ee600a80          VMUL.F32 s1,s1,s0
000058  edc10a03          VSTR     s1,[r1,#0xc]
00005c  3110              ADDS     r1,r1,#0x10
00005e  1e5b              SUBS     r3,r3,#1
                  |L1.96|
000060  2b00              CMP      r3,#0                 ;95
000062  d1d3              BNE      |L1.12|
;;;103    
;;;104        /* Decrement the loop counter */
;;;105        blkCnt--;
;;;106      }
;;;107    
;;;108      /* If the blockSize is not a multiple of 4, compute any remaining output samples here.    
;;;109       ** No loop unrolling is used. */
;;;110      blkCnt = blockSize % 0x4u;
000064  f0020203          AND      r2,r2,#3
;;;111    
;;;112    #else
;;;113    
;;;114      /* Run the below code for Cortex-M0 */
;;;115    
;;;116      /* Loop over blockSize number of values */
;;;117      blkCnt = blockSize;
;;;118    
;;;119    #endif /* #ifndef ARM_MATH_CM0_FAMILY */
;;;120    
;;;121      while(blkCnt > 0u)
000068  e00b              B        |L1.130|
;;;122      {
;;;123        /* C = (float32_t) A / 32768 */
;;;124        /* convert from q15 to float and then store the results in the destination buffer */
;;;125        *pDst++ = ((float32_t) * pIn++ / 32768.0f);
00006a  bf00              NOP      
                  |L1.108|
00006c  f9303b02          LDRSH    r3,[r0],#2
000070  1e52              SUBS     r2,r2,#1
000072  ee003a90          VMOV     s1,r3
000076  eef80ae0          VCVT.F32.S32 s1,s1
00007a  ee600a80          VMUL.F32 s1,s1,s0
00007e  ece10a01          VSTM     r1!,{s1}
                  |L1.130|
000082  2a00              CMP      r2,#0                 ;121
000084  d1f2              BNE      |L1.108|
;;;126    
;;;127        /* Decrement the loop counter */
;;;128        blkCnt--;
;;;129      }
;;;130    }
000086  bd10              POP      {r4,pc}
;;;131    
                          ENDP

                  |L1.136|
000088  38000000          DCFS     0x38000000 ; 3.0517578125e-05

;*** Start embedded assembler ***

#line 1 "..\\..\\SRC\\CMSIS_DSP_4_5\\src\\SupportFunctions\\arm_q15_to_float.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___18_arm_q15_to_float_c_12140f18____REV16|
#line 129 "..\\..\\SRC\\CMSIS_DSP_4_5\\inc\\core_cmInstr.h"
|__asm___18_arm_q15_to_float_c_12140f18____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___18_arm_q15_to_float_c_12140f18____REVSH|
#line 144
|__asm___18_arm_q15_to_float_c_12140f18____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___18_arm_q15_to_float_c_12140f18____RRX|
#line 300
|__asm___18_arm_q15_to_float_c_12140f18____RRX| PROC
#line 301

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
